
Node 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017cc  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  000817cc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000098  20000434  00081c00  00020434  2**2
                  ALLOC
  3 .stack        00000404  200004cc  00081c98  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008d0  0008209c  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000b1a7  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001b3f  00000000  00000000  0002b65d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000318  00000000  00000000  0002d19c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000258  00000000  00000000  0002d4b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00014969  00000000  00000000  0002d70c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00007135  00000000  00000000  00042075  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0005690c  00000000  00000000  000491aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000008a4  00000000  00000000  0009fab8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000010cb  00000000  00000000  000a035c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	d0 08 00 20 c5 03 08 00 c1 03 08 00 c1 03 08 00     ... ............
   80010:	c1 03 08 00 c1 03 08 00 c1 03 08 00 00 00 00 00     ................
	...
   8002c:	c1 03 08 00 c1 03 08 00 00 00 00 00 c1 03 08 00     ................
   8003c:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   8004c:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   8005c:	c1 03 08 00 75 0d 08 00 c1 03 08 00 00 00 00 00     ....u...........
   8006c:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
	...
   80084:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   80094:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800a4:	00 00 00 00 c1 03 08 00 c1 03 08 00 51 07 08 00     ............Q...
   800b4:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800c4:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800d4:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800e4:	c1 03 08 00 c1 03 08 00 05 03 08 00 c1 03 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	000817cc 	.word	0x000817cc

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000817cc 	.word	0x000817cc
   80154:	20000438 	.word	0x20000438
   80158:	000817cc 	.word	0x000817cc
   8015c:	00000000 	.word	0x00000000

00080160 <button_init>:
#include "button.h"
#include "sam.h"


void button_init(void){
	PIOC->PIO_OER = PIO_OER_P12; // Output enable on PC19 and PA20
   80160:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80164:	4b01      	ldr	r3, [pc, #4]	; (8016c <button_init+0xc>)
   80166:	611a      	str	r2, [r3, #16]
   80168:	4770      	bx	lr
   8016a:	bf00      	nop
   8016c:	400e1200 	.word	0x400e1200

00080170 <set_button>:

}
void set_button (uint8_t val){
	if(val){
   80170:	b920      	cbnz	r0, 8017c <set_button+0xc>
		PIOC->PIO_CODR = PIO_SODR_P12; // push shit
		
	} else {
		PIOC->PIO_SODR = PIO_SODR_P12; // don't push shit
   80172:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80176:	4b04      	ldr	r3, [pc, #16]	; (80188 <set_button+0x18>)
   80178:	631a      	str	r2, [r3, #48]	; 0x30
   8017a:	4770      	bx	lr
		PIOC->PIO_CODR = PIO_SODR_P12; // push shit
   8017c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80180:	4b01      	ldr	r3, [pc, #4]	; (80188 <set_button+0x18>)
   80182:	635a      	str	r2, [r3, #52]	; 0x34
   80184:	4770      	bx	lr
   80186:	bf00      	nop
   80188:	400e1200 	.word	0x400e1200

0008018c <can_init>:
   8018c:	b4f0      	push	{r4, r5, r6, r7}
   8018e:	1857      	adds	r7, r2, r1
   80190:	2f08      	cmp	r7, #8
   80192:	bfd4      	ite	le
   80194:	2300      	movle	r3, #0
   80196:	2301      	movgt	r3, #1
   80198:	2908      	cmp	r1, #8
   8019a:	bf98      	it	ls
   8019c:	2a08      	cmpls	r2, #8
   8019e:	d85c      	bhi.n	8025a <can_init+0xce>
   801a0:	460d      	mov	r5, r1
   801a2:	2b00      	cmp	r3, #0
   801a4:	d159      	bne.n	8025a <can_init+0xce>
   801a6:	4a2e      	ldr	r2, [pc, #184]	; (80260 <can_init+0xd4>)
   801a8:	6813      	ldr	r3, [r2, #0]
   801aa:	f023 0301 	bic.w	r3, r3, #1
   801ae:	6013      	str	r3, [r2, #0]
   801b0:	6913      	ldr	r3, [r2, #16]
   801b2:	4b2c      	ldr	r3, [pc, #176]	; (80264 <can_init+0xd8>)
   801b4:	f44f 7440 	mov.w	r4, #768	; 0x300
   801b8:	645c      	str	r4, [r3, #68]	; 0x44
   801ba:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   801bc:	f024 0403 	bic.w	r4, r4, #3
   801c0:	671c      	str	r4, [r3, #112]	; 0x70
   801c2:	2403      	movs	r4, #3
   801c4:	605c      	str	r4, [r3, #4]
   801c6:	665c      	str	r4, [r3, #100]	; 0x64
   801c8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   801cc:	4c26      	ldr	r4, [pc, #152]	; (80268 <can_init+0xdc>)
   801ce:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   801d2:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801d6:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801da:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   801de:	6150      	str	r0, [r2, #20]
   801e0:	2400      	movs	r4, #0
   801e2:	e019      	b.n	80218 <can_init+0x8c>
   801e4:	481e      	ldr	r0, [pc, #120]	; (80260 <can_init+0xd4>)
   801e6:	f101 0310 	add.w	r3, r1, #16
   801ea:	015b      	lsls	r3, r3, #5
   801ec:	18c2      	adds	r2, r0, r3
   801ee:	2600      	movs	r6, #0
   801f0:	6056      	str	r6, [r2, #4]
   801f2:	eb00 1241 	add.w	r2, r0, r1, lsl #5
   801f6:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   801fa:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
   801fe:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
   80202:	50c6      	str	r6, [r0, r3]
   80204:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
   80208:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   8020c:	f8c2 321c 	str.w	r3, [r2, #540]	; 0x21c
   80210:	2301      	movs	r3, #1
   80212:	408b      	lsls	r3, r1
   80214:	431c      	orrs	r4, r3
   80216:	3101      	adds	r1, #1
   80218:	42b9      	cmp	r1, r7
   8021a:	dde3      	ble.n	801e4 <can_init+0x58>
   8021c:	2300      	movs	r3, #0
   8021e:	e00d      	b.n	8023c <can_init+0xb0>
   80220:	490f      	ldr	r1, [pc, #60]	; (80260 <can_init+0xd4>)
   80222:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   80226:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   8022a:	f8c2 0208 	str.w	r0, [r2, #520]	; 0x208
   8022e:	f103 0210 	add.w	r2, r3, #16
   80232:	0152      	lsls	r2, r2, #5
   80234:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80238:	5088      	str	r0, [r1, r2]
   8023a:	3301      	adds	r3, #1
   8023c:	42ab      	cmp	r3, r5
   8023e:	dbef      	blt.n	80220 <can_init+0x94>
   80240:	4b07      	ldr	r3, [pc, #28]	; (80260 <can_init+0xd4>)
   80242:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80244:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80248:	4a08      	ldr	r2, [pc, #32]	; (8026c <can_init+0xe0>)
   8024a:	6051      	str	r1, [r2, #4]
   8024c:	681a      	ldr	r2, [r3, #0]
   8024e:	f042 0201 	orr.w	r2, r2, #1
   80252:	601a      	str	r2, [r3, #0]
   80254:	2000      	movs	r0, #0
   80256:	bcf0      	pop	{r4, r5, r6, r7}
   80258:	4770      	bx	lr
   8025a:	2001      	movs	r0, #1
   8025c:	e7fb      	b.n	80256 <can_init+0xca>
   8025e:	bf00      	nop
   80260:	400b4000 	.word	0x400b4000
   80264:	400e0e00 	.word	0x400e0e00
   80268:	1000102b 	.word	0x1000102b
   8026c:	e000e100 	.word	0xe000e100

00080270 <can_init_def_tx_rx_mb>:
   80270:	b508      	push	{r3, lr}
   80272:	2202      	movs	r2, #2
   80274:	2101      	movs	r1, #1
   80276:	4b01      	ldr	r3, [pc, #4]	; (8027c <can_init_def_tx_rx_mb+0xc>)
   80278:	4798      	blx	r3
   8027a:	bd08      	pop	{r3, pc}
   8027c:	0008018d 	.word	0x0008018d

00080280 <can_receive>:
   80280:	014b      	lsls	r3, r1, #5
   80282:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80286:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8028a:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8028e:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80292:	d033      	beq.n	802fc <can_receive+0x7c>
   80294:	b470      	push	{r4, r5, r6}
   80296:	014b      	lsls	r3, r1, #5
   80298:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8029c:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802a0:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
   802a4:	f8d3 2218 	ldr.w	r2, [r3, #536]	; 0x218
   802a8:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   802ac:	f3c5 458a 	ubfx	r5, r5, #18, #11
   802b0:	8005      	strh	r5, [r0, #0]
   802b2:	f8d3 5210 	ldr.w	r5, [r3, #528]	; 0x210
   802b6:	f3c5 4503 	ubfx	r5, r5, #16, #4
   802ba:	7085      	strb	r5, [r0, #2]
   802bc:	2300      	movs	r3, #0
   802be:	e003      	b.n	802c8 <can_receive+0x48>
   802c0:	18c6      	adds	r6, r0, r3
   802c2:	70f2      	strb	r2, [r6, #3]
   802c4:	0a12      	lsrs	r2, r2, #8
   802c6:	3301      	adds	r3, #1
   802c8:	42ab      	cmp	r3, r5
   802ca:	da05      	bge.n	802d8 <can_receive+0x58>
   802cc:	2b03      	cmp	r3, #3
   802ce:	dcf7      	bgt.n	802c0 <can_receive+0x40>
   802d0:	18c6      	adds	r6, r0, r3
   802d2:	70f4      	strb	r4, [r6, #3]
   802d4:	0a24      	lsrs	r4, r4, #8
   802d6:	e7f6      	b.n	802c6 <can_receive+0x46>
   802d8:	4b09      	ldr	r3, [pc, #36]	; (80300 <can_receive+0x80>)
   802da:	f101 0210 	add.w	r2, r1, #16
   802de:	0152      	lsls	r2, r2, #5
   802e0:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   802e4:	5098      	str	r0, [r3, r2]
   802e6:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   802ea:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   802ee:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802f2:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   802f6:	2000      	movs	r0, #0
   802f8:	bc70      	pop	{r4, r5, r6}
   802fa:	4770      	bx	lr
   802fc:	2001      	movs	r0, #1
   802fe:	4770      	bx	lr
   80300:	400b4000 	.word	0x400b4000

00080304 <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   80304:	b510      	push	{r4, lr}
   80306:	b084      	sub	sp, #16
	if(DEBUG_INTERRUPT)printf("CAN0 interrupt\n\r");
	char can_sr = CAN0->CAN_SR; 
   80308:	4b23      	ldr	r3, [pc, #140]	; (80398 <CAN0_Handler+0x94>)
   8030a:	691c      	ldr	r4, [r3, #16]
	
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   8030c:	f014 0f06 	tst.w	r4, #6
   80310:	d034      	beq.n	8037c <CAN0_Handler+0x78>
	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   80312:	f014 0f02 	tst.w	r4, #2
   80316:	d108      	bne.n	8032a <CAN0_Handler+0x26>
			set_servo_posistion(message.data[1]);

			

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   80318:	f014 0f04 	tst.w	r4, #4
   8031c:	d025      	beq.n	8036a <CAN0_Handler+0x66>
		
		{
			can_receive(&message, 2);
   8031e:	2102      	movs	r1, #2
   80320:	a801      	add	r0, sp, #4
   80322:	4b1e      	ldr	r3, [pc, #120]	; (8039c <CAN0_Handler+0x98>)
   80324:	4798      	blx	r3
			printf("CAN0 message arrived in non-used mailbox\n\r");
		}

		if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
		if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
		for (int i = 0; i < message.data_length; i++)
   80326:	2300      	movs	r3, #0
   80328:	e024      	b.n	80374 <CAN0_Handler+0x70>
			can_receive(&message, 1);
   8032a:	2101      	movs	r1, #1
   8032c:	a801      	add	r0, sp, #4
   8032e:	4b1b      	ldr	r3, [pc, #108]	; (8039c <CAN0_Handler+0x98>)
   80330:	4798      	blx	r3
			set_joystick_horizontal_val(message.data[0]);
   80332:	f89d 0007 	ldrb.w	r0, [sp, #7]
   80336:	4b1a      	ldr	r3, [pc, #104]	; (803a0 <CAN0_Handler+0x9c>)
   80338:	4798      	blx	r3
			set_right_slider_val(message.data[1]);
   8033a:	f89d 0008 	ldrb.w	r0, [sp, #8]
   8033e:	4b19      	ldr	r3, [pc, #100]	; (803a4 <CAN0_Handler+0xa0>)
   80340:	4798      	blx	r3
			set_right_button_val(message.data[2]);
   80342:	f89d 0009 	ldrb.w	r0, [sp, #9]
   80346:	4b18      	ldr	r3, [pc, #96]	; (803a8 <CAN0_Handler+0xa4>)
   80348:	4798      	blx	r3
			set_button(message.data[2]);
   8034a:	f89d 0009 	ldrb.w	r0, [sp, #9]
   8034e:	4b17      	ldr	r3, [pc, #92]	; (803ac <CAN0_Handler+0xa8>)
   80350:	4798      	blx	r3
			for (int i = 0; i< message.data_length; i++)
   80352:	2300      	movs	r3, #0
   80354:	e000      	b.n	80358 <CAN0_Handler+0x54>
   80356:	3301      	adds	r3, #1
   80358:	f89d 2006 	ldrb.w	r2, [sp, #6]
   8035c:	4293      	cmp	r3, r2
   8035e:	dbfa      	blt.n	80356 <CAN0_Handler+0x52>
			set_servo_posistion(message.data[1]);
   80360:	f89d 0008 	ldrb.w	r0, [sp, #8]
   80364:	4b12      	ldr	r3, [pc, #72]	; (803b0 <CAN0_Handler+0xac>)
   80366:	4798      	blx	r3
   80368:	e7dd      	b.n	80326 <CAN0_Handler+0x22>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   8036a:	4812      	ldr	r0, [pc, #72]	; (803b4 <CAN0_Handler+0xb0>)
   8036c:	4b12      	ldr	r3, [pc, #72]	; (803b8 <CAN0_Handler+0xb4>)
   8036e:	4798      	blx	r3
   80370:	e7d9      	b.n	80326 <CAN0_Handler+0x22>
		for (int i = 0; i < message.data_length; i++)
   80372:	3301      	adds	r3, #1
   80374:	f89d 2006 	ldrb.w	r2, [sp, #6]
   80378:	4293      	cmp	r3, r2
   8037a:	dbfa      	blt.n	80372 <CAN0_Handler+0x6e>
			if(DEBUG_INTERRUPT)printf("%d ", message.data[i]);
		}
		if(DEBUG_INTERRUPT)printf("\n\r");
	}
	
	if(can_sr & CAN_SR_MB0)
   8037c:	f014 0f01 	tst.w	r4, #1
   80380:	d002      	beq.n	80388 <CAN0_Handler+0x84>
	{
		if(DEBUG_INTERRUPT) printf("CAN0 MB0 ready to send \n\r");
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   80382:	2201      	movs	r2, #1
   80384:	4b04      	ldr	r3, [pc, #16]	; (80398 <CAN0_Handler+0x94>)
   80386:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80388:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8038c:	4b0b      	ldr	r3, [pc, #44]	; (803bc <CAN0_Handler+0xb8>)
   8038e:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

	}
	
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/
}
   80392:	b004      	add	sp, #16
   80394:	bd10      	pop	{r4, pc}
   80396:	bf00      	nop
   80398:	400b4000 	.word	0x400b4000
   8039c:	00080281 	.word	0x00080281
   803a0:	0008056d 	.word	0x0008056d
   803a4:	00080579 	.word	0x00080579
   803a8:	00080585 	.word	0x00080585
   803ac:	00080171 	.word	0x00080171
   803b0:	0008092d 	.word	0x0008092d
   803b4:	00081730 	.word	0x00081730
   803b8:	00080cc5 	.word	0x00080cc5
   803bc:	e000e100 	.word	0xe000e100

000803c0 <Dummy_Handler>:
   803c0:	e7fe      	b.n	803c0 <Dummy_Handler>
	...

000803c4 <Reset_Handler>:
   803c4:	b508      	push	{r3, lr}
   803c6:	4b11      	ldr	r3, [pc, #68]	; (8040c <Reset_Handler+0x48>)
   803c8:	4a11      	ldr	r2, [pc, #68]	; (80410 <Reset_Handler+0x4c>)
   803ca:	429a      	cmp	r2, r3
   803cc:	d009      	beq.n	803e2 <Reset_Handler+0x1e>
   803ce:	4b0f      	ldr	r3, [pc, #60]	; (8040c <Reset_Handler+0x48>)
   803d0:	4a0f      	ldr	r2, [pc, #60]	; (80410 <Reset_Handler+0x4c>)
   803d2:	e003      	b.n	803dc <Reset_Handler+0x18>
   803d4:	6811      	ldr	r1, [r2, #0]
   803d6:	6019      	str	r1, [r3, #0]
   803d8:	3304      	adds	r3, #4
   803da:	3204      	adds	r2, #4
   803dc:	490d      	ldr	r1, [pc, #52]	; (80414 <Reset_Handler+0x50>)
   803de:	428b      	cmp	r3, r1
   803e0:	d3f8      	bcc.n	803d4 <Reset_Handler+0x10>
   803e2:	4b0d      	ldr	r3, [pc, #52]	; (80418 <Reset_Handler+0x54>)
   803e4:	e002      	b.n	803ec <Reset_Handler+0x28>
   803e6:	2200      	movs	r2, #0
   803e8:	601a      	str	r2, [r3, #0]
   803ea:	3304      	adds	r3, #4
   803ec:	4a0b      	ldr	r2, [pc, #44]	; (8041c <Reset_Handler+0x58>)
   803ee:	4293      	cmp	r3, r2
   803f0:	d3f9      	bcc.n	803e6 <Reset_Handler+0x22>
   803f2:	4b0b      	ldr	r3, [pc, #44]	; (80420 <Reset_Handler+0x5c>)
   803f4:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   803f8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   803fc:	4a09      	ldr	r2, [pc, #36]	; (80424 <Reset_Handler+0x60>)
   803fe:	6093      	str	r3, [r2, #8]
   80400:	4b09      	ldr	r3, [pc, #36]	; (80428 <Reset_Handler+0x64>)
   80402:	4798      	blx	r3
   80404:	4b09      	ldr	r3, [pc, #36]	; (8042c <Reset_Handler+0x68>)
   80406:	4798      	blx	r3
   80408:	e7fe      	b.n	80408 <Reset_Handler+0x44>
   8040a:	bf00      	nop
   8040c:	20000000 	.word	0x20000000
   80410:	000817cc 	.word	0x000817cc
   80414:	20000434 	.word	0x20000434
   80418:	20000434 	.word	0x20000434
   8041c:	200004cc 	.word	0x200004cc
   80420:	00080000 	.word	0x00080000
   80424:	e000ed00 	.word	0xe000ed00
   80428:	000815c1 	.word	0x000815c1
   8042c:	000804d5 	.word	0x000804d5

00080430 <SystemInit>:
   80430:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80434:	4a20      	ldr	r2, [pc, #128]	; (804b8 <SystemInit+0x88>)
   80436:	6013      	str	r3, [r2, #0]
   80438:	f502 7200 	add.w	r2, r2, #512	; 0x200
   8043c:	6013      	str	r3, [r2, #0]
   8043e:	4b1f      	ldr	r3, [pc, #124]	; (804bc <SystemInit+0x8c>)
   80440:	6a1b      	ldr	r3, [r3, #32]
   80442:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80446:	d107      	bne.n	80458 <SystemInit+0x28>
   80448:	4a1d      	ldr	r2, [pc, #116]	; (804c0 <SystemInit+0x90>)
   8044a:	4b1c      	ldr	r3, [pc, #112]	; (804bc <SystemInit+0x8c>)
   8044c:	621a      	str	r2, [r3, #32]
   8044e:	4b1b      	ldr	r3, [pc, #108]	; (804bc <SystemInit+0x8c>)
   80450:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80452:	f013 0f01 	tst.w	r3, #1
   80456:	d0fa      	beq.n	8044e <SystemInit+0x1e>
   80458:	4a1a      	ldr	r2, [pc, #104]	; (804c4 <SystemInit+0x94>)
   8045a:	4b18      	ldr	r3, [pc, #96]	; (804bc <SystemInit+0x8c>)
   8045c:	621a      	str	r2, [r3, #32]
   8045e:	4b17      	ldr	r3, [pc, #92]	; (804bc <SystemInit+0x8c>)
   80460:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80462:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80466:	d0fa      	beq.n	8045e <SystemInit+0x2e>
   80468:	4a14      	ldr	r2, [pc, #80]	; (804bc <SystemInit+0x8c>)
   8046a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8046c:	f023 0303 	bic.w	r3, r3, #3
   80470:	f043 0301 	orr.w	r3, r3, #1
   80474:	6313      	str	r3, [r2, #48]	; 0x30
   80476:	4b11      	ldr	r3, [pc, #68]	; (804bc <SystemInit+0x8c>)
   80478:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8047a:	f013 0f08 	tst.w	r3, #8
   8047e:	d0fa      	beq.n	80476 <SystemInit+0x46>
   80480:	4a11      	ldr	r2, [pc, #68]	; (804c8 <SystemInit+0x98>)
   80482:	4b0e      	ldr	r3, [pc, #56]	; (804bc <SystemInit+0x8c>)
   80484:	629a      	str	r2, [r3, #40]	; 0x28
   80486:	4b0d      	ldr	r3, [pc, #52]	; (804bc <SystemInit+0x8c>)
   80488:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8048a:	f013 0f02 	tst.w	r3, #2
   8048e:	d0fa      	beq.n	80486 <SystemInit+0x56>
   80490:	2211      	movs	r2, #17
   80492:	4b0a      	ldr	r3, [pc, #40]	; (804bc <SystemInit+0x8c>)
   80494:	631a      	str	r2, [r3, #48]	; 0x30
   80496:	4b09      	ldr	r3, [pc, #36]	; (804bc <SystemInit+0x8c>)
   80498:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8049a:	f013 0f08 	tst.w	r3, #8
   8049e:	d0fa      	beq.n	80496 <SystemInit+0x66>
   804a0:	2212      	movs	r2, #18
   804a2:	4b06      	ldr	r3, [pc, #24]	; (804bc <SystemInit+0x8c>)
   804a4:	631a      	str	r2, [r3, #48]	; 0x30
   804a6:	4b05      	ldr	r3, [pc, #20]	; (804bc <SystemInit+0x8c>)
   804a8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804aa:	f013 0f08 	tst.w	r3, #8
   804ae:	d0fa      	beq.n	804a6 <SystemInit+0x76>
   804b0:	4a06      	ldr	r2, [pc, #24]	; (804cc <SystemInit+0x9c>)
   804b2:	4b07      	ldr	r3, [pc, #28]	; (804d0 <SystemInit+0xa0>)
   804b4:	601a      	str	r2, [r3, #0]
   804b6:	4770      	bx	lr
   804b8:	400e0a00 	.word	0x400e0a00
   804bc:	400e0600 	.word	0x400e0600
   804c0:	00370809 	.word	0x00370809
   804c4:	01370809 	.word	0x01370809
   804c8:	200d3f01 	.word	0x200d3f01
   804cc:	0501bd00 	.word	0x0501bd00
   804d0:	20000000 	.word	0x20000000

000804d4 <main>:



#define can_br 0x01141255 
int main(void)
{
   804d4:	b508      	push	{r3, lr}
    /* Initialize the SAM system */
    SystemInit();
   804d6:	4b17      	ldr	r3, [pc, #92]	; (80534 <main+0x60>)
   804d8:	4798      	blx	r3
	configure_uart();
   804da:	4b17      	ldr	r3, [pc, #92]	; (80538 <main+0x64>)
   804dc:	4798      	blx	r3
	can_init_def_tx_rx_mb(can_br);
   804de:	4817      	ldr	r0, [pc, #92]	; (8053c <main+0x68>)
   804e0:	4b17      	ldr	r3, [pc, #92]	; (80540 <main+0x6c>)
   804e2:	4798      	blx	r3
	timer_init();
   804e4:	4b17      	ldr	r3, [pc, #92]	; (80544 <main+0x70>)
   804e6:	4798      	blx	r3
	PWM_init();
   804e8:	4b17      	ldr	r3, [pc, #92]	; (80548 <main+0x74>)
   804ea:	4798      	blx	r3
	ADC_init();
   804ec:	4b17      	ldr	r3, [pc, #92]	; (8054c <main+0x78>)
   804ee:	4798      	blx	r3
	motor_init();
   804f0:	4b17      	ldr	r3, [pc, #92]	; (80550 <main+0x7c>)
   804f2:	4798      	blx	r3
	DAC_init();
   804f4:	4b17      	ldr	r3, [pc, #92]	; (80554 <main+0x80>)
   804f6:	4798      	blx	r3
	button_init();
   804f8:	4b17      	ldr	r3, [pc, #92]	; (80558 <main+0x84>)
   804fa:	4798      	blx	r3
	
	
	WDT->WDT_MR = WDT_MR_WDDIS; // Disable WDT
   804fc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80500:	4b16      	ldr	r3, [pc, #88]	; (8055c <main+0x88>)
   80502:	605a      	str	r2, [r3, #4]
	
	PIOA->PIO_OER = PIO_OER_P19 | PIO_OER_P20; // Output enable on PA19 and PA20
   80504:	f5a3 6345 	sub.w	r3, r3, #3152	; 0xc50
   80508:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
   8050c:	611a      	str	r2, [r3, #16]

	
	PIOA->PIO_SODR = PIO_SODR_P19; // | PIO_SODR_P20; // Set PA19 and PA20 high ( Turn on both leds ) 
   8050e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80512:	631a      	str	r2, [r3, #48]	; 0x30
	//motor_set_direction(1);
	motor_disable_break(1);
   80514:	2001      	movs	r0, #1
   80516:	4b12      	ldr	r3, [pc, #72]	; (80560 <main+0x8c>)
   80518:	4798      	blx	r3
    /* Replace with your application code */
	//motor_encoder_reset();
    while (1) 
    {	
		//motor_raw_dog();
		motor_pid_controlled();
   8051a:	4b12      	ldr	r3, [pc, #72]	; (80564 <main+0x90>)
   8051c:	4798      	blx	r3
		if(goal()){
   8051e:	4b12      	ldr	r3, [pc, #72]	; (80568 <main+0x94>)
   80520:	4798      	blx	r3
   80522:	2800      	cmp	r0, #0
   80524:	d0f9      	beq.n	8051a <main+0x46>
			CAN_MESSAGE* message;
			message->data[0] = 1;
   80526:	2201      	movs	r2, #1
   80528:	2300      	movs	r3, #0
   8052a:	70da      	strb	r2, [r3, #3]
			message->data_length = 1;
   8052c:	709a      	strb	r2, [r3, #2]
			message->id = 1;
   8052e:	801a      	strh	r2, [r3, #0]
   80530:	e7f3      	b.n	8051a <main+0x46>
   80532:	bf00      	nop
   80534:	00080431 	.word	0x00080431
   80538:	00080ce9 	.word	0x00080ce9
   8053c:	01141255 	.word	0x01141255
   80540:	00080271 	.word	0x00080271
   80544:	00080969 	.word	0x00080969
   80548:	00080861 	.word	0x00080861
   8054c:	000807fd 	.word	0x000807fd
   80550:	00080671 	.word	0x00080671
   80554:	00080635 	.word	0x00080635
   80558:	00080161 	.word	0x00080161
   8055c:	400e1a50 	.word	0x400e1a50
   80560:	0008059d 	.word	0x0008059d
   80564:	000806c9 	.word	0x000806c9
   80568:	00080849 	.word	0x00080849

0008056c <set_joystick_horizontal_val>:

#define ENCODER_DATA_MASK   (0xFF << DO0_IDX)
#define MIN_ENCODER_VALUE   0
#define MAX_ENCODER_VALUE   8800

void set_joystick_horizontal_val(uint8_t val) {joystick_horizontal_val = val;}
   8056c:	4b01      	ldr	r3, [pc, #4]	; (80574 <set_joystick_horizontal_val+0x8>)
   8056e:	7018      	strb	r0, [r3, #0]
   80570:	4770      	bx	lr
   80572:	bf00      	nop
   80574:	20000450 	.word	0x20000450

00080578 <set_right_slider_val>:
void set_right_slider_val(uint8_t val) {right_slider_val = val;}
   80578:	4b01      	ldr	r3, [pc, #4]	; (80580 <set_right_slider_val+0x8>)
   8057a:	7058      	strb	r0, [r3, #1]
   8057c:	4770      	bx	lr
   8057e:	bf00      	nop
   80580:	20000450 	.word	0x20000450

00080584 <set_right_button_val>:
void set_right_button_val(uint8_t val) {right_button_val = val;}
   80584:	4b01      	ldr	r3, [pc, #4]	; (8058c <set_right_button_val+0x8>)
   80586:	7098      	strb	r0, [r3, #2]
   80588:	4770      	bx	lr
   8058a:	bf00      	nop
   8058c:	20000450 	.word	0x20000450

00080590 <get_joystick_horizontal_val>:
	
uint8_t get_joystick_horizontal_val(void) {return joystick_horizontal_val;}
   80590:	4b01      	ldr	r3, [pc, #4]	; (80598 <get_joystick_horizontal_val+0x8>)
   80592:	7818      	ldrb	r0, [r3, #0]
   80594:	4770      	bx	lr
   80596:	bf00      	nop
   80598:	20000450 	.word	0x20000450

0008059c <motor_disable_break>:
	PIOD->PIO_OER = DIR | EN | SEL | NOT_RST | NOT_IOE ;
	PIOC->PIO_ODR = (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7);
}

void motor_disable_break(uint8_t bool){
	if(bool){
   8059c:	b920      	cbnz	r0, 805a8 <motor_disable_break+0xc>
		PIOD->PIO_SODR = PIO_SODR_P9; // Set MJ1_EN high
		return;
	}
	PIOD->PIO_CODR = PIO_CODR_P9; // Set MJ1_EN low
   8059e:	f44f 7200 	mov.w	r2, #512	; 0x200
   805a2:	4b04      	ldr	r3, [pc, #16]	; (805b4 <motor_disable_break+0x18>)
   805a4:	635a      	str	r2, [r3, #52]	; 0x34
   805a6:	4770      	bx	lr
		PIOD->PIO_SODR = PIO_SODR_P9; // Set MJ1_EN high
   805a8:	f44f 7200 	mov.w	r2, #512	; 0x200
   805ac:	4b01      	ldr	r3, [pc, #4]	; (805b4 <motor_disable_break+0x18>)
   805ae:	631a      	str	r2, [r3, #48]	; 0x30
		return;
   805b0:	4770      	bx	lr
   805b2:	bf00      	nop
   805b4:	400e1400 	.word	0x400e1400

000805b8 <motor_set_direction>:

}

void motor_set_direction(uint8_t dir){
	if(dir){
   805b8:	b920      	cbnz	r0, 805c4 <motor_set_direction+0xc>
		PIOD->PIO_SODR = PIO_SODR_P10; // Set MJ1_SEL high
		return;
	}
	PIOD->PIO_CODR = PIO_CODR_P10; // Set MJ1_SEL low
   805ba:	f44f 6280 	mov.w	r2, #1024	; 0x400
   805be:	4b04      	ldr	r3, [pc, #16]	; (805d0 <motor_set_direction+0x18>)
   805c0:	635a      	str	r2, [r3, #52]	; 0x34
   805c2:	4770      	bx	lr
		PIOD->PIO_SODR = PIO_SODR_P10; // Set MJ1_SEL high
   805c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
   805c8:	4b01      	ldr	r3, [pc, #4]	; (805d0 <motor_set_direction+0x18>)
   805ca:	631a      	str	r2, [r3, #48]	; 0x30
		return;
   805cc:	4770      	bx	lr
   805ce:	bf00      	nop
   805d0:	400e1400 	.word	0x400e1400

000805d4 <motor_encoder_reset>:
		motor_set_direction(1);
	}
}

void motor_encoder_reset(void){
	PIOD->PIO_CODR = NOT_RST;
   805d4:	4b02      	ldr	r3, [pc, #8]	; (805e0 <motor_encoder_reset+0xc>)
   805d6:	2202      	movs	r2, #2
   805d8:	635a      	str	r2, [r3, #52]	; 0x34
	PIOD->PIO_SODR = NOT_RST;
   805da:	631a      	str	r2, [r3, #48]	; 0x30
   805dc:	4770      	bx	lr
   805de:	bf00      	nop
   805e0:	400e1400 	.word	0x400e1400

000805e4 <motor_encoder_read>:
}
	
uint16_t motor_encoder_read(void){
   805e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	// Encoder output enable
	PIOD->PIO_CODR = NOT_IOE;
   805e8:	4d0e      	ldr	r5, [pc, #56]	; (80624 <motor_encoder_read+0x40>)
   805ea:	2701      	movs	r7, #1
   805ec:	636f      	str	r7, [r5, #52]	; 0x34
	
	PIOD->PIO_SODR = SEL;// Set SEL = 1
   805ee:	f04f 0904 	mov.w	r9, #4
   805f2:	f8c5 9030 	str.w	r9, [r5, #48]	; 0x30
	delay_us(20);
   805f6:	2014      	movs	r0, #20
   805f8:	f8df 8034 	ldr.w	r8, [pc, #52]	; 80630 <motor_encoder_read+0x4c>
   805fc:	47c0      	blx	r8
	uint8_t low_byte = ((PIOC->PIO_PDSR) & (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7)) >> 1;
   805fe:	4e0a      	ldr	r6, [pc, #40]	; (80628 <motor_encoder_read+0x44>)
   80600:	6bf4      	ldr	r4, [r6, #60]	; 0x3c
   80602:	f3c4 0447 	ubfx	r4, r4, #1, #8
	
	
	
	PIOD->PIO_CODR = SEL; // Set SEL = 0
   80606:	f8c5 9034 	str.w	r9, [r5, #52]	; 0x34
	delay_us(20);
   8060a:	2014      	movs	r0, #20
   8060c:	47c0      	blx	r8
	uint8_t high_byte = ((PIOC->PIO_PDSR) & (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7)) >> 1;
   8060e:	6bf6      	ldr	r6, [r6, #60]	; 0x3c
   80610:	40fe      	lsrs	r6, r7
		
	motor_encoder_reset();
   80612:	4b06      	ldr	r3, [pc, #24]	; (8062c <motor_encoder_read+0x48>)
   80614:	4798      	blx	r3
	
	uint16_t data = low_byte | (high_byte << 8);
   80616:	ea44 2006 	orr.w	r0, r4, r6, lsl #8
	
	// Encoder output disable
	PIOD->PIO_SODR = NOT_IOE;
   8061a:	632f      	str	r7, [r5, #48]	; 0x30
	return data;
}
   8061c:	b280      	uxth	r0, r0
   8061e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80622:	bf00      	nop
   80624:	400e1400 	.word	0x400e1400
   80628:	400e1200 	.word	0x400e1200
   8062c:	000805d5 	.word	0x000805d5
   80630:	000809fd 	.word	0x000809fd

00080634 <DAC_init>:

void DAC_init(void){
	
	//set perifiral clk on PMC
	// Enable peripheral clock on PID38 (DACC)
	PMC->PMC_PCER1 |= PMC_PCER1_PID38;
   80634:	4a0c      	ldr	r2, [pc, #48]	; (80668 <DAC_init+0x34>)
   80636:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   8063a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8063e:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	
	// Disable IO for PB16, which enables Peripheral control of the pin
	PIOB->PIO_PDR |= PIO_PDR_P16;
   80642:	f502 6220 	add.w	r2, r2, #2560	; 0xa00
   80646:	6853      	ldr	r3, [r2, #4]
   80648:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8064c:	6053      	str	r3, [r2, #4]
	
	
	//set DAC Mode
	
	DACC->DACC_MR |= DACC_MR_USER_SEL_CHANNEL1;
   8064e:	4b07      	ldr	r3, [pc, #28]	; (8066c <DAC_init+0x38>)
   80650:	685a      	ldr	r2, [r3, #4]
   80652:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
   80656:	605a      	str	r2, [r3, #4]
	DACC->DACC_MR |= DACC_MR_WORD_HALF;
   80658:	685a      	ldr	r2, [r3, #4]
   8065a:	605a      	str	r2, [r3, #4]
	
	//Enable channel 1
	DACC->DACC_CHER |= DACC_CHER_CH1;
   8065c:	691a      	ldr	r2, [r3, #16]
   8065e:	f042 0202 	orr.w	r2, r2, #2
   80662:	611a      	str	r2, [r3, #16]
   80664:	4770      	bx	lr
   80666:	bf00      	nop
   80668:	400e0600 	.word	0x400e0600
   8066c:	400c8000 	.word	0x400c8000

00080670 <motor_init>:
void motor_init(void){
   80670:	b508      	push	{r3, lr}
	DAC_init(); 
   80672:	4b0c      	ldr	r3, [pc, #48]	; (806a4 <motor_init+0x34>)
   80674:	4798      	blx	r3
	PMC->PMC_PCER0 |= PMC_PCER0_PID13 ;
   80676:	4a0c      	ldr	r2, [pc, #48]	; (806a8 <motor_init+0x38>)
   80678:	6913      	ldr	r3, [r2, #16]
   8067a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8067e:	6113      	str	r3, [r2, #16]
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_PID(13) ;
   80680:	f8d2 310c 	ldr.w	r3, [r2, #268]	; 0x10c
   80684:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   80688:	f043 030d 	orr.w	r3, r3, #13
   8068c:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
	PIOD->PIO_OER = DIR | EN | SEL | NOT_RST | NOT_IOE ;
   80690:	f240 6207 	movw	r2, #1543	; 0x607
   80694:	4b05      	ldr	r3, [pc, #20]	; (806ac <motor_init+0x3c>)
   80696:	611a      	str	r2, [r3, #16]
	PIOC->PIO_ODR = (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7);
   80698:	f44f 72ff 	mov.w	r2, #510	; 0x1fe
   8069c:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
   806a0:	615a      	str	r2, [r3, #20]
   806a2:	bd08      	pop	{r3, pc}
   806a4:	00080635 	.word	0x00080635
   806a8:	400e0600 	.word	0x400e0600
   806ac:	400e1400 	.word	0x400e1400

000806b0 <motor_set_speed>:
}


void motor_set_speed(uint32_t percentage){

	uint32_t digitalspeed = ((percentage))*0x1C ;
   806b0:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
   806b4:	0083      	lsls	r3, r0, #2
   806b6:	461a      	mov	r2, r3
	
	if(digitalspeed != 0) digitalspeed += 40*0x1C;
   806b8:	b10b      	cbz	r3, 806be <motor_set_speed+0xe>
   806ba:	f503 628c 	add.w	r2, r3, #1120	; 0x460

	//set conversion reg in DAC
	DACC->DACC_CDR = digitalspeed;	
   806be:	4b01      	ldr	r3, [pc, #4]	; (806c4 <motor_set_speed+0x14>)
   806c0:	621a      	str	r2, [r3, #32]
   806c2:	4770      	bx	lr
   806c4:	400c8000 	.word	0x400c8000

000806c8 <motor_pid_controlled>:
void motor_pid_controlled(void){
   806c8:	b510      	push	{r4, lr}
	int u = pid_get_u();
   806ca:	4b09      	ldr	r3, [pc, #36]	; (806f0 <motor_pid_controlled+0x28>)
   806cc:	4798      	blx	r3
   806ce:	4604      	mov	r4, r0
	motor_set_speed(abs(u));
   806d0:	ea80 70e0 	eor.w	r0, r0, r0, asr #31
   806d4:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
   806d8:	4b06      	ldr	r3, [pc, #24]	; (806f4 <motor_pid_controlled+0x2c>)
   806da:	4798      	blx	r3
	if (u < 0){
   806dc:	2c00      	cmp	r4, #0
   806de:	db03      	blt.n	806e8 <motor_pid_controlled+0x20>
		motor_set_direction(1);
   806e0:	2001      	movs	r0, #1
   806e2:	4b05      	ldr	r3, [pc, #20]	; (806f8 <motor_pid_controlled+0x30>)
   806e4:	4798      	blx	r3
   806e6:	bd10      	pop	{r4, pc}
		motor_set_direction(0);
   806e8:	2000      	movs	r0, #0
   806ea:	4b03      	ldr	r3, [pc, #12]	; (806f8 <motor_pid_controlled+0x30>)
   806ec:	4798      	blx	r3
   806ee:	bd10      	pop	{r4, pc}
   806f0:	000807e9 	.word	0x000807e9
   806f4:	000806b1 	.word	0x000806b1
   806f8:	000805b9 	.word	0x000805b9

000806fc <pid_update_e>:
TC1_Handler(){
	REG_TC0_SR1;
	pid_update_e();
}

void pid_update_e (void){
   806fc:	b510      	push	{r4, lr}
	e_pri = e;
   806fe:	4b10      	ldr	r3, [pc, #64]	; (80740 <pid_update_e+0x44>)
   80700:	681a      	ldr	r2, [r3, #0]
   80702:	605a      	str	r2, [r3, #4]
	e_i += e;
   80704:	681a      	ldr	r2, [r3, #0]
   80706:	6899      	ldr	r1, [r3, #8]
   80708:	440a      	add	r2, r1
   8070a:	609a      	str	r2, [r3, #8]
	uint16_t encoder_val = motor_encoder_read();
   8070c:	4b0d      	ldr	r3, [pc, #52]	; (80744 <pid_update_e+0x48>)
   8070e:	4798      	blx	r3
   80710:	4604      	mov	r4, r0
	if(encoder_val > 10000) encoder_val = 0;
   80712:	f242 7310 	movw	r3, #10000	; 0x2710
   80716:	4298      	cmp	r0, r3
   80718:	d900      	bls.n	8071c <pid_update_e+0x20>
   8071a:	2400      	movs	r4, #0
	e = get_joystick_horizontal_val()-(100-(encoder_val*100)/9010);
   8071c:	4b0a      	ldr	r3, [pc, #40]	; (80748 <pid_update_e+0x4c>)
   8071e:	4798      	blx	r3
   80720:	f06f 0363 	mvn.w	r3, #99	; 0x63
   80724:	fb03 f304 	mul.w	r3, r3, r4
   80728:	4a08      	ldr	r2, [pc, #32]	; (8074c <pid_update_e+0x50>)
   8072a:	fb82 1203 	smull	r1, r2, r2, r3
   8072e:	17db      	asrs	r3, r3, #31
   80730:	ebc3 23e2 	rsb	r3, r3, r2, asr #11
   80734:	3364      	adds	r3, #100	; 0x64
   80736:	1ac0      	subs	r0, r0, r3
   80738:	4b01      	ldr	r3, [pc, #4]	; (80740 <pid_update_e+0x44>)
   8073a:	6018      	str	r0, [r3, #0]
   8073c:	bd10      	pop	{r4, pc}
   8073e:	bf00      	nop
   80740:	20000454 	.word	0x20000454
   80744:	000805e5 	.word	0x000805e5
   80748:	00080591 	.word	0x00080591
   8074c:	3a308779 	.word	0x3a308779

00080750 <TC1_Handler>:
TC1_Handler(){
   80750:	b508      	push	{r3, lr}
	REG_TC0_SR1;
   80752:	4b02      	ldr	r3, [pc, #8]	; (8075c <TC1_Handler+0xc>)
   80754:	681b      	ldr	r3, [r3, #0]
	pid_update_e();
   80756:	4b02      	ldr	r3, [pc, #8]	; (80760 <TC1_Handler+0x10>)
   80758:	4798      	blx	r3
   8075a:	bd08      	pop	{r3, pc}
   8075c:	40080060 	.word	0x40080060
   80760:	000806fd 	.word	0x000806fd
   80764:	00000000 	.word	0x00000000

00080768 <pid_update_u>:
}

void pid_update_u (void){
   80768:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
	u = K_p*e + (e_i*K_i*T_ms)/1000;
   8076c:	4c16      	ldr	r4, [pc, #88]	; (807c8 <pid_update_u+0x60>)
   8076e:	6820      	ldr	r0, [r4, #0]
   80770:	4e16      	ldr	r6, [pc, #88]	; (807cc <pid_update_u+0x64>)
   80772:	47b0      	blx	r6
   80774:	4d16      	ldr	r5, [pc, #88]	; (807d0 <pid_update_u+0x68>)
   80776:	a310      	add	r3, pc, #64	; (adr r3, 807b8 <pid_update_u+0x50>)
   80778:	e9d3 2300 	ldrd	r2, r3, [r3]
   8077c:	47a8      	blx	r5
   8077e:	4680      	mov	r8, r0
   80780:	4689      	mov	r9, r1
   80782:	68a0      	ldr	r0, [r4, #8]
   80784:	47b0      	blx	r6
   80786:	a30e      	add	r3, pc, #56	; (adr r3, 807c0 <pid_update_u+0x58>)
   80788:	e9d3 2300 	ldrd	r2, r3, [r3]
   8078c:	47a8      	blx	r5
   8078e:	2200      	movs	r2, #0
   80790:	4b10      	ldr	r3, [pc, #64]	; (807d4 <pid_update_u+0x6c>)
   80792:	47a8      	blx	r5
   80794:	2200      	movs	r2, #0
   80796:	4b10      	ldr	r3, [pc, #64]	; (807d8 <pid_update_u+0x70>)
   80798:	4d10      	ldr	r5, [pc, #64]	; (807dc <pid_update_u+0x74>)
   8079a:	47a8      	blx	r5
   8079c:	4602      	mov	r2, r0
   8079e:	460b      	mov	r3, r1
   807a0:	4640      	mov	r0, r8
   807a2:	4649      	mov	r1, r9
   807a4:	4d0e      	ldr	r5, [pc, #56]	; (807e0 <pid_update_u+0x78>)
   807a6:	47a8      	blx	r5
   807a8:	4b0e      	ldr	r3, [pc, #56]	; (807e4 <pid_update_u+0x7c>)
   807aa:	4798      	blx	r3
   807ac:	60e0      	str	r0, [r4, #12]
   807ae:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   807b2:	bf00      	nop
   807b4:	f3af 8000 	nop.w
   807b8:	9999999a 	.word	0x9999999a
   807bc:	3fe99999 	.word	0x3fe99999
   807c0:	9999999a 	.word	0x9999999a
   807c4:	3fb99999 	.word	0x3fb99999
   807c8:	20000454 	.word	0x20000454
   807cc:	00081081 	.word	0x00081081
   807d0:	0008114d 	.word	0x0008114d
   807d4:	40590000 	.word	0x40590000
   807d8:	408f4000 	.word	0x408f4000
   807dc:	000813a1 	.word	0x000813a1
   807e0:	00080de9 	.word	0x00080de9
   807e4:	00081571 	.word	0x00081571

000807e8 <pid_get_u>:

}

int pid_get_u (void){
   807e8:	b508      	push	{r3, lr}
	pid_update_u();
   807ea:	4b02      	ldr	r3, [pc, #8]	; (807f4 <pid_get_u+0xc>)
   807ec:	4798      	blx	r3
	return u;
   807ee:	4b02      	ldr	r3, [pc, #8]	; (807f8 <pid_get_u+0x10>)
   807f0:	68d8      	ldr	r0, [r3, #12]
   807f2:	bd08      	pop	{r3, pc}
   807f4:	00080769 	.word	0x00080769
   807f8:	20000454 	.word	0x20000454

000807fc <ADC_init>:
   807fc:	4a0d      	ldr	r2, [pc, #52]	; (80834 <ADC_init+0x38>)
   807fe:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80802:	f043 0320 	orr.w	r3, r3, #32
   80806:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   8080a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
   8080e:	6853      	ldr	r3, [r2, #4]
   80810:	f043 0304 	orr.w	r3, r3, #4
   80814:	6053      	str	r3, [r2, #4]
   80816:	4b08      	ldr	r3, [pc, #32]	; (80838 <ADC_init+0x3c>)
   80818:	691a      	ldr	r2, [r3, #16]
   8081a:	f042 0201 	orr.w	r2, r2, #1
   8081e:	611a      	str	r2, [r3, #16]
   80820:	685a      	ldr	r2, [r3, #4]
   80822:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   80826:	605a      	str	r2, [r3, #4]
   80828:	681a      	ldr	r2, [r3, #0]
   8082a:	f042 0202 	orr.w	r2, r2, #2
   8082e:	601a      	str	r2, [r3, #0]
   80830:	4770      	bx	lr
   80832:	bf00      	nop
   80834:	400e0600 	.word	0x400e0600
   80838:	400c0000 	.word	0x400c0000

0008083c <ADC_read>:
   8083c:	4b01      	ldr	r3, [pc, #4]	; (80844 <ADC_read+0x8>)
   8083e:	6d18      	ldr	r0, [r3, #80]	; 0x50
   80840:	4770      	bx	lr
   80842:	bf00      	nop
   80844:	400c0000 	.word	0x400c0000

00080848 <goal>:
   80848:	b508      	push	{r3, lr}
   8084a:	4b04      	ldr	r3, [pc, #16]	; (8085c <goal+0x14>)
   8084c:	4798      	blx	r3
   8084e:	f5b0 7ffa 	cmp.w	r0, #500	; 0x1f4
   80852:	d301      	bcc.n	80858 <goal+0x10>
   80854:	2000      	movs	r0, #0
   80856:	bd08      	pop	{r3, pc}
   80858:	2001      	movs	r0, #1
   8085a:	bd08      	pop	{r3, pc}
   8085c:	0008083d 	.word	0x0008083d

00080860 <PWM_init>:
   80860:	4a21      	ldr	r2, [pc, #132]	; (808e8 <PWM_init+0x88>)
   80862:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80866:	f043 0310 	orr.w	r3, r3, #16
   8086a:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   8086e:	4b1f      	ldr	r3, [pc, #124]	; (808ec <PWM_init+0x8c>)
   80870:	685a      	ldr	r2, [r3, #4]
   80872:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80876:	605a      	str	r2, [r3, #4]
   80878:	685a      	ldr	r2, [r3, #4]
   8087a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   8087e:	605a      	str	r2, [r3, #4]
   80880:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80882:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80886:	671a      	str	r2, [r3, #112]	; 0x70
   80888:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8088a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   8088e:	671a      	str	r2, [r3, #112]	; 0x70
   80890:	4a17      	ldr	r2, [pc, #92]	; (808f0 <PWM_init+0x90>)
   80892:	6813      	ldr	r3, [r2, #0]
   80894:	f043 0307 	orr.w	r3, r3, #7
   80898:	6013      	str	r3, [r2, #0]
   8089a:	3220      	adds	r2, #32
   8089c:	6813      	ldr	r3, [r2, #0]
   8089e:	f043 0307 	orr.w	r3, r3, #7
   808a2:	6013      	str	r3, [r2, #0]
   808a4:	4b13      	ldr	r3, [pc, #76]	; (808f4 <PWM_init+0x94>)
   808a6:	681a      	ldr	r2, [r3, #0]
   808a8:	f243 3145 	movw	r1, #13125	; 0x3345
   808ac:	430a      	orrs	r2, r1
   808ae:	601a      	str	r2, [r3, #0]
   808b0:	4a11      	ldr	r2, [pc, #68]	; (808f8 <PWM_init+0x98>)
   808b2:	6813      	ldr	r3, [r2, #0]
   808b4:	430b      	orrs	r3, r1
   808b6:	6013      	str	r3, [r2, #0]
   808b8:	3a28      	subs	r2, #40	; 0x28
   808ba:	6813      	ldr	r3, [r2, #0]
   808bc:	f443 5343 	orr.w	r3, r3, #12480	; 0x30c0
   808c0:	f043 0335 	orr.w	r3, r3, #53	; 0x35
   808c4:	6013      	str	r3, [r2, #0]
   808c6:	3220      	adds	r2, #32
   808c8:	6813      	ldr	r3, [r2, #0]
   808ca:	f443 5337 	orr.w	r3, r3, #11712	; 0x2dc0
   808ce:	f043 0322 	orr.w	r3, r3, #34	; 0x22
   808d2:	6013      	str	r3, [r2, #0]
   808d4:	4b09      	ldr	r3, [pc, #36]	; (808fc <PWM_init+0x9c>)
   808d6:	685a      	ldr	r2, [r3, #4]
   808d8:	f042 0220 	orr.w	r2, r2, #32
   808dc:	605a      	str	r2, [r3, #4]
   808de:	685a      	ldr	r2, [r3, #4]
   808e0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   808e4:	605a      	str	r2, [r3, #4]
   808e6:	4770      	bx	lr
   808e8:	400e0600 	.word	0x400e0600
   808ec:	400e1200 	.word	0x400e1200
   808f0:	400942a0 	.word	0x400942a0
   808f4:	400942ac 	.word	0x400942ac
   808f8:	400942cc 	.word	0x400942cc
   808fc:	40094000 	.word	0x40094000

00080900 <PWM_update_dutycycle>:
   80900:	4b07      	ldr	r3, [pc, #28]	; (80920 <PWM_update_dutycycle+0x20>)
   80902:	fb03 f000 	mul.w	r0, r3, r0
   80906:	f500 10a0 	add.w	r0, r0, #1310720	; 0x140000
   8090a:	f500 60d2 	add.w	r0, r0, #1680	; 0x690
   8090e:	4b05      	ldr	r3, [pc, #20]	; (80924 <PWM_update_dutycycle+0x24>)
   80910:	fba3 3000 	umull	r3, r0, r3, r0
   80914:	0940      	lsrs	r0, r0, #5
   80916:	4b04      	ldr	r3, [pc, #16]	; (80928 <PWM_update_dutycycle+0x28>)
   80918:	6018      	str	r0, [r3, #0]
   8091a:	3320      	adds	r3, #32
   8091c:	6018      	str	r0, [r3, #0]
   8091e:	4770      	bx	lr
   80920:	ffffccbc 	.word	0xffffccbc
   80924:	51eb851f 	.word	0x51eb851f
   80928:	400942a8 	.word	0x400942a8

0008092c <set_servo_posistion>:

#include "servocontrol.h"
#include <stdio.h>


void set_servo_posistion(uint32_t joystick_percentage){
   8092c:	b538      	push	{r3, r4, r5, lr}
   8092e:	4604      	mov	r4, r0
	
	printf("joystick: %d \n\r",joystick_percentage);
   80930:	4601      	mov	r1, r0
   80932:	4808      	ldr	r0, [pc, #32]	; (80954 <set_servo_posistion+0x28>)
   80934:	4d08      	ldr	r5, [pc, #32]	; (80958 <set_servo_posistion+0x2c>)
   80936:	47a8      	blx	r5
	
	
	uint32_t dutyCycle = (100-joystick_percentage)/20 + 5;
   80938:	f1c4 0464 	rsb	r4, r4, #100	; 0x64
   8093c:	4b07      	ldr	r3, [pc, #28]	; (8095c <set_servo_posistion+0x30>)
   8093e:	fba3 3404 	umull	r3, r4, r3, r4
   80942:	0924      	lsrs	r4, r4, #4
   80944:	3405      	adds	r4, #5
	printf("duty    : %d \n\r",dutyCycle);
   80946:	4621      	mov	r1, r4
   80948:	4805      	ldr	r0, [pc, #20]	; (80960 <set_servo_posistion+0x34>)
   8094a:	47a8      	blx	r5
	
	//printf("dutyculce %d \n\r", dutyCycle);
	
	
	PWM_update_dutycycle(dutyCycle);
   8094c:	4620      	mov	r0, r4
   8094e:	4b05      	ldr	r3, [pc, #20]	; (80964 <set_servo_posistion+0x38>)
   80950:	4798      	blx	r3
   80952:	bd38      	pop	{r3, r4, r5, pc}
   80954:	0008175c 	.word	0x0008175c
   80958:	00080cc5 	.word	0x00080cc5
   8095c:	cccccccd 	.word	0xcccccccd
   80960:	0008176c 	.word	0x0008176c
   80964:	00080901 	.word	0x00080901

00080968 <timer_init>:
#include "sam.h"
#include <stdio.h>

void timer_init( void ){	
	// Delay
	PMC->PMC_PCR |= PMC_PCR_DIV_PERIPH_DIV_MCK | PMC_PCR_EN;
   80968:	4b1e      	ldr	r3, [pc, #120]	; (809e4 <timer_init+0x7c>)
   8096a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   8096e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
   80972:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCER0 |= PMC_PCER0_PID27;
   80976:	691a      	ldr	r2, [r3, #16]
   80978:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
   8097c:	611a      	str	r2, [r3, #16]

	REG_TC0_CMR0 |= TC_CMR_WAVE;
   8097e:	4a1a      	ldr	r2, [pc, #104]	; (809e8 <timer_init+0x80>)
   80980:	6811      	ldr	r1, [r2, #0]
   80982:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
   80986:	6011      	str	r1, [r2, #0]
	REG_TC0_CMR0 |= TC_CMR_CPCSTOP;
   80988:	6811      	ldr	r1, [r2, #0]
   8098a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   8098e:	6011      	str	r1, [r2, #0]
	REG_TC0_CCR0 |= TC_CCR_CLKEN;
   80990:	4916      	ldr	r1, [pc, #88]	; (809ec <timer_init+0x84>)
   80992:	680a      	ldr	r2, [r1, #0]
   80994:	f042 0201 	orr.w	r2, r2, #1
   80998:	600a      	str	r2, [r1, #0]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   8099a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8099e:	4a14      	ldr	r2, [pc, #80]	; (809f0 <timer_init+0x88>)
   809a0:	6011      	str	r1, [r2, #0]
	
	
	// Interrupt
	NVIC_EnableIRQ(ID_TC1);
	PMC->PMC_PCER0 |= PMC_PCER0_PID28;
   809a2:	691a      	ldr	r2, [r3, #16]
   809a4:	430a      	orrs	r2, r1
   809a6:	611a      	str	r2, [r3, #16]

	REG_TC0_CMR1 |= TC_CMR_WAVE;
   809a8:	f5a3 23c0 	sub.w	r3, r3, #393216	; 0x60000
   809ac:	f2a3 53bc 	subw	r3, r3, #1468	; 0x5bc
   809b0:	681a      	ldr	r2, [r3, #0]
   809b2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
   809b6:	601a      	str	r2, [r3, #0]
	REG_TC0_CMR1 |= TC_CMR_TCCLKS_TIMER_CLOCK3;
   809b8:	681a      	ldr	r2, [r3, #0]
   809ba:	f042 0202 	orr.w	r2, r2, #2
   809be:	601a      	str	r2, [r3, #0]
	REG_TC0_CMR1 |= TC_CMR_WAVSEL_UP_RC;
   809c0:	681a      	ldr	r2, [r3, #0]
   809c2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   809c6:	601a      	str	r2, [r3, #0]

	REG_TC0_CCR1 |= TC_CCR_CLKEN | TC_CCR_SWTRG;
   809c8:	4a0a      	ldr	r2, [pc, #40]	; (809f4 <timer_init+0x8c>)
   809ca:	6813      	ldr	r3, [r2, #0]
   809cc:	f043 0305 	orr.w	r3, r3, #5
   809d0:	6013      	str	r3, [r2, #0]
	
	REG_TC0_IER1 = TC_IER_CPCS;
   809d2:	2210      	movs	r2, #16
   809d4:	4b08      	ldr	r3, [pc, #32]	; (809f8 <timer_init+0x90>)
   809d6:	601a      	str	r2, [r3, #0]

	REG_TC0_RC1 = 26250;
   809d8:	f246 628a 	movw	r2, #26250	; 0x668a
   809dc:	3b08      	subs	r3, #8
   809de:	601a      	str	r2, [r3, #0]
   809e0:	4770      	bx	lr
   809e2:	bf00      	nop
   809e4:	400e0600 	.word	0x400e0600
   809e8:	40080004 	.word	0x40080004
   809ec:	40080000 	.word	0x40080000
   809f0:	e000e100 	.word	0xe000e100
   809f4:	40080040 	.word	0x40080040
   809f8:	40080064 	.word	0x40080064

000809fc <delay_us>:
	}
}

void delay_us( int delay ){

	REG_TC0_CMR0 |= TC_CMR_TCCLKS_TIMER_CLOCK1;
   809fc:	4b0a      	ldr	r3, [pc, #40]	; (80a28 <delay_us+0x2c>)
   809fe:	681a      	ldr	r2, [r3, #0]
   80a00:	601a      	str	r2, [r3, #0]
	REG_TC0_RC0 = 41;
   80a02:	2229      	movs	r2, #41	; 0x29
   80a04:	3318      	adds	r3, #24
   80a06:	601a      	str	r2, [r3, #0]

	for (int i = 0; i < delay; i++){
   80a08:	2200      	movs	r2, #0
   80a0a:	e00a      	b.n	80a22 <delay_us+0x26>
		// Start the clock
		REG_TC0_CCR0 |= TC_CCR_SWTRG;
   80a0c:	4907      	ldr	r1, [pc, #28]	; (80a2c <delay_us+0x30>)
   80a0e:	680b      	ldr	r3, [r1, #0]
   80a10:	f043 0304 	orr.w	r3, r3, #4
   80a14:	600b      	str	r3, [r1, #0]
		while (!(REG_TC0_SR0 & TC_SR_CPCS));
   80a16:	4b06      	ldr	r3, [pc, #24]	; (80a30 <delay_us+0x34>)
   80a18:	681b      	ldr	r3, [r3, #0]
   80a1a:	f013 0f10 	tst.w	r3, #16
   80a1e:	d0fa      	beq.n	80a16 <delay_us+0x1a>
	for (int i = 0; i < delay; i++){
   80a20:	3201      	adds	r2, #1
   80a22:	4282      	cmp	r2, r0
   80a24:	dbf2      	blt.n	80a0c <delay_us+0x10>
	}
   80a26:	4770      	bx	lr
   80a28:	40080004 	.word	0x40080004
   80a2c:	40080000 	.word	0x40080000
   80a30:	40080020 	.word	0x40080020

00080a34 <printchar>:
   80a34:	b508      	push	{r3, lr}
   80a36:	b2c8      	uxtb	r0, r1
   80a38:	4b01      	ldr	r3, [pc, #4]	; (80a40 <printchar+0xc>)
   80a3a:	4798      	blx	r3
   80a3c:	bd08      	pop	{r3, pc}
   80a3e:	bf00      	nop
   80a40:	00080d51 	.word	0x00080d51

00080a44 <prints>:
   80a44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80a48:	4607      	mov	r7, r0
   80a4a:	460e      	mov	r6, r1
   80a4c:	1e15      	subs	r5, r2, #0
   80a4e:	dd02      	ble.n	80a56 <prints+0x12>
   80a50:	460a      	mov	r2, r1
   80a52:	2100      	movs	r1, #0
   80a54:	e004      	b.n	80a60 <prints+0x1c>
   80a56:	f04f 0820 	mov.w	r8, #32
   80a5a:	e00e      	b.n	80a7a <prints+0x36>
   80a5c:	3101      	adds	r1, #1
   80a5e:	3201      	adds	r2, #1
   80a60:	7810      	ldrb	r0, [r2, #0]
   80a62:	2800      	cmp	r0, #0
   80a64:	d1fa      	bne.n	80a5c <prints+0x18>
   80a66:	42a9      	cmp	r1, r5
   80a68:	da01      	bge.n	80a6e <prints+0x2a>
   80a6a:	1a6d      	subs	r5, r5, r1
   80a6c:	e000      	b.n	80a70 <prints+0x2c>
   80a6e:	2500      	movs	r5, #0
   80a70:	f013 0f02 	tst.w	r3, #2
   80a74:	d106      	bne.n	80a84 <prints+0x40>
   80a76:	f04f 0820 	mov.w	r8, #32
   80a7a:	f013 0401 	ands.w	r4, r3, #1
   80a7e:	d00a      	beq.n	80a96 <prints+0x52>
   80a80:	2400      	movs	r4, #0
   80a82:	e010      	b.n	80aa6 <prints+0x62>
   80a84:	f04f 0830 	mov.w	r8, #48	; 0x30
   80a88:	e7f7      	b.n	80a7a <prints+0x36>
   80a8a:	4641      	mov	r1, r8
   80a8c:	4638      	mov	r0, r7
   80a8e:	4b0d      	ldr	r3, [pc, #52]	; (80ac4 <prints+0x80>)
   80a90:	4798      	blx	r3
   80a92:	3401      	adds	r4, #1
   80a94:	3d01      	subs	r5, #1
   80a96:	2d00      	cmp	r5, #0
   80a98:	dcf7      	bgt.n	80a8a <prints+0x46>
   80a9a:	e004      	b.n	80aa6 <prints+0x62>
   80a9c:	4638      	mov	r0, r7
   80a9e:	4b09      	ldr	r3, [pc, #36]	; (80ac4 <prints+0x80>)
   80aa0:	4798      	blx	r3
   80aa2:	3401      	adds	r4, #1
   80aa4:	3601      	adds	r6, #1
   80aa6:	7831      	ldrb	r1, [r6, #0]
   80aa8:	2900      	cmp	r1, #0
   80aaa:	d1f7      	bne.n	80a9c <prints+0x58>
   80aac:	e005      	b.n	80aba <prints+0x76>
   80aae:	4641      	mov	r1, r8
   80ab0:	4638      	mov	r0, r7
   80ab2:	4b04      	ldr	r3, [pc, #16]	; (80ac4 <prints+0x80>)
   80ab4:	4798      	blx	r3
   80ab6:	3401      	adds	r4, #1
   80ab8:	3d01      	subs	r5, #1
   80aba:	2d00      	cmp	r5, #0
   80abc:	dcf7      	bgt.n	80aae <prints+0x6a>
   80abe:	4620      	mov	r0, r4
   80ac0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80ac4:	00080a35 	.word	0x00080a35

00080ac8 <printi>:
   80ac8:	b5f0      	push	{r4, r5, r6, r7, lr}
   80aca:	b085      	sub	sp, #20
   80acc:	4607      	mov	r7, r0
   80ace:	980c      	ldr	r0, [sp, #48]	; 0x30
   80ad0:	b151      	cbz	r1, 80ae8 <printi+0x20>
   80ad2:	461e      	mov	r6, r3
   80ad4:	460c      	mov	r4, r1
   80ad6:	b113      	cbz	r3, 80ade <printi+0x16>
   80ad8:	2a0a      	cmp	r2, #10
   80ada:	d012      	beq.n	80b02 <printi+0x3a>
   80adc:	2600      	movs	r6, #0
   80ade:	ad04      	add	r5, sp, #16
   80ae0:	2300      	movs	r3, #0
   80ae2:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80ae6:	e018      	b.n	80b1a <printi+0x52>
   80ae8:	2330      	movs	r3, #48	; 0x30
   80aea:	f88d 3004 	strb.w	r3, [sp, #4]
   80aee:	2300      	movs	r3, #0
   80af0:	f88d 3005 	strb.w	r3, [sp, #5]
   80af4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80af6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80af8:	a901      	add	r1, sp, #4
   80afa:	4638      	mov	r0, r7
   80afc:	4c1b      	ldr	r4, [pc, #108]	; (80b6c <printi+0xa4>)
   80afe:	47a0      	blx	r4
   80b00:	e029      	b.n	80b56 <printi+0x8e>
   80b02:	2900      	cmp	r1, #0
   80b04:	db01      	blt.n	80b0a <printi+0x42>
   80b06:	2600      	movs	r6, #0
   80b08:	e7e9      	b.n	80ade <printi+0x16>
   80b0a:	424c      	negs	r4, r1
   80b0c:	2601      	movs	r6, #1
   80b0e:	e7e6      	b.n	80ade <printi+0x16>
   80b10:	3330      	adds	r3, #48	; 0x30
   80b12:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80b16:	fbb4 f4f2 	udiv	r4, r4, r2
   80b1a:	b14c      	cbz	r4, 80b30 <printi+0x68>
   80b1c:	fbb4 f3f2 	udiv	r3, r4, r2
   80b20:	fb02 4313 	mls	r3, r2, r3, r4
   80b24:	2b09      	cmp	r3, #9
   80b26:	ddf3      	ble.n	80b10 <printi+0x48>
   80b28:	f1a0 013a 	sub.w	r1, r0, #58	; 0x3a
   80b2c:	440b      	add	r3, r1
   80b2e:	e7ef      	b.n	80b10 <printi+0x48>
   80b30:	b156      	cbz	r6, 80b48 <printi+0x80>
   80b32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80b34:	b11b      	cbz	r3, 80b3e <printi+0x76>
   80b36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80b38:	f013 0f02 	tst.w	r3, #2
   80b3c:	d10d      	bne.n	80b5a <printi+0x92>
   80b3e:	232d      	movs	r3, #45	; 0x2d
   80b40:	f805 3c01 	strb.w	r3, [r5, #-1]
   80b44:	3d01      	subs	r5, #1
   80b46:	2600      	movs	r6, #0
   80b48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80b4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80b4c:	4629      	mov	r1, r5
   80b4e:	4638      	mov	r0, r7
   80b50:	4c06      	ldr	r4, [pc, #24]	; (80b6c <printi+0xa4>)
   80b52:	47a0      	blx	r4
   80b54:	4430      	add	r0, r6
   80b56:	b005      	add	sp, #20
   80b58:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80b5a:	212d      	movs	r1, #45	; 0x2d
   80b5c:	4638      	mov	r0, r7
   80b5e:	4b04      	ldr	r3, [pc, #16]	; (80b70 <printi+0xa8>)
   80b60:	4798      	blx	r3
   80b62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80b64:	3b01      	subs	r3, #1
   80b66:	930a      	str	r3, [sp, #40]	; 0x28
   80b68:	e7ee      	b.n	80b48 <printi+0x80>
   80b6a:	bf00      	nop
   80b6c:	00080a45 	.word	0x00080a45
   80b70:	00080a35 	.word	0x00080a35

00080b74 <print>:
   80b74:	b5f0      	push	{r4, r5, r6, r7, lr}
   80b76:	b089      	sub	sp, #36	; 0x24
   80b78:	4606      	mov	r6, r0
   80b7a:	460c      	mov	r4, r1
   80b7c:	9205      	str	r2, [sp, #20]
   80b7e:	2500      	movs	r5, #0
   80b80:	e081      	b.n	80c86 <print+0x112>
   80b82:	1ca2      	adds	r2, r4, #2
   80b84:	2301      	movs	r3, #1
   80b86:	e08b      	b.n	80ca0 <print+0x12c>
   80b88:	3401      	adds	r4, #1
   80b8a:	f043 0302 	orr.w	r3, r3, #2
   80b8e:	7822      	ldrb	r2, [r4, #0]
   80b90:	2a30      	cmp	r2, #48	; 0x30
   80b92:	d0f9      	beq.n	80b88 <print+0x14>
   80b94:	2200      	movs	r2, #0
   80b96:	e006      	b.n	80ba6 <print+0x32>
   80b98:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80b9c:	0050      	lsls	r0, r2, #1
   80b9e:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   80ba2:	4402      	add	r2, r0
   80ba4:	3401      	adds	r4, #1
   80ba6:	7821      	ldrb	r1, [r4, #0]
   80ba8:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   80bac:	b2c0      	uxtb	r0, r0
   80bae:	2809      	cmp	r0, #9
   80bb0:	d9f2      	bls.n	80b98 <print+0x24>
   80bb2:	2973      	cmp	r1, #115	; 0x73
   80bb4:	d018      	beq.n	80be8 <print+0x74>
   80bb6:	2964      	cmp	r1, #100	; 0x64
   80bb8:	d022      	beq.n	80c00 <print+0x8c>
   80bba:	2978      	cmp	r1, #120	; 0x78
   80bbc:	d02f      	beq.n	80c1e <print+0xaa>
   80bbe:	2958      	cmp	r1, #88	; 0x58
   80bc0:	d03c      	beq.n	80c3c <print+0xc8>
   80bc2:	2975      	cmp	r1, #117	; 0x75
   80bc4:	d049      	beq.n	80c5a <print+0xe6>
   80bc6:	2963      	cmp	r1, #99	; 0x63
   80bc8:	d15c      	bne.n	80c84 <print+0x110>
   80bca:	9905      	ldr	r1, [sp, #20]
   80bcc:	1d08      	adds	r0, r1, #4
   80bce:	9005      	str	r0, [sp, #20]
   80bd0:	7809      	ldrb	r1, [r1, #0]
   80bd2:	f88d 101c 	strb.w	r1, [sp, #28]
   80bd6:	2100      	movs	r1, #0
   80bd8:	f88d 101d 	strb.w	r1, [sp, #29]
   80bdc:	a907      	add	r1, sp, #28
   80bde:	4630      	mov	r0, r6
   80be0:	4f34      	ldr	r7, [pc, #208]	; (80cb4 <print+0x140>)
   80be2:	47b8      	blx	r7
   80be4:	4405      	add	r5, r0
   80be6:	e04d      	b.n	80c84 <print+0x110>
   80be8:	9905      	ldr	r1, [sp, #20]
   80bea:	1d08      	adds	r0, r1, #4
   80bec:	9005      	str	r0, [sp, #20]
   80bee:	6809      	ldr	r1, [r1, #0]
   80bf0:	b121      	cbz	r1, 80bfc <print+0x88>
   80bf2:	4630      	mov	r0, r6
   80bf4:	4f2f      	ldr	r7, [pc, #188]	; (80cb4 <print+0x140>)
   80bf6:	47b8      	blx	r7
   80bf8:	4405      	add	r5, r0
   80bfa:	e043      	b.n	80c84 <print+0x110>
   80bfc:	492e      	ldr	r1, [pc, #184]	; (80cb8 <print+0x144>)
   80bfe:	e7f8      	b.n	80bf2 <print+0x7e>
   80c00:	9905      	ldr	r1, [sp, #20]
   80c02:	1d08      	adds	r0, r1, #4
   80c04:	9005      	str	r0, [sp, #20]
   80c06:	6809      	ldr	r1, [r1, #0]
   80c08:	2061      	movs	r0, #97	; 0x61
   80c0a:	9002      	str	r0, [sp, #8]
   80c0c:	9301      	str	r3, [sp, #4]
   80c0e:	9200      	str	r2, [sp, #0]
   80c10:	2301      	movs	r3, #1
   80c12:	220a      	movs	r2, #10
   80c14:	4630      	mov	r0, r6
   80c16:	4f29      	ldr	r7, [pc, #164]	; (80cbc <print+0x148>)
   80c18:	47b8      	blx	r7
   80c1a:	4405      	add	r5, r0
   80c1c:	e032      	b.n	80c84 <print+0x110>
   80c1e:	9905      	ldr	r1, [sp, #20]
   80c20:	1d08      	adds	r0, r1, #4
   80c22:	9005      	str	r0, [sp, #20]
   80c24:	6809      	ldr	r1, [r1, #0]
   80c26:	2061      	movs	r0, #97	; 0x61
   80c28:	9002      	str	r0, [sp, #8]
   80c2a:	9301      	str	r3, [sp, #4]
   80c2c:	9200      	str	r2, [sp, #0]
   80c2e:	2300      	movs	r3, #0
   80c30:	2210      	movs	r2, #16
   80c32:	4630      	mov	r0, r6
   80c34:	4f21      	ldr	r7, [pc, #132]	; (80cbc <print+0x148>)
   80c36:	47b8      	blx	r7
   80c38:	4405      	add	r5, r0
   80c3a:	e023      	b.n	80c84 <print+0x110>
   80c3c:	9905      	ldr	r1, [sp, #20]
   80c3e:	1d08      	adds	r0, r1, #4
   80c40:	9005      	str	r0, [sp, #20]
   80c42:	6809      	ldr	r1, [r1, #0]
   80c44:	2041      	movs	r0, #65	; 0x41
   80c46:	9002      	str	r0, [sp, #8]
   80c48:	9301      	str	r3, [sp, #4]
   80c4a:	9200      	str	r2, [sp, #0]
   80c4c:	2300      	movs	r3, #0
   80c4e:	2210      	movs	r2, #16
   80c50:	4630      	mov	r0, r6
   80c52:	4f1a      	ldr	r7, [pc, #104]	; (80cbc <print+0x148>)
   80c54:	47b8      	blx	r7
   80c56:	4405      	add	r5, r0
   80c58:	e014      	b.n	80c84 <print+0x110>
   80c5a:	9905      	ldr	r1, [sp, #20]
   80c5c:	1d08      	adds	r0, r1, #4
   80c5e:	9005      	str	r0, [sp, #20]
   80c60:	6809      	ldr	r1, [r1, #0]
   80c62:	2061      	movs	r0, #97	; 0x61
   80c64:	9002      	str	r0, [sp, #8]
   80c66:	9301      	str	r3, [sp, #4]
   80c68:	9200      	str	r2, [sp, #0]
   80c6a:	2300      	movs	r3, #0
   80c6c:	220a      	movs	r2, #10
   80c6e:	4630      	mov	r0, r6
   80c70:	4f12      	ldr	r7, [pc, #72]	; (80cbc <print+0x148>)
   80c72:	47b8      	blx	r7
   80c74:	4405      	add	r5, r0
   80c76:	e005      	b.n	80c84 <print+0x110>
   80c78:	4614      	mov	r4, r2
   80c7a:	7821      	ldrb	r1, [r4, #0]
   80c7c:	4630      	mov	r0, r6
   80c7e:	4b10      	ldr	r3, [pc, #64]	; (80cc0 <print+0x14c>)
   80c80:	4798      	blx	r3
   80c82:	3501      	adds	r5, #1
   80c84:	3401      	adds	r4, #1
   80c86:	7823      	ldrb	r3, [r4, #0]
   80c88:	b163      	cbz	r3, 80ca4 <print+0x130>
   80c8a:	2b25      	cmp	r3, #37	; 0x25
   80c8c:	d1f5      	bne.n	80c7a <print+0x106>
   80c8e:	1c62      	adds	r2, r4, #1
   80c90:	7863      	ldrb	r3, [r4, #1]
   80c92:	b13b      	cbz	r3, 80ca4 <print+0x130>
   80c94:	2b25      	cmp	r3, #37	; 0x25
   80c96:	d0ef      	beq.n	80c78 <print+0x104>
   80c98:	2b2d      	cmp	r3, #45	; 0x2d
   80c9a:	f43f af72 	beq.w	80b82 <print+0xe>
   80c9e:	2300      	movs	r3, #0
   80ca0:	4614      	mov	r4, r2
   80ca2:	e774      	b.n	80b8e <print+0x1a>
   80ca4:	b116      	cbz	r6, 80cac <print+0x138>
   80ca6:	6833      	ldr	r3, [r6, #0]
   80ca8:	2200      	movs	r2, #0
   80caa:	701a      	strb	r2, [r3, #0]
   80cac:	4628      	mov	r0, r5
   80cae:	b009      	add	sp, #36	; 0x24
   80cb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80cb2:	bf00      	nop
   80cb4:	00080a45 	.word	0x00080a45
   80cb8:	0008177c 	.word	0x0008177c
   80cbc:	00080ac9 	.word	0x00080ac9
   80cc0:	00080a35 	.word	0x00080a35

00080cc4 <printf>:
   80cc4:	b40f      	push	{r0, r1, r2, r3}
   80cc6:	b500      	push	{lr}
   80cc8:	b083      	sub	sp, #12
   80cca:	aa04      	add	r2, sp, #16
   80ccc:	f852 1b04 	ldr.w	r1, [r2], #4
   80cd0:	9201      	str	r2, [sp, #4]
   80cd2:	2000      	movs	r0, #0
   80cd4:	4b03      	ldr	r3, [pc, #12]	; (80ce4 <printf+0x20>)
   80cd6:	4798      	blx	r3
   80cd8:	b003      	add	sp, #12
   80cda:	f85d eb04 	ldr.w	lr, [sp], #4
   80cde:	b004      	add	sp, #16
   80ce0:	4770      	bx	lr
   80ce2:	bf00      	nop
   80ce4:	00080b75 	.word	0x00080b75

00080ce8 <configure_uart>:
   80ce8:	4b16      	ldr	r3, [pc, #88]	; (80d44 <configure_uart+0x5c>)
   80cea:	2200      	movs	r2, #0
   80cec:	701a      	strb	r2, [r3, #0]
   80cee:	705a      	strb	r2, [r3, #1]
   80cf0:	4b15      	ldr	r3, [pc, #84]	; (80d48 <configure_uart+0x60>)
   80cf2:	f44f 7140 	mov.w	r1, #768	; 0x300
   80cf6:	6459      	str	r1, [r3, #68]	; 0x44
   80cf8:	6059      	str	r1, [r3, #4]
   80cfa:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80cfc:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80cfe:	4002      	ands	r2, r0
   80d00:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80d04:	671a      	str	r2, [r3, #112]	; 0x70
   80d06:	6659      	str	r1, [r3, #100]	; 0x64
   80d08:	f44f 7280 	mov.w	r2, #256	; 0x100
   80d0c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80d10:	611a      	str	r2, [r3, #16]
   80d12:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80d16:	21ac      	movs	r1, #172	; 0xac
   80d18:	6019      	str	r1, [r3, #0]
   80d1a:	f240 2123 	movw	r1, #547	; 0x223
   80d1e:	6219      	str	r1, [r3, #32]
   80d20:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80d24:	6059      	str	r1, [r3, #4]
   80d26:	f240 2102 	movw	r1, #514	; 0x202
   80d2a:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80d2e:	f04f 31ff 	mov.w	r1, #4294967295
   80d32:	60d9      	str	r1, [r3, #12]
   80d34:	21e1      	movs	r1, #225	; 0xe1
   80d36:	6099      	str	r1, [r3, #8]
   80d38:	4904      	ldr	r1, [pc, #16]	; (80d4c <configure_uart+0x64>)
   80d3a:	600a      	str	r2, [r1, #0]
   80d3c:	2250      	movs	r2, #80	; 0x50
   80d3e:	601a      	str	r2, [r3, #0]
   80d40:	4770      	bx	lr
   80d42:	bf00      	nop
   80d44:	20000464 	.word	0x20000464
   80d48:	400e0e00 	.word	0x400e0e00
   80d4c:	e000e100 	.word	0xe000e100

00080d50 <uart_putchar>:
   80d50:	4b07      	ldr	r3, [pc, #28]	; (80d70 <uart_putchar+0x20>)
   80d52:	695b      	ldr	r3, [r3, #20]
   80d54:	f013 0f02 	tst.w	r3, #2
   80d58:	d008      	beq.n	80d6c <uart_putchar+0x1c>
   80d5a:	4b05      	ldr	r3, [pc, #20]	; (80d70 <uart_putchar+0x20>)
   80d5c:	61d8      	str	r0, [r3, #28]
   80d5e:	4b04      	ldr	r3, [pc, #16]	; (80d70 <uart_putchar+0x20>)
   80d60:	695b      	ldr	r3, [r3, #20]
   80d62:	f413 7f00 	tst.w	r3, #512	; 0x200
   80d66:	d0fa      	beq.n	80d5e <uart_putchar+0xe>
   80d68:	2000      	movs	r0, #0
   80d6a:	4770      	bx	lr
   80d6c:	2001      	movs	r0, #1
   80d6e:	4770      	bx	lr
   80d70:	400e0800 	.word	0x400e0800

00080d74 <UART_Handler>:
   80d74:	b508      	push	{r3, lr}
   80d76:	4b15      	ldr	r3, [pc, #84]	; (80dcc <UART_Handler+0x58>)
   80d78:	695b      	ldr	r3, [r3, #20]
   80d7a:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80d7e:	d003      	beq.n	80d88 <UART_Handler+0x14>
   80d80:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80d84:	4a11      	ldr	r2, [pc, #68]	; (80dcc <UART_Handler+0x58>)
   80d86:	6011      	str	r1, [r2, #0]
   80d88:	f013 0f01 	tst.w	r3, #1
   80d8c:	d012      	beq.n	80db4 <UART_Handler+0x40>
   80d8e:	4810      	ldr	r0, [pc, #64]	; (80dd0 <UART_Handler+0x5c>)
   80d90:	7842      	ldrb	r2, [r0, #1]
   80d92:	1c53      	adds	r3, r2, #1
   80d94:	4259      	negs	r1, r3
   80d96:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80d9a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80d9e:	bf58      	it	pl
   80da0:	424b      	negpl	r3, r1
   80da2:	7801      	ldrb	r1, [r0, #0]
   80da4:	428b      	cmp	r3, r1
   80da6:	d006      	beq.n	80db6 <UART_Handler+0x42>
   80da8:	4908      	ldr	r1, [pc, #32]	; (80dcc <UART_Handler+0x58>)
   80daa:	6988      	ldr	r0, [r1, #24]
   80dac:	4908      	ldr	r1, [pc, #32]	; (80dd0 <UART_Handler+0x5c>)
   80dae:	440a      	add	r2, r1
   80db0:	7090      	strb	r0, [r2, #2]
   80db2:	704b      	strb	r3, [r1, #1]
   80db4:	bd08      	pop	{r3, pc}
   80db6:	4807      	ldr	r0, [pc, #28]	; (80dd4 <UART_Handler+0x60>)
   80db8:	4b07      	ldr	r3, [pc, #28]	; (80dd8 <UART_Handler+0x64>)
   80dba:	4798      	blx	r3
   80dbc:	4b04      	ldr	r3, [pc, #16]	; (80dd0 <UART_Handler+0x5c>)
   80dbe:	7859      	ldrb	r1, [r3, #1]
   80dc0:	4a02      	ldr	r2, [pc, #8]	; (80dcc <UART_Handler+0x58>)
   80dc2:	6992      	ldr	r2, [r2, #24]
   80dc4:	440b      	add	r3, r1
   80dc6:	709a      	strb	r2, [r3, #2]
   80dc8:	bd08      	pop	{r3, pc}
   80dca:	bf00      	nop
   80dcc:	400e0800 	.word	0x400e0800
   80dd0:	20000464 	.word	0x20000464
   80dd4:	00081784 	.word	0x00081784
   80dd8:	00080cc5 	.word	0x00080cc5

00080ddc <__aeabi_drsub>:
   80ddc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80de0:	e002      	b.n	80de8 <__adddf3>
   80de2:	bf00      	nop

00080de4 <__aeabi_dsub>:
   80de4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080de8 <__adddf3>:
   80de8:	b530      	push	{r4, r5, lr}
   80dea:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80dee:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80df2:	ea94 0f05 	teq	r4, r5
   80df6:	bf08      	it	eq
   80df8:	ea90 0f02 	teqeq	r0, r2
   80dfc:	bf1f      	itttt	ne
   80dfe:	ea54 0c00 	orrsne.w	ip, r4, r0
   80e02:	ea55 0c02 	orrsne.w	ip, r5, r2
   80e06:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80e0a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80e0e:	f000 80e2 	beq.w	80fd6 <__adddf3+0x1ee>
   80e12:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80e16:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80e1a:	bfb8      	it	lt
   80e1c:	426d      	neglt	r5, r5
   80e1e:	dd0c      	ble.n	80e3a <__adddf3+0x52>
   80e20:	442c      	add	r4, r5
   80e22:	ea80 0202 	eor.w	r2, r0, r2
   80e26:	ea81 0303 	eor.w	r3, r1, r3
   80e2a:	ea82 0000 	eor.w	r0, r2, r0
   80e2e:	ea83 0101 	eor.w	r1, r3, r1
   80e32:	ea80 0202 	eor.w	r2, r0, r2
   80e36:	ea81 0303 	eor.w	r3, r1, r3
   80e3a:	2d36      	cmp	r5, #54	; 0x36
   80e3c:	bf88      	it	hi
   80e3e:	bd30      	pophi	{r4, r5, pc}
   80e40:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80e44:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80e48:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80e4c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80e50:	d002      	beq.n	80e58 <__adddf3+0x70>
   80e52:	4240      	negs	r0, r0
   80e54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80e58:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80e5c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80e60:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80e64:	d002      	beq.n	80e6c <__adddf3+0x84>
   80e66:	4252      	negs	r2, r2
   80e68:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80e6c:	ea94 0f05 	teq	r4, r5
   80e70:	f000 80a7 	beq.w	80fc2 <__adddf3+0x1da>
   80e74:	f1a4 0401 	sub.w	r4, r4, #1
   80e78:	f1d5 0e20 	rsbs	lr, r5, #32
   80e7c:	db0d      	blt.n	80e9a <__adddf3+0xb2>
   80e7e:	fa02 fc0e 	lsl.w	ip, r2, lr
   80e82:	fa22 f205 	lsr.w	r2, r2, r5
   80e86:	1880      	adds	r0, r0, r2
   80e88:	f141 0100 	adc.w	r1, r1, #0
   80e8c:	fa03 f20e 	lsl.w	r2, r3, lr
   80e90:	1880      	adds	r0, r0, r2
   80e92:	fa43 f305 	asr.w	r3, r3, r5
   80e96:	4159      	adcs	r1, r3
   80e98:	e00e      	b.n	80eb8 <__adddf3+0xd0>
   80e9a:	f1a5 0520 	sub.w	r5, r5, #32
   80e9e:	f10e 0e20 	add.w	lr, lr, #32
   80ea2:	2a01      	cmp	r2, #1
   80ea4:	fa03 fc0e 	lsl.w	ip, r3, lr
   80ea8:	bf28      	it	cs
   80eaa:	f04c 0c02 	orrcs.w	ip, ip, #2
   80eae:	fa43 f305 	asr.w	r3, r3, r5
   80eb2:	18c0      	adds	r0, r0, r3
   80eb4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80eb8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80ebc:	d507      	bpl.n	80ece <__adddf3+0xe6>
   80ebe:	f04f 0e00 	mov.w	lr, #0
   80ec2:	f1dc 0c00 	rsbs	ip, ip, #0
   80ec6:	eb7e 0000 	sbcs.w	r0, lr, r0
   80eca:	eb6e 0101 	sbc.w	r1, lr, r1
   80ece:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80ed2:	d31b      	bcc.n	80f0c <__adddf3+0x124>
   80ed4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80ed8:	d30c      	bcc.n	80ef4 <__adddf3+0x10c>
   80eda:	0849      	lsrs	r1, r1, #1
   80edc:	ea5f 0030 	movs.w	r0, r0, rrx
   80ee0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80ee4:	f104 0401 	add.w	r4, r4, #1
   80ee8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80eec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80ef0:	f080 809a 	bcs.w	81028 <__adddf3+0x240>
   80ef4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80ef8:	bf08      	it	eq
   80efa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80efe:	f150 0000 	adcs.w	r0, r0, #0
   80f02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80f06:	ea41 0105 	orr.w	r1, r1, r5
   80f0a:	bd30      	pop	{r4, r5, pc}
   80f0c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80f10:	4140      	adcs	r0, r0
   80f12:	eb41 0101 	adc.w	r1, r1, r1
   80f16:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80f1a:	f1a4 0401 	sub.w	r4, r4, #1
   80f1e:	d1e9      	bne.n	80ef4 <__adddf3+0x10c>
   80f20:	f091 0f00 	teq	r1, #0
   80f24:	bf04      	itt	eq
   80f26:	4601      	moveq	r1, r0
   80f28:	2000      	moveq	r0, #0
   80f2a:	fab1 f381 	clz	r3, r1
   80f2e:	bf08      	it	eq
   80f30:	3320      	addeq	r3, #32
   80f32:	f1a3 030b 	sub.w	r3, r3, #11
   80f36:	f1b3 0220 	subs.w	r2, r3, #32
   80f3a:	da0c      	bge.n	80f56 <__adddf3+0x16e>
   80f3c:	320c      	adds	r2, #12
   80f3e:	dd08      	ble.n	80f52 <__adddf3+0x16a>
   80f40:	f102 0c14 	add.w	ip, r2, #20
   80f44:	f1c2 020c 	rsb	r2, r2, #12
   80f48:	fa01 f00c 	lsl.w	r0, r1, ip
   80f4c:	fa21 f102 	lsr.w	r1, r1, r2
   80f50:	e00c      	b.n	80f6c <__adddf3+0x184>
   80f52:	f102 0214 	add.w	r2, r2, #20
   80f56:	bfd8      	it	le
   80f58:	f1c2 0c20 	rsble	ip, r2, #32
   80f5c:	fa01 f102 	lsl.w	r1, r1, r2
   80f60:	fa20 fc0c 	lsr.w	ip, r0, ip
   80f64:	bfdc      	itt	le
   80f66:	ea41 010c 	orrle.w	r1, r1, ip
   80f6a:	4090      	lslle	r0, r2
   80f6c:	1ae4      	subs	r4, r4, r3
   80f6e:	bfa2      	ittt	ge
   80f70:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   80f74:	4329      	orrge	r1, r5
   80f76:	bd30      	popge	{r4, r5, pc}
   80f78:	ea6f 0404 	mvn.w	r4, r4
   80f7c:	3c1f      	subs	r4, #31
   80f7e:	da1c      	bge.n	80fba <__adddf3+0x1d2>
   80f80:	340c      	adds	r4, #12
   80f82:	dc0e      	bgt.n	80fa2 <__adddf3+0x1ba>
   80f84:	f104 0414 	add.w	r4, r4, #20
   80f88:	f1c4 0220 	rsb	r2, r4, #32
   80f8c:	fa20 f004 	lsr.w	r0, r0, r4
   80f90:	fa01 f302 	lsl.w	r3, r1, r2
   80f94:	ea40 0003 	orr.w	r0, r0, r3
   80f98:	fa21 f304 	lsr.w	r3, r1, r4
   80f9c:	ea45 0103 	orr.w	r1, r5, r3
   80fa0:	bd30      	pop	{r4, r5, pc}
   80fa2:	f1c4 040c 	rsb	r4, r4, #12
   80fa6:	f1c4 0220 	rsb	r2, r4, #32
   80faa:	fa20 f002 	lsr.w	r0, r0, r2
   80fae:	fa01 f304 	lsl.w	r3, r1, r4
   80fb2:	ea40 0003 	orr.w	r0, r0, r3
   80fb6:	4629      	mov	r1, r5
   80fb8:	bd30      	pop	{r4, r5, pc}
   80fba:	fa21 f004 	lsr.w	r0, r1, r4
   80fbe:	4629      	mov	r1, r5
   80fc0:	bd30      	pop	{r4, r5, pc}
   80fc2:	f094 0f00 	teq	r4, #0
   80fc6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   80fca:	bf06      	itte	eq
   80fcc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   80fd0:	3401      	addeq	r4, #1
   80fd2:	3d01      	subne	r5, #1
   80fd4:	e74e      	b.n	80e74 <__adddf3+0x8c>
   80fd6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80fda:	bf18      	it	ne
   80fdc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80fe0:	d029      	beq.n	81036 <__adddf3+0x24e>
   80fe2:	ea94 0f05 	teq	r4, r5
   80fe6:	bf08      	it	eq
   80fe8:	ea90 0f02 	teqeq	r0, r2
   80fec:	d005      	beq.n	80ffa <__adddf3+0x212>
   80fee:	ea54 0c00 	orrs.w	ip, r4, r0
   80ff2:	bf04      	itt	eq
   80ff4:	4619      	moveq	r1, r3
   80ff6:	4610      	moveq	r0, r2
   80ff8:	bd30      	pop	{r4, r5, pc}
   80ffa:	ea91 0f03 	teq	r1, r3
   80ffe:	bf1e      	ittt	ne
   81000:	2100      	movne	r1, #0
   81002:	2000      	movne	r0, #0
   81004:	bd30      	popne	{r4, r5, pc}
   81006:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8100a:	d105      	bne.n	81018 <__adddf3+0x230>
   8100c:	0040      	lsls	r0, r0, #1
   8100e:	4149      	adcs	r1, r1
   81010:	bf28      	it	cs
   81012:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   81016:	bd30      	pop	{r4, r5, pc}
   81018:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   8101c:	bf3c      	itt	cc
   8101e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   81022:	bd30      	popcc	{r4, r5, pc}
   81024:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81028:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   8102c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   81030:	f04f 0000 	mov.w	r0, #0
   81034:	bd30      	pop	{r4, r5, pc}
   81036:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8103a:	bf1a      	itte	ne
   8103c:	4619      	movne	r1, r3
   8103e:	4610      	movne	r0, r2
   81040:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   81044:	bf1c      	itt	ne
   81046:	460b      	movne	r3, r1
   81048:	4602      	movne	r2, r0
   8104a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8104e:	bf06      	itte	eq
   81050:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   81054:	ea91 0f03 	teqeq	r1, r3
   81058:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   8105c:	bd30      	pop	{r4, r5, pc}
   8105e:	bf00      	nop

00081060 <__aeabi_ui2d>:
   81060:	f090 0f00 	teq	r0, #0
   81064:	bf04      	itt	eq
   81066:	2100      	moveq	r1, #0
   81068:	4770      	bxeq	lr
   8106a:	b530      	push	{r4, r5, lr}
   8106c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81070:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81074:	f04f 0500 	mov.w	r5, #0
   81078:	f04f 0100 	mov.w	r1, #0
   8107c:	e750      	b.n	80f20 <__adddf3+0x138>
   8107e:	bf00      	nop

00081080 <__aeabi_i2d>:
   81080:	f090 0f00 	teq	r0, #0
   81084:	bf04      	itt	eq
   81086:	2100      	moveq	r1, #0
   81088:	4770      	bxeq	lr
   8108a:	b530      	push	{r4, r5, lr}
   8108c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81090:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81094:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   81098:	bf48      	it	mi
   8109a:	4240      	negmi	r0, r0
   8109c:	f04f 0100 	mov.w	r1, #0
   810a0:	e73e      	b.n	80f20 <__adddf3+0x138>
   810a2:	bf00      	nop

000810a4 <__aeabi_f2d>:
   810a4:	0042      	lsls	r2, r0, #1
   810a6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   810aa:	ea4f 0131 	mov.w	r1, r1, rrx
   810ae:	ea4f 7002 	mov.w	r0, r2, lsl #28
   810b2:	bf1f      	itttt	ne
   810b4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   810b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   810bc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   810c0:	4770      	bxne	lr
   810c2:	f092 0f00 	teq	r2, #0
   810c6:	bf14      	ite	ne
   810c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   810cc:	4770      	bxeq	lr
   810ce:	b530      	push	{r4, r5, lr}
   810d0:	f44f 7460 	mov.w	r4, #896	; 0x380
   810d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   810d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   810dc:	e720      	b.n	80f20 <__adddf3+0x138>
   810de:	bf00      	nop

000810e0 <__aeabi_ul2d>:
   810e0:	ea50 0201 	orrs.w	r2, r0, r1
   810e4:	bf08      	it	eq
   810e6:	4770      	bxeq	lr
   810e8:	b530      	push	{r4, r5, lr}
   810ea:	f04f 0500 	mov.w	r5, #0
   810ee:	e00a      	b.n	81106 <__aeabi_l2d+0x16>

000810f0 <__aeabi_l2d>:
   810f0:	ea50 0201 	orrs.w	r2, r0, r1
   810f4:	bf08      	it	eq
   810f6:	4770      	bxeq	lr
   810f8:	b530      	push	{r4, r5, lr}
   810fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   810fe:	d502      	bpl.n	81106 <__aeabi_l2d+0x16>
   81100:	4240      	negs	r0, r0
   81102:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   81106:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8110a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8110e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   81112:	f43f aedc 	beq.w	80ece <__adddf3+0xe6>
   81116:	f04f 0203 	mov.w	r2, #3
   8111a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8111e:	bf18      	it	ne
   81120:	3203      	addne	r2, #3
   81122:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   81126:	bf18      	it	ne
   81128:	3203      	addne	r2, #3
   8112a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8112e:	f1c2 0320 	rsb	r3, r2, #32
   81132:	fa00 fc03 	lsl.w	ip, r0, r3
   81136:	fa20 f002 	lsr.w	r0, r0, r2
   8113a:	fa01 fe03 	lsl.w	lr, r1, r3
   8113e:	ea40 000e 	orr.w	r0, r0, lr
   81142:	fa21 f102 	lsr.w	r1, r1, r2
   81146:	4414      	add	r4, r2
   81148:	e6c1      	b.n	80ece <__adddf3+0xe6>
   8114a:	bf00      	nop

0008114c <__aeabi_dmul>:
   8114c:	b570      	push	{r4, r5, r6, lr}
   8114e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81152:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81156:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8115a:	bf1d      	ittte	ne
   8115c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81160:	ea94 0f0c 	teqne	r4, ip
   81164:	ea95 0f0c 	teqne	r5, ip
   81168:	f000 f8de 	bleq	81328 <__aeabi_dmul+0x1dc>
   8116c:	442c      	add	r4, r5
   8116e:	ea81 0603 	eor.w	r6, r1, r3
   81172:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   81176:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8117a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8117e:	bf18      	it	ne
   81180:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81184:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81188:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8118c:	d038      	beq.n	81200 <__aeabi_dmul+0xb4>
   8118e:	fba0 ce02 	umull	ip, lr, r0, r2
   81192:	f04f 0500 	mov.w	r5, #0
   81196:	fbe1 e502 	umlal	lr, r5, r1, r2
   8119a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8119e:	fbe0 e503 	umlal	lr, r5, r0, r3
   811a2:	f04f 0600 	mov.w	r6, #0
   811a6:	fbe1 5603 	umlal	r5, r6, r1, r3
   811aa:	f09c 0f00 	teq	ip, #0
   811ae:	bf18      	it	ne
   811b0:	f04e 0e01 	orrne.w	lr, lr, #1
   811b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   811b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   811bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   811c0:	d204      	bcs.n	811cc <__aeabi_dmul+0x80>
   811c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   811c6:	416d      	adcs	r5, r5
   811c8:	eb46 0606 	adc.w	r6, r6, r6
   811cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   811d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   811d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   811d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   811dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   811e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   811e4:	bf88      	it	hi
   811e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   811ea:	d81e      	bhi.n	8122a <__aeabi_dmul+0xde>
   811ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   811f0:	bf08      	it	eq
   811f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   811f6:	f150 0000 	adcs.w	r0, r0, #0
   811fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   811fe:	bd70      	pop	{r4, r5, r6, pc}
   81200:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   81204:	ea46 0101 	orr.w	r1, r6, r1
   81208:	ea40 0002 	orr.w	r0, r0, r2
   8120c:	ea81 0103 	eor.w	r1, r1, r3
   81210:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   81214:	bfc2      	ittt	gt
   81216:	ebd4 050c 	rsbsgt	r5, r4, ip
   8121a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8121e:	bd70      	popgt	{r4, r5, r6, pc}
   81220:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81224:	f04f 0e00 	mov.w	lr, #0
   81228:	3c01      	subs	r4, #1
   8122a:	f300 80ab 	bgt.w	81384 <__aeabi_dmul+0x238>
   8122e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   81232:	bfde      	ittt	le
   81234:	2000      	movle	r0, #0
   81236:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8123a:	bd70      	pople	{r4, r5, r6, pc}
   8123c:	f1c4 0400 	rsb	r4, r4, #0
   81240:	3c20      	subs	r4, #32
   81242:	da35      	bge.n	812b0 <__aeabi_dmul+0x164>
   81244:	340c      	adds	r4, #12
   81246:	dc1b      	bgt.n	81280 <__aeabi_dmul+0x134>
   81248:	f104 0414 	add.w	r4, r4, #20
   8124c:	f1c4 0520 	rsb	r5, r4, #32
   81250:	fa00 f305 	lsl.w	r3, r0, r5
   81254:	fa20 f004 	lsr.w	r0, r0, r4
   81258:	fa01 f205 	lsl.w	r2, r1, r5
   8125c:	ea40 0002 	orr.w	r0, r0, r2
   81260:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   81264:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81268:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8126c:	fa21 f604 	lsr.w	r6, r1, r4
   81270:	eb42 0106 	adc.w	r1, r2, r6
   81274:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81278:	bf08      	it	eq
   8127a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8127e:	bd70      	pop	{r4, r5, r6, pc}
   81280:	f1c4 040c 	rsb	r4, r4, #12
   81284:	f1c4 0520 	rsb	r5, r4, #32
   81288:	fa00 f304 	lsl.w	r3, r0, r4
   8128c:	fa20 f005 	lsr.w	r0, r0, r5
   81290:	fa01 f204 	lsl.w	r2, r1, r4
   81294:	ea40 0002 	orr.w	r0, r0, r2
   81298:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8129c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   812a0:	f141 0100 	adc.w	r1, r1, #0
   812a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   812a8:	bf08      	it	eq
   812aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   812ae:	bd70      	pop	{r4, r5, r6, pc}
   812b0:	f1c4 0520 	rsb	r5, r4, #32
   812b4:	fa00 f205 	lsl.w	r2, r0, r5
   812b8:	ea4e 0e02 	orr.w	lr, lr, r2
   812bc:	fa20 f304 	lsr.w	r3, r0, r4
   812c0:	fa01 f205 	lsl.w	r2, r1, r5
   812c4:	ea43 0302 	orr.w	r3, r3, r2
   812c8:	fa21 f004 	lsr.w	r0, r1, r4
   812cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   812d0:	fa21 f204 	lsr.w	r2, r1, r4
   812d4:	ea20 0002 	bic.w	r0, r0, r2
   812d8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   812dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   812e0:	bf08      	it	eq
   812e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   812e6:	bd70      	pop	{r4, r5, r6, pc}
   812e8:	f094 0f00 	teq	r4, #0
   812ec:	d10f      	bne.n	8130e <__aeabi_dmul+0x1c2>
   812ee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   812f2:	0040      	lsls	r0, r0, #1
   812f4:	eb41 0101 	adc.w	r1, r1, r1
   812f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   812fc:	bf08      	it	eq
   812fe:	3c01      	subeq	r4, #1
   81300:	d0f7      	beq.n	812f2 <__aeabi_dmul+0x1a6>
   81302:	ea41 0106 	orr.w	r1, r1, r6
   81306:	f095 0f00 	teq	r5, #0
   8130a:	bf18      	it	ne
   8130c:	4770      	bxne	lr
   8130e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   81312:	0052      	lsls	r2, r2, #1
   81314:	eb43 0303 	adc.w	r3, r3, r3
   81318:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   8131c:	bf08      	it	eq
   8131e:	3d01      	subeq	r5, #1
   81320:	d0f7      	beq.n	81312 <__aeabi_dmul+0x1c6>
   81322:	ea43 0306 	orr.w	r3, r3, r6
   81326:	4770      	bx	lr
   81328:	ea94 0f0c 	teq	r4, ip
   8132c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81330:	bf18      	it	ne
   81332:	ea95 0f0c 	teqne	r5, ip
   81336:	d00c      	beq.n	81352 <__aeabi_dmul+0x206>
   81338:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8133c:	bf18      	it	ne
   8133e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81342:	d1d1      	bne.n	812e8 <__aeabi_dmul+0x19c>
   81344:	ea81 0103 	eor.w	r1, r1, r3
   81348:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8134c:	f04f 0000 	mov.w	r0, #0
   81350:	bd70      	pop	{r4, r5, r6, pc}
   81352:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81356:	bf06      	itte	eq
   81358:	4610      	moveq	r0, r2
   8135a:	4619      	moveq	r1, r3
   8135c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81360:	d019      	beq.n	81396 <__aeabi_dmul+0x24a>
   81362:	ea94 0f0c 	teq	r4, ip
   81366:	d102      	bne.n	8136e <__aeabi_dmul+0x222>
   81368:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   8136c:	d113      	bne.n	81396 <__aeabi_dmul+0x24a>
   8136e:	ea95 0f0c 	teq	r5, ip
   81372:	d105      	bne.n	81380 <__aeabi_dmul+0x234>
   81374:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81378:	bf1c      	itt	ne
   8137a:	4610      	movne	r0, r2
   8137c:	4619      	movne	r1, r3
   8137e:	d10a      	bne.n	81396 <__aeabi_dmul+0x24a>
   81380:	ea81 0103 	eor.w	r1, r1, r3
   81384:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81388:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8138c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   81390:	f04f 0000 	mov.w	r0, #0
   81394:	bd70      	pop	{r4, r5, r6, pc}
   81396:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8139a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8139e:	bd70      	pop	{r4, r5, r6, pc}

000813a0 <__aeabi_ddiv>:
   813a0:	b570      	push	{r4, r5, r6, lr}
   813a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   813a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   813aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   813ae:	bf1d      	ittte	ne
   813b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   813b4:	ea94 0f0c 	teqne	r4, ip
   813b8:	ea95 0f0c 	teqne	r5, ip
   813bc:	f000 f8a7 	bleq	8150e <__aeabi_ddiv+0x16e>
   813c0:	eba4 0405 	sub.w	r4, r4, r5
   813c4:	ea81 0e03 	eor.w	lr, r1, r3
   813c8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   813cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
   813d0:	f000 8088 	beq.w	814e4 <__aeabi_ddiv+0x144>
   813d4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   813d8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   813dc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   813e0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   813e4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   813e8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   813ec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   813f0:	ea4f 2600 	mov.w	r6, r0, lsl #8
   813f4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   813f8:	429d      	cmp	r5, r3
   813fa:	bf08      	it	eq
   813fc:	4296      	cmpeq	r6, r2
   813fe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   81402:	f504 7440 	add.w	r4, r4, #768	; 0x300
   81406:	d202      	bcs.n	8140e <__aeabi_ddiv+0x6e>
   81408:	085b      	lsrs	r3, r3, #1
   8140a:	ea4f 0232 	mov.w	r2, r2, rrx
   8140e:	1ab6      	subs	r6, r6, r2
   81410:	eb65 0503 	sbc.w	r5, r5, r3
   81414:	085b      	lsrs	r3, r3, #1
   81416:	ea4f 0232 	mov.w	r2, r2, rrx
   8141a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8141e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   81422:	ebb6 0e02 	subs.w	lr, r6, r2
   81426:	eb75 0e03 	sbcs.w	lr, r5, r3
   8142a:	bf22      	ittt	cs
   8142c:	1ab6      	subcs	r6, r6, r2
   8142e:	4675      	movcs	r5, lr
   81430:	ea40 000c 	orrcs.w	r0, r0, ip
   81434:	085b      	lsrs	r3, r3, #1
   81436:	ea4f 0232 	mov.w	r2, r2, rrx
   8143a:	ebb6 0e02 	subs.w	lr, r6, r2
   8143e:	eb75 0e03 	sbcs.w	lr, r5, r3
   81442:	bf22      	ittt	cs
   81444:	1ab6      	subcs	r6, r6, r2
   81446:	4675      	movcs	r5, lr
   81448:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8144c:	085b      	lsrs	r3, r3, #1
   8144e:	ea4f 0232 	mov.w	r2, r2, rrx
   81452:	ebb6 0e02 	subs.w	lr, r6, r2
   81456:	eb75 0e03 	sbcs.w	lr, r5, r3
   8145a:	bf22      	ittt	cs
   8145c:	1ab6      	subcs	r6, r6, r2
   8145e:	4675      	movcs	r5, lr
   81460:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81464:	085b      	lsrs	r3, r3, #1
   81466:	ea4f 0232 	mov.w	r2, r2, rrx
   8146a:	ebb6 0e02 	subs.w	lr, r6, r2
   8146e:	eb75 0e03 	sbcs.w	lr, r5, r3
   81472:	bf22      	ittt	cs
   81474:	1ab6      	subcs	r6, r6, r2
   81476:	4675      	movcs	r5, lr
   81478:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8147c:	ea55 0e06 	orrs.w	lr, r5, r6
   81480:	d018      	beq.n	814b4 <__aeabi_ddiv+0x114>
   81482:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81486:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8148a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8148e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   81492:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81496:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8149a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8149e:	d1c0      	bne.n	81422 <__aeabi_ddiv+0x82>
   814a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   814a4:	d10b      	bne.n	814be <__aeabi_ddiv+0x11e>
   814a6:	ea41 0100 	orr.w	r1, r1, r0
   814aa:	f04f 0000 	mov.w	r0, #0
   814ae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   814b2:	e7b6      	b.n	81422 <__aeabi_ddiv+0x82>
   814b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   814b8:	bf04      	itt	eq
   814ba:	4301      	orreq	r1, r0
   814bc:	2000      	moveq	r0, #0
   814be:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   814c2:	bf88      	it	hi
   814c4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   814c8:	f63f aeaf 	bhi.w	8122a <__aeabi_dmul+0xde>
   814cc:	ebb5 0c03 	subs.w	ip, r5, r3
   814d0:	bf04      	itt	eq
   814d2:	ebb6 0c02 	subseq.w	ip, r6, r2
   814d6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   814da:	f150 0000 	adcs.w	r0, r0, #0
   814de:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   814e2:	bd70      	pop	{r4, r5, r6, pc}
   814e4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   814e8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   814ec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   814f0:	bfc2      	ittt	gt
   814f2:	ebd4 050c 	rsbsgt	r5, r4, ip
   814f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   814fa:	bd70      	popgt	{r4, r5, r6, pc}
   814fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81500:	f04f 0e00 	mov.w	lr, #0
   81504:	3c01      	subs	r4, #1
   81506:	e690      	b.n	8122a <__aeabi_dmul+0xde>
   81508:	ea45 0e06 	orr.w	lr, r5, r6
   8150c:	e68d      	b.n	8122a <__aeabi_dmul+0xde>
   8150e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81512:	ea94 0f0c 	teq	r4, ip
   81516:	bf08      	it	eq
   81518:	ea95 0f0c 	teqeq	r5, ip
   8151c:	f43f af3b 	beq.w	81396 <__aeabi_dmul+0x24a>
   81520:	ea94 0f0c 	teq	r4, ip
   81524:	d10a      	bne.n	8153c <__aeabi_ddiv+0x19c>
   81526:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8152a:	f47f af34 	bne.w	81396 <__aeabi_dmul+0x24a>
   8152e:	ea95 0f0c 	teq	r5, ip
   81532:	f47f af25 	bne.w	81380 <__aeabi_dmul+0x234>
   81536:	4610      	mov	r0, r2
   81538:	4619      	mov	r1, r3
   8153a:	e72c      	b.n	81396 <__aeabi_dmul+0x24a>
   8153c:	ea95 0f0c 	teq	r5, ip
   81540:	d106      	bne.n	81550 <__aeabi_ddiv+0x1b0>
   81542:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81546:	f43f aefd 	beq.w	81344 <__aeabi_dmul+0x1f8>
   8154a:	4610      	mov	r0, r2
   8154c:	4619      	mov	r1, r3
   8154e:	e722      	b.n	81396 <__aeabi_dmul+0x24a>
   81550:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81554:	bf18      	it	ne
   81556:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8155a:	f47f aec5 	bne.w	812e8 <__aeabi_dmul+0x19c>
   8155e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   81562:	f47f af0d 	bne.w	81380 <__aeabi_dmul+0x234>
   81566:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8156a:	f47f aeeb 	bne.w	81344 <__aeabi_dmul+0x1f8>
   8156e:	e712      	b.n	81396 <__aeabi_dmul+0x24a>

00081570 <__aeabi_d2iz>:
   81570:	ea4f 0241 	mov.w	r2, r1, lsl #1
   81574:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81578:	d215      	bcs.n	815a6 <__aeabi_d2iz+0x36>
   8157a:	d511      	bpl.n	815a0 <__aeabi_d2iz+0x30>
   8157c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   81580:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81584:	d912      	bls.n	815ac <__aeabi_d2iz+0x3c>
   81586:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8158a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8158e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   81592:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81596:	fa23 f002 	lsr.w	r0, r3, r2
   8159a:	bf18      	it	ne
   8159c:	4240      	negne	r0, r0
   8159e:	4770      	bx	lr
   815a0:	f04f 0000 	mov.w	r0, #0
   815a4:	4770      	bx	lr
   815a6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   815aa:	d105      	bne.n	815b8 <__aeabi_d2iz+0x48>
   815ac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   815b0:	bf08      	it	eq
   815b2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   815b6:	4770      	bx	lr
   815b8:	f04f 0000 	mov.w	r0, #0
   815bc:	4770      	bx	lr
   815be:	bf00      	nop

000815c0 <__libc_init_array>:
   815c0:	b570      	push	{r4, r5, r6, lr}
   815c2:	4e0f      	ldr	r6, [pc, #60]	; (81600 <__libc_init_array+0x40>)
   815c4:	4d0f      	ldr	r5, [pc, #60]	; (81604 <__libc_init_array+0x44>)
   815c6:	1b76      	subs	r6, r6, r5
   815c8:	10b6      	asrs	r6, r6, #2
   815ca:	bf18      	it	ne
   815cc:	2400      	movne	r4, #0
   815ce:	d005      	beq.n	815dc <__libc_init_array+0x1c>
   815d0:	3401      	adds	r4, #1
   815d2:	f855 3b04 	ldr.w	r3, [r5], #4
   815d6:	4798      	blx	r3
   815d8:	42a6      	cmp	r6, r4
   815da:	d1f9      	bne.n	815d0 <__libc_init_array+0x10>
   815dc:	4e0a      	ldr	r6, [pc, #40]	; (81608 <__libc_init_array+0x48>)
   815de:	4d0b      	ldr	r5, [pc, #44]	; (8160c <__libc_init_array+0x4c>)
   815e0:	f000 f8e2 	bl	817a8 <_init>
   815e4:	1b76      	subs	r6, r6, r5
   815e6:	10b6      	asrs	r6, r6, #2
   815e8:	bf18      	it	ne
   815ea:	2400      	movne	r4, #0
   815ec:	d006      	beq.n	815fc <__libc_init_array+0x3c>
   815ee:	3401      	adds	r4, #1
   815f0:	f855 3b04 	ldr.w	r3, [r5], #4
   815f4:	4798      	blx	r3
   815f6:	42a6      	cmp	r6, r4
   815f8:	d1f9      	bne.n	815ee <__libc_init_array+0x2e>
   815fa:	bd70      	pop	{r4, r5, r6, pc}
   815fc:	bd70      	pop	{r4, r5, r6, pc}
   815fe:	bf00      	nop
   81600:	000817b4 	.word	0x000817b4
   81604:	000817b4 	.word	0x000817b4
   81608:	000817bc 	.word	0x000817bc
   8160c:	000817b4 	.word	0x000817b4

00081610 <register_fini>:
   81610:	4b02      	ldr	r3, [pc, #8]	; (8161c <register_fini+0xc>)
   81612:	b113      	cbz	r3, 8161a <register_fini+0xa>
   81614:	4802      	ldr	r0, [pc, #8]	; (81620 <register_fini+0x10>)
   81616:	f000 b805 	b.w	81624 <atexit>
   8161a:	4770      	bx	lr
   8161c:	00000000 	.word	0x00000000
   81620:	00081631 	.word	0x00081631

00081624 <atexit>:
   81624:	2300      	movs	r3, #0
   81626:	4601      	mov	r1, r0
   81628:	461a      	mov	r2, r3
   8162a:	4618      	mov	r0, r3
   8162c:	f000 b81e 	b.w	8166c <__register_exitproc>

00081630 <__libc_fini_array>:
   81630:	b538      	push	{r3, r4, r5, lr}
   81632:	4c0a      	ldr	r4, [pc, #40]	; (8165c <__libc_fini_array+0x2c>)
   81634:	4d0a      	ldr	r5, [pc, #40]	; (81660 <__libc_fini_array+0x30>)
   81636:	1b64      	subs	r4, r4, r5
   81638:	10a4      	asrs	r4, r4, #2
   8163a:	d00a      	beq.n	81652 <__libc_fini_array+0x22>
   8163c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   81640:	3b01      	subs	r3, #1
   81642:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   81646:	3c01      	subs	r4, #1
   81648:	f855 3904 	ldr.w	r3, [r5], #-4
   8164c:	4798      	blx	r3
   8164e:	2c00      	cmp	r4, #0
   81650:	d1f9      	bne.n	81646 <__libc_fini_array+0x16>
   81652:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   81656:	f000 b8b1 	b.w	817bc <_fini>
   8165a:	bf00      	nop
   8165c:	000817cc 	.word	0x000817cc
   81660:	000817c8 	.word	0x000817c8

00081664 <__retarget_lock_acquire_recursive>:
   81664:	4770      	bx	lr
   81666:	bf00      	nop

00081668 <__retarget_lock_release_recursive>:
   81668:	4770      	bx	lr
   8166a:	bf00      	nop

0008166c <__register_exitproc>:
   8166c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   81670:	4d2c      	ldr	r5, [pc, #176]	; (81724 <__register_exitproc+0xb8>)
   81672:	4606      	mov	r6, r0
   81674:	6828      	ldr	r0, [r5, #0]
   81676:	4698      	mov	r8, r3
   81678:	460f      	mov	r7, r1
   8167a:	4691      	mov	r9, r2
   8167c:	f7ff fff2 	bl	81664 <__retarget_lock_acquire_recursive>
   81680:	4b29      	ldr	r3, [pc, #164]	; (81728 <__register_exitproc+0xbc>)
   81682:	681c      	ldr	r4, [r3, #0]
   81684:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   81688:	2b00      	cmp	r3, #0
   8168a:	d03e      	beq.n	8170a <__register_exitproc+0x9e>
   8168c:	685a      	ldr	r2, [r3, #4]
   8168e:	2a1f      	cmp	r2, #31
   81690:	dc1c      	bgt.n	816cc <__register_exitproc+0x60>
   81692:	f102 0e01 	add.w	lr, r2, #1
   81696:	b176      	cbz	r6, 816b6 <__register_exitproc+0x4a>
   81698:	2101      	movs	r1, #1
   8169a:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   8169e:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   816a2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   816a6:	4091      	lsls	r1, r2
   816a8:	4308      	orrs	r0, r1
   816aa:	2e02      	cmp	r6, #2
   816ac:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   816b0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   816b4:	d023      	beq.n	816fe <__register_exitproc+0x92>
   816b6:	3202      	adds	r2, #2
   816b8:	f8c3 e004 	str.w	lr, [r3, #4]
   816bc:	6828      	ldr	r0, [r5, #0]
   816be:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   816c2:	f7ff ffd1 	bl	81668 <__retarget_lock_release_recursive>
   816c6:	2000      	movs	r0, #0
   816c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   816cc:	4b17      	ldr	r3, [pc, #92]	; (8172c <__register_exitproc+0xc0>)
   816ce:	b30b      	cbz	r3, 81714 <__register_exitproc+0xa8>
   816d0:	f44f 70c8 	mov.w	r0, #400	; 0x190
   816d4:	f3af 8000 	nop.w
   816d8:	4603      	mov	r3, r0
   816da:	b1d8      	cbz	r0, 81714 <__register_exitproc+0xa8>
   816dc:	2000      	movs	r0, #0
   816de:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   816e2:	f04f 0e01 	mov.w	lr, #1
   816e6:	6058      	str	r0, [r3, #4]
   816e8:	6019      	str	r1, [r3, #0]
   816ea:	4602      	mov	r2, r0
   816ec:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   816f0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   816f4:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   816f8:	2e00      	cmp	r6, #0
   816fa:	d0dc      	beq.n	816b6 <__register_exitproc+0x4a>
   816fc:	e7cc      	b.n	81698 <__register_exitproc+0x2c>
   816fe:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   81702:	4301      	orrs	r1, r0
   81704:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   81708:	e7d5      	b.n	816b6 <__register_exitproc+0x4a>
   8170a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8170e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81712:	e7bb      	b.n	8168c <__register_exitproc+0x20>
   81714:	6828      	ldr	r0, [r5, #0]
   81716:	f7ff ffa7 	bl	81668 <__retarget_lock_release_recursive>
   8171a:	f04f 30ff 	mov.w	r0, #4294967295
   8171e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81722:	bf00      	nop
   81724:	20000430 	.word	0x20000430
   81728:	000817a4 	.word	0x000817a4
   8172c:	00000000 	.word	0x00000000
   81730:	304e4143 	.word	0x304e4143
   81734:	73656d20 	.word	0x73656d20
   81738:	65676173 	.word	0x65676173
   8173c:	72726120 	.word	0x72726120
   81740:	64657669 	.word	0x64657669
   81744:	206e6920 	.word	0x206e6920
   81748:	2d6e6f6e 	.word	0x2d6e6f6e
   8174c:	64657375 	.word	0x64657375
   81750:	69616d20 	.word	0x69616d20
   81754:	786f626c 	.word	0x786f626c
   81758:	00000d0a 	.word	0x00000d0a
   8175c:	73796f6a 	.word	0x73796f6a
   81760:	6b636974 	.word	0x6b636974
   81764:	6425203a 	.word	0x6425203a
   81768:	000d0a20 	.word	0x000d0a20
   8176c:	79747564 	.word	0x79747564
   81770:	20202020 	.word	0x20202020
   81774:	6425203a 	.word	0x6425203a
   81778:	000d0a20 	.word	0x000d0a20
   8177c:	6c756e28 	.word	0x6c756e28
   81780:	0000296c 	.word	0x0000296c
   81784:	3a525245 	.word	0x3a525245
   81788:	52415520 	.word	0x52415520
   8178c:	58522054 	.word	0x58522054
   81790:	66756220 	.word	0x66756220
   81794:	20726566 	.word	0x20726566
   81798:	66207369 	.word	0x66207369
   8179c:	0a6c6c75 	.word	0x0a6c6c75
   817a0:	0000000d 	.word	0x0000000d

000817a4 <_global_impure_ptr>:
   817a4:	20000008                                ... 

000817a8 <_init>:
   817a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   817aa:	bf00      	nop
   817ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
   817ae:	bc08      	pop	{r3}
   817b0:	469e      	mov	lr, r3
   817b2:	4770      	bx	lr

000817b4 <__init_array_start>:
   817b4:	00081611 	.word	0x00081611

000817b8 <__frame_dummy_init_array_entry>:
   817b8:	00080119                                ....

000817bc <_fini>:
   817bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   817be:	bf00      	nop
   817c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   817c2:	bc08      	pop	{r3}
   817c4:	469e      	mov	lr, r3
   817c6:	4770      	bx	lr

000817c8 <__fini_array_start>:
   817c8:	000800f5 	.word	0x000800f5
