
Node 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017bc  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  000817bc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000098  20000434  00081bf0  00020434  2**2
                  ALLOC
  3 .stack        00000404  200004cc  00081c88  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008d0  0008208c  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a83e  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001a0b  00000000  00000000  0002acf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000318  00000000  00000000  0002c6ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000258  00000000  00000000  0002ca17  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001481b  00000000  00000000  0002cc6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00007011  00000000  00000000  0004148a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0005690c  00000000  00000000  0004849b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000008a0  00000000  00000000  0009eda8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000010c2  00000000  00000000  0009f648  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	d0 08 00 20 c5 03 08 00 c1 03 08 00 c1 03 08 00     ... ............
   80010:	c1 03 08 00 c1 03 08 00 c1 03 08 00 00 00 00 00     ................
	...
   8002c:	c1 03 08 00 c1 03 08 00 00 00 00 00 c1 03 08 00     ................
   8003c:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   8004c:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   8005c:	c1 03 08 00 61 0d 08 00 c1 03 08 00 00 00 00 00     ....a...........
   8006c:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
	...
   80084:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   80094:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800a4:	00 00 00 00 c1 03 08 00 c1 03 08 00 59 07 08 00     ............Y...
   800b4:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800c4:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800d4:	c1 03 08 00 c1 03 08 00 c1 03 08 00 c1 03 08 00     ................
   800e4:	c1 03 08 00 c1 03 08 00 05 03 08 00 c1 03 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	000817bc 	.word	0x000817bc

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000817bc 	.word	0x000817bc
   80154:	20000438 	.word	0x20000438
   80158:	000817bc 	.word	0x000817bc
   8015c:	00000000 	.word	0x00000000

00080160 <button_init>:
#include "button.h"
#include "sam.h"


void button_init(void){
	PIOC->PIO_OER = PIO_OER_P12; // Output enable on PC19 and PA20
   80160:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80164:	4b01      	ldr	r3, [pc, #4]	; (8016c <button_init+0xc>)
   80166:	611a      	str	r2, [r3, #16]
   80168:	4770      	bx	lr
   8016a:	bf00      	nop
   8016c:	400e1200 	.word	0x400e1200

00080170 <set_button>:

}
void set_button (uint8_t val){
	if(val){
   80170:	b920      	cbnz	r0, 8017c <set_button+0xc>
		PIOC->PIO_CODR = PIO_SODR_P12; // push shit
		
	} else {
		PIOC->PIO_SODR = PIO_SODR_P12; // don't push shit
   80172:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80176:	4b04      	ldr	r3, [pc, #16]	; (80188 <set_button+0x18>)
   80178:	631a      	str	r2, [r3, #48]	; 0x30
   8017a:	4770      	bx	lr
		PIOC->PIO_CODR = PIO_SODR_P12; // push shit
   8017c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80180:	4b01      	ldr	r3, [pc, #4]	; (80188 <set_button+0x18>)
   80182:	635a      	str	r2, [r3, #52]	; 0x34
   80184:	4770      	bx	lr
   80186:	bf00      	nop
   80188:	400e1200 	.word	0x400e1200

0008018c <can_init>:
   8018c:	b4f0      	push	{r4, r5, r6, r7}
   8018e:	1857      	adds	r7, r2, r1
   80190:	2f08      	cmp	r7, #8
   80192:	bfd4      	ite	le
   80194:	2300      	movle	r3, #0
   80196:	2301      	movgt	r3, #1
   80198:	2908      	cmp	r1, #8
   8019a:	bf98      	it	ls
   8019c:	2a08      	cmpls	r2, #8
   8019e:	d85c      	bhi.n	8025a <can_init+0xce>
   801a0:	460d      	mov	r5, r1
   801a2:	2b00      	cmp	r3, #0
   801a4:	d159      	bne.n	8025a <can_init+0xce>
   801a6:	4a2e      	ldr	r2, [pc, #184]	; (80260 <can_init+0xd4>)
   801a8:	6813      	ldr	r3, [r2, #0]
   801aa:	f023 0301 	bic.w	r3, r3, #1
   801ae:	6013      	str	r3, [r2, #0]
   801b0:	6913      	ldr	r3, [r2, #16]
   801b2:	4b2c      	ldr	r3, [pc, #176]	; (80264 <can_init+0xd8>)
   801b4:	f44f 7440 	mov.w	r4, #768	; 0x300
   801b8:	645c      	str	r4, [r3, #68]	; 0x44
   801ba:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   801bc:	f024 0403 	bic.w	r4, r4, #3
   801c0:	671c      	str	r4, [r3, #112]	; 0x70
   801c2:	2403      	movs	r4, #3
   801c4:	605c      	str	r4, [r3, #4]
   801c6:	665c      	str	r4, [r3, #100]	; 0x64
   801c8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   801cc:	4c26      	ldr	r4, [pc, #152]	; (80268 <can_init+0xdc>)
   801ce:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   801d2:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801d6:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801da:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   801de:	6150      	str	r0, [r2, #20]
   801e0:	2400      	movs	r4, #0
   801e2:	e019      	b.n	80218 <can_init+0x8c>
   801e4:	481e      	ldr	r0, [pc, #120]	; (80260 <can_init+0xd4>)
   801e6:	f101 0310 	add.w	r3, r1, #16
   801ea:	015b      	lsls	r3, r3, #5
   801ec:	18c2      	adds	r2, r0, r3
   801ee:	2600      	movs	r6, #0
   801f0:	6056      	str	r6, [r2, #4]
   801f2:	eb00 1241 	add.w	r2, r0, r1, lsl #5
   801f6:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   801fa:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
   801fe:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
   80202:	50c6      	str	r6, [r0, r3]
   80204:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
   80208:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   8020c:	f8c2 321c 	str.w	r3, [r2, #540]	; 0x21c
   80210:	2301      	movs	r3, #1
   80212:	408b      	lsls	r3, r1
   80214:	431c      	orrs	r4, r3
   80216:	3101      	adds	r1, #1
   80218:	42b9      	cmp	r1, r7
   8021a:	dde3      	ble.n	801e4 <can_init+0x58>
   8021c:	2300      	movs	r3, #0
   8021e:	e00d      	b.n	8023c <can_init+0xb0>
   80220:	490f      	ldr	r1, [pc, #60]	; (80260 <can_init+0xd4>)
   80222:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   80226:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   8022a:	f8c2 0208 	str.w	r0, [r2, #520]	; 0x208
   8022e:	f103 0210 	add.w	r2, r3, #16
   80232:	0152      	lsls	r2, r2, #5
   80234:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80238:	5088      	str	r0, [r1, r2]
   8023a:	3301      	adds	r3, #1
   8023c:	42ab      	cmp	r3, r5
   8023e:	dbef      	blt.n	80220 <can_init+0x94>
   80240:	4b07      	ldr	r3, [pc, #28]	; (80260 <can_init+0xd4>)
   80242:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80244:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80248:	4a08      	ldr	r2, [pc, #32]	; (8026c <can_init+0xe0>)
   8024a:	6051      	str	r1, [r2, #4]
   8024c:	681a      	ldr	r2, [r3, #0]
   8024e:	f042 0201 	orr.w	r2, r2, #1
   80252:	601a      	str	r2, [r3, #0]
   80254:	2000      	movs	r0, #0
   80256:	bcf0      	pop	{r4, r5, r6, r7}
   80258:	4770      	bx	lr
   8025a:	2001      	movs	r0, #1
   8025c:	e7fb      	b.n	80256 <can_init+0xca>
   8025e:	bf00      	nop
   80260:	400b4000 	.word	0x400b4000
   80264:	400e0e00 	.word	0x400e0e00
   80268:	1000102b 	.word	0x1000102b
   8026c:	e000e100 	.word	0xe000e100

00080270 <can_init_def_tx_rx_mb>:
   80270:	b508      	push	{r3, lr}
   80272:	2202      	movs	r2, #2
   80274:	2101      	movs	r1, #1
   80276:	4b01      	ldr	r3, [pc, #4]	; (8027c <can_init_def_tx_rx_mb+0xc>)
   80278:	4798      	blx	r3
   8027a:	bd08      	pop	{r3, pc}
   8027c:	0008018d 	.word	0x0008018d

00080280 <can_receive>:
   80280:	014b      	lsls	r3, r1, #5
   80282:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80286:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8028a:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8028e:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80292:	d033      	beq.n	802fc <can_receive+0x7c>
   80294:	b470      	push	{r4, r5, r6}
   80296:	014b      	lsls	r3, r1, #5
   80298:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8029c:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802a0:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
   802a4:	f8d3 2218 	ldr.w	r2, [r3, #536]	; 0x218
   802a8:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   802ac:	f3c5 458a 	ubfx	r5, r5, #18, #11
   802b0:	8005      	strh	r5, [r0, #0]
   802b2:	f8d3 5210 	ldr.w	r5, [r3, #528]	; 0x210
   802b6:	f3c5 4503 	ubfx	r5, r5, #16, #4
   802ba:	7085      	strb	r5, [r0, #2]
   802bc:	2300      	movs	r3, #0
   802be:	e003      	b.n	802c8 <can_receive+0x48>
   802c0:	18c6      	adds	r6, r0, r3
   802c2:	70f2      	strb	r2, [r6, #3]
   802c4:	0a12      	lsrs	r2, r2, #8
   802c6:	3301      	adds	r3, #1
   802c8:	42ab      	cmp	r3, r5
   802ca:	da05      	bge.n	802d8 <can_receive+0x58>
   802cc:	2b03      	cmp	r3, #3
   802ce:	dcf7      	bgt.n	802c0 <can_receive+0x40>
   802d0:	18c6      	adds	r6, r0, r3
   802d2:	70f4      	strb	r4, [r6, #3]
   802d4:	0a24      	lsrs	r4, r4, #8
   802d6:	e7f6      	b.n	802c6 <can_receive+0x46>
   802d8:	4b09      	ldr	r3, [pc, #36]	; (80300 <can_receive+0x80>)
   802da:	f101 0210 	add.w	r2, r1, #16
   802de:	0152      	lsls	r2, r2, #5
   802e0:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   802e4:	5098      	str	r0, [r3, r2]
   802e6:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   802ea:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   802ee:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802f2:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   802f6:	2000      	movs	r0, #0
   802f8:	bc70      	pop	{r4, r5, r6}
   802fa:	4770      	bx	lr
   802fc:	2001      	movs	r0, #1
   802fe:	4770      	bx	lr
   80300:	400b4000 	.word	0x400b4000

00080304 <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   80304:	b510      	push	{r4, lr}
   80306:	b084      	sub	sp, #16
	if(DEBUG_INTERRUPT)printf("CAN0 interrupt\n\r");
	char can_sr = CAN0->CAN_SR; 
   80308:	4b23      	ldr	r3, [pc, #140]	; (80398 <CAN0_Handler+0x94>)
   8030a:	691c      	ldr	r4, [r3, #16]
	
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   8030c:	f014 0f06 	tst.w	r4, #6
   80310:	d034      	beq.n	8037c <CAN0_Handler+0x78>
	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   80312:	f014 0f02 	tst.w	r4, #2
   80316:	d108      	bne.n	8032a <CAN0_Handler+0x26>
			set_servo_posistion(message.data[0]);
			//joystick_horizontal_to_speed(message.data[0]);
			

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   80318:	f014 0f04 	tst.w	r4, #4
   8031c:	d025      	beq.n	8036a <CAN0_Handler+0x66>
		
		{
			can_receive(&message, 2);
   8031e:	2102      	movs	r1, #2
   80320:	a801      	add	r0, sp, #4
   80322:	4b1e      	ldr	r3, [pc, #120]	; (8039c <CAN0_Handler+0x98>)
   80324:	4798      	blx	r3
			printf("CAN0 message arrived in non-used mailbox\n\r");
		}

		if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
		if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
		for (int i = 0; i < message.data_length; i++)
   80326:	2300      	movs	r3, #0
   80328:	e024      	b.n	80374 <CAN0_Handler+0x70>
			can_receive(&message, 1);
   8032a:	2101      	movs	r1, #1
   8032c:	a801      	add	r0, sp, #4
   8032e:	4b1b      	ldr	r3, [pc, #108]	; (8039c <CAN0_Handler+0x98>)
   80330:	4798      	blx	r3
			set_joystick_horizontal_val(message.data[0]);
   80332:	f89d 0007 	ldrb.w	r0, [sp, #7]
   80336:	4b1a      	ldr	r3, [pc, #104]	; (803a0 <CAN0_Handler+0x9c>)
   80338:	4798      	blx	r3
			set_right_slider_val(message.data[1]);
   8033a:	f89d 0008 	ldrb.w	r0, [sp, #8]
   8033e:	4b19      	ldr	r3, [pc, #100]	; (803a4 <CAN0_Handler+0xa0>)
   80340:	4798      	blx	r3
			set_right_button_val(message.data[2]);
   80342:	f89d 0009 	ldrb.w	r0, [sp, #9]
   80346:	4b18      	ldr	r3, [pc, #96]	; (803a8 <CAN0_Handler+0xa4>)
   80348:	4798      	blx	r3
			set_button(message.data[2]);
   8034a:	f89d 0009 	ldrb.w	r0, [sp, #9]
   8034e:	4b17      	ldr	r3, [pc, #92]	; (803ac <CAN0_Handler+0xa8>)
   80350:	4798      	blx	r3
			for (int i = 0; i< message.data_length; i++)
   80352:	2300      	movs	r3, #0
   80354:	e000      	b.n	80358 <CAN0_Handler+0x54>
   80356:	3301      	adds	r3, #1
   80358:	f89d 2006 	ldrb.w	r2, [sp, #6]
   8035c:	4293      	cmp	r3, r2
   8035e:	dbfa      	blt.n	80356 <CAN0_Handler+0x52>
			set_servo_posistion(message.data[0]);
   80360:	f89d 0007 	ldrb.w	r0, [sp, #7]
   80364:	4b12      	ldr	r3, [pc, #72]	; (803b0 <CAN0_Handler+0xac>)
   80366:	4798      	blx	r3
   80368:	e7dd      	b.n	80326 <CAN0_Handler+0x22>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   8036a:	4812      	ldr	r0, [pc, #72]	; (803b4 <CAN0_Handler+0xb0>)
   8036c:	4b12      	ldr	r3, [pc, #72]	; (803b8 <CAN0_Handler+0xb4>)
   8036e:	4798      	blx	r3
   80370:	e7d9      	b.n	80326 <CAN0_Handler+0x22>
		for (int i = 0; i < message.data_length; i++)
   80372:	3301      	adds	r3, #1
   80374:	f89d 2006 	ldrb.w	r2, [sp, #6]
   80378:	4293      	cmp	r3, r2
   8037a:	dbfa      	blt.n	80372 <CAN0_Handler+0x6e>
			if(DEBUG_INTERRUPT)printf("%d ", message.data[i]);
		}
		if(DEBUG_INTERRUPT)printf("\n\r");
	}
	
	if(can_sr & CAN_SR_MB0)
   8037c:	f014 0f01 	tst.w	r4, #1
   80380:	d002      	beq.n	80388 <CAN0_Handler+0x84>
	{
		if(DEBUG_INTERRUPT) printf("CAN0 MB0 ready to send \n\r");
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   80382:	2201      	movs	r2, #1
   80384:	4b04      	ldr	r3, [pc, #16]	; (80398 <CAN0_Handler+0x94>)
   80386:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80388:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8038c:	4b0b      	ldr	r3, [pc, #44]	; (803bc <CAN0_Handler+0xb8>)
   8038e:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

	}
	
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/
}
   80392:	b004      	add	sp, #16
   80394:	bd10      	pop	{r4, pc}
   80396:	bf00      	nop
   80398:	400b4000 	.word	0x400b4000
   8039c:	00080281 	.word	0x00080281
   803a0:	0008057d 	.word	0x0008057d
   803a4:	00080589 	.word	0x00080589
   803a8:	00080595 	.word	0x00080595
   803ac:	00080171 	.word	0x00080171
   803b0:	00080935 	.word	0x00080935
   803b4:	0008171c 	.word	0x0008171c
   803b8:	00080cb1 	.word	0x00080cb1
   803bc:	e000e100 	.word	0xe000e100

000803c0 <Dummy_Handler>:
   803c0:	e7fe      	b.n	803c0 <Dummy_Handler>
	...

000803c4 <Reset_Handler>:
   803c4:	b508      	push	{r3, lr}
   803c6:	4b11      	ldr	r3, [pc, #68]	; (8040c <Reset_Handler+0x48>)
   803c8:	4a11      	ldr	r2, [pc, #68]	; (80410 <Reset_Handler+0x4c>)
   803ca:	429a      	cmp	r2, r3
   803cc:	d009      	beq.n	803e2 <Reset_Handler+0x1e>
   803ce:	4b0f      	ldr	r3, [pc, #60]	; (8040c <Reset_Handler+0x48>)
   803d0:	4a0f      	ldr	r2, [pc, #60]	; (80410 <Reset_Handler+0x4c>)
   803d2:	e003      	b.n	803dc <Reset_Handler+0x18>
   803d4:	6811      	ldr	r1, [r2, #0]
   803d6:	6019      	str	r1, [r3, #0]
   803d8:	3304      	adds	r3, #4
   803da:	3204      	adds	r2, #4
   803dc:	490d      	ldr	r1, [pc, #52]	; (80414 <Reset_Handler+0x50>)
   803de:	428b      	cmp	r3, r1
   803e0:	d3f8      	bcc.n	803d4 <Reset_Handler+0x10>
   803e2:	4b0d      	ldr	r3, [pc, #52]	; (80418 <Reset_Handler+0x54>)
   803e4:	e002      	b.n	803ec <Reset_Handler+0x28>
   803e6:	2200      	movs	r2, #0
   803e8:	601a      	str	r2, [r3, #0]
   803ea:	3304      	adds	r3, #4
   803ec:	4a0b      	ldr	r2, [pc, #44]	; (8041c <Reset_Handler+0x58>)
   803ee:	4293      	cmp	r3, r2
   803f0:	d3f9      	bcc.n	803e6 <Reset_Handler+0x22>
   803f2:	4b0b      	ldr	r3, [pc, #44]	; (80420 <Reset_Handler+0x5c>)
   803f4:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   803f8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   803fc:	4a09      	ldr	r2, [pc, #36]	; (80424 <Reset_Handler+0x60>)
   803fe:	6093      	str	r3, [r2, #8]
   80400:	4b09      	ldr	r3, [pc, #36]	; (80428 <Reset_Handler+0x64>)
   80402:	4798      	blx	r3
   80404:	4b09      	ldr	r3, [pc, #36]	; (8042c <Reset_Handler+0x68>)
   80406:	4798      	blx	r3
   80408:	e7fe      	b.n	80408 <Reset_Handler+0x44>
   8040a:	bf00      	nop
   8040c:	20000000 	.word	0x20000000
   80410:	000817bc 	.word	0x000817bc
   80414:	20000434 	.word	0x20000434
   80418:	20000434 	.word	0x20000434
   8041c:	200004cc 	.word	0x200004cc
   80420:	00080000 	.word	0x00080000
   80424:	e000ed00 	.word	0xe000ed00
   80428:	000815ad 	.word	0x000815ad
   8042c:	000804d5 	.word	0x000804d5

00080430 <SystemInit>:
   80430:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80434:	4a20      	ldr	r2, [pc, #128]	; (804b8 <SystemInit+0x88>)
   80436:	6013      	str	r3, [r2, #0]
   80438:	f502 7200 	add.w	r2, r2, #512	; 0x200
   8043c:	6013      	str	r3, [r2, #0]
   8043e:	4b1f      	ldr	r3, [pc, #124]	; (804bc <SystemInit+0x8c>)
   80440:	6a1b      	ldr	r3, [r3, #32]
   80442:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80446:	d107      	bne.n	80458 <SystemInit+0x28>
   80448:	4a1d      	ldr	r2, [pc, #116]	; (804c0 <SystemInit+0x90>)
   8044a:	4b1c      	ldr	r3, [pc, #112]	; (804bc <SystemInit+0x8c>)
   8044c:	621a      	str	r2, [r3, #32]
   8044e:	4b1b      	ldr	r3, [pc, #108]	; (804bc <SystemInit+0x8c>)
   80450:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80452:	f013 0f01 	tst.w	r3, #1
   80456:	d0fa      	beq.n	8044e <SystemInit+0x1e>
   80458:	4a1a      	ldr	r2, [pc, #104]	; (804c4 <SystemInit+0x94>)
   8045a:	4b18      	ldr	r3, [pc, #96]	; (804bc <SystemInit+0x8c>)
   8045c:	621a      	str	r2, [r3, #32]
   8045e:	4b17      	ldr	r3, [pc, #92]	; (804bc <SystemInit+0x8c>)
   80460:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80462:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80466:	d0fa      	beq.n	8045e <SystemInit+0x2e>
   80468:	4a14      	ldr	r2, [pc, #80]	; (804bc <SystemInit+0x8c>)
   8046a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8046c:	f023 0303 	bic.w	r3, r3, #3
   80470:	f043 0301 	orr.w	r3, r3, #1
   80474:	6313      	str	r3, [r2, #48]	; 0x30
   80476:	4b11      	ldr	r3, [pc, #68]	; (804bc <SystemInit+0x8c>)
   80478:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8047a:	f013 0f08 	tst.w	r3, #8
   8047e:	d0fa      	beq.n	80476 <SystemInit+0x46>
   80480:	4a11      	ldr	r2, [pc, #68]	; (804c8 <SystemInit+0x98>)
   80482:	4b0e      	ldr	r3, [pc, #56]	; (804bc <SystemInit+0x8c>)
   80484:	629a      	str	r2, [r3, #40]	; 0x28
   80486:	4b0d      	ldr	r3, [pc, #52]	; (804bc <SystemInit+0x8c>)
   80488:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8048a:	f013 0f02 	tst.w	r3, #2
   8048e:	d0fa      	beq.n	80486 <SystemInit+0x56>
   80490:	2211      	movs	r2, #17
   80492:	4b0a      	ldr	r3, [pc, #40]	; (804bc <SystemInit+0x8c>)
   80494:	631a      	str	r2, [r3, #48]	; 0x30
   80496:	4b09      	ldr	r3, [pc, #36]	; (804bc <SystemInit+0x8c>)
   80498:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8049a:	f013 0f08 	tst.w	r3, #8
   8049e:	d0fa      	beq.n	80496 <SystemInit+0x66>
   804a0:	2212      	movs	r2, #18
   804a2:	4b06      	ldr	r3, [pc, #24]	; (804bc <SystemInit+0x8c>)
   804a4:	631a      	str	r2, [r3, #48]	; 0x30
   804a6:	4b05      	ldr	r3, [pc, #20]	; (804bc <SystemInit+0x8c>)
   804a8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804aa:	f013 0f08 	tst.w	r3, #8
   804ae:	d0fa      	beq.n	804a6 <SystemInit+0x76>
   804b0:	4a06      	ldr	r2, [pc, #24]	; (804cc <SystemInit+0x9c>)
   804b2:	4b07      	ldr	r3, [pc, #28]	; (804d0 <SystemInit+0xa0>)
   804b4:	601a      	str	r2, [r3, #0]
   804b6:	4770      	bx	lr
   804b8:	400e0a00 	.word	0x400e0a00
   804bc:	400e0600 	.word	0x400e0600
   804c0:	00370809 	.word	0x00370809
   804c4:	01370809 	.word	0x01370809
   804c8:	200d3f01 	.word	0x200d3f01
   804cc:	0501bd00 	.word	0x0501bd00
   804d0:	20000000 	.word	0x20000000

000804d4 <main>:



#define can_br 0x01141255 
int main(void)
{
   804d4:	b508      	push	{r3, lr}
    /* Initialize the SAM system */
    SystemInit();
   804d6:	4b18      	ldr	r3, [pc, #96]	; (80538 <main+0x64>)
   804d8:	4798      	blx	r3
	configure_uart();
   804da:	4b18      	ldr	r3, [pc, #96]	; (8053c <main+0x68>)
   804dc:	4798      	blx	r3
	can_init_def_tx_rx_mb(can_br);
   804de:	4818      	ldr	r0, [pc, #96]	; (80540 <main+0x6c>)
   804e0:	4b18      	ldr	r3, [pc, #96]	; (80544 <main+0x70>)
   804e2:	4798      	blx	r3
	timer_init();
   804e4:	4b18      	ldr	r3, [pc, #96]	; (80548 <main+0x74>)
   804e6:	4798      	blx	r3
	PWM_init();
   804e8:	4b18      	ldr	r3, [pc, #96]	; (8054c <main+0x78>)
   804ea:	4798      	blx	r3
	ADC_init();
   804ec:	4b18      	ldr	r3, [pc, #96]	; (80550 <main+0x7c>)
   804ee:	4798      	blx	r3
	motor_init();
   804f0:	4b18      	ldr	r3, [pc, #96]	; (80554 <main+0x80>)
   804f2:	4798      	blx	r3
	DAC_init();
   804f4:	4b18      	ldr	r3, [pc, #96]	; (80558 <main+0x84>)
   804f6:	4798      	blx	r3
	button_init();
   804f8:	4b18      	ldr	r3, [pc, #96]	; (8055c <main+0x88>)
   804fa:	4798      	blx	r3
	
	
	WDT->WDT_MR = WDT_MR_WDDIS; // Disable WDT
   804fc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80500:	4b17      	ldr	r3, [pc, #92]	; (80560 <main+0x8c>)
   80502:	605a      	str	r2, [r3, #4]
	
	PIOA->PIO_OER = PIO_OER_P19 | PIO_OER_P20; // Output enable on PA19 and PA20
   80504:	f5a3 6345 	sub.w	r3, r3, #3152	; 0xc50
   80508:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
   8050c:	611a      	str	r2, [r3, #16]

	
	PIOA->PIO_SODR = PIO_SODR_P19; // | PIO_SODR_P20; // Set PA19 and PA20 high ( Turn on both leds ) 
   8050e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80512:	631a      	str	r2, [r3, #48]	; 0x30
	//motor_set_direction(1);
	motor_disable_break(1);
   80514:	2001      	movs	r0, #1
   80516:	4b13      	ldr	r3, [pc, #76]	; (80564 <main+0x90>)
   80518:	4798      	blx	r3
   8051a:	e002      	b.n	80522 <main+0x4e>
    {	
		//motor_raw_dog();
		motor_pid_controlled();
		if(goal()){
			printf("Hey, you lost!\n\r");
		}else {printf("Still playing\n\r");}
   8051c:	4812      	ldr	r0, [pc, #72]	; (80568 <main+0x94>)
   8051e:	4b13      	ldr	r3, [pc, #76]	; (8056c <main+0x98>)
   80520:	4798      	blx	r3
		motor_pid_controlled();
   80522:	4b13      	ldr	r3, [pc, #76]	; (80570 <main+0x9c>)
   80524:	4798      	blx	r3
		if(goal()){
   80526:	4b13      	ldr	r3, [pc, #76]	; (80574 <main+0xa0>)
   80528:	4798      	blx	r3
   8052a:	2800      	cmp	r0, #0
   8052c:	d0f6      	beq.n	8051c <main+0x48>
			printf("Hey, you lost!\n\r");
   8052e:	4812      	ldr	r0, [pc, #72]	; (80578 <main+0xa4>)
   80530:	4b0e      	ldr	r3, [pc, #56]	; (8056c <main+0x98>)
   80532:	4798      	blx	r3
   80534:	e7f5      	b.n	80522 <main+0x4e>
   80536:	bf00      	nop
   80538:	00080431 	.word	0x00080431
   8053c:	00080cd5 	.word	0x00080cd5
   80540:	01141255 	.word	0x01141255
   80544:	00080271 	.word	0x00080271
   80548:	00080955 	.word	0x00080955
   8054c:	00080869 	.word	0x00080869
   80550:	00080805 	.word	0x00080805
   80554:	00080681 	.word	0x00080681
   80558:	00080645 	.word	0x00080645
   8055c:	00080161 	.word	0x00080161
   80560:	400e1a50 	.word	0x400e1a50
   80564:	000805ad 	.word	0x000805ad
   80568:	0008175c 	.word	0x0008175c
   8056c:	00080cb1 	.word	0x00080cb1
   80570:	000806d1 	.word	0x000806d1
   80574:	00080851 	.word	0x00080851
   80578:	00081748 	.word	0x00081748

0008057c <set_joystick_horizontal_val>:

#define ENCODER_DATA_MASK   (0xFF << DO0_IDX)
#define MIN_ENCODER_VALUE   0
#define MAX_ENCODER_VALUE   8800

void set_joystick_horizontal_val(uint8_t val) {joystick_horizontal_val = val;}
   8057c:	4b01      	ldr	r3, [pc, #4]	; (80584 <set_joystick_horizontal_val+0x8>)
   8057e:	7018      	strb	r0, [r3, #0]
   80580:	4770      	bx	lr
   80582:	bf00      	nop
   80584:	20000450 	.word	0x20000450

00080588 <set_right_slider_val>:
void set_right_slider_val(uint8_t val) {right_slider_val = val;}
   80588:	4b01      	ldr	r3, [pc, #4]	; (80590 <set_right_slider_val+0x8>)
   8058a:	7058      	strb	r0, [r3, #1]
   8058c:	4770      	bx	lr
   8058e:	bf00      	nop
   80590:	20000450 	.word	0x20000450

00080594 <set_right_button_val>:
void set_right_button_val(uint8_t val) {right_button_val = val;}
   80594:	4b01      	ldr	r3, [pc, #4]	; (8059c <set_right_button_val+0x8>)
   80596:	7098      	strb	r0, [r3, #2]
   80598:	4770      	bx	lr
   8059a:	bf00      	nop
   8059c:	20000450 	.word	0x20000450

000805a0 <get_right_slider_val>:
	
uint8_t get_joystick_horizontal_val(void) {return joystick_horizontal_val;}
uint8_t get_right_slider_val(void) {return right_slider_val;}
   805a0:	4b01      	ldr	r3, [pc, #4]	; (805a8 <get_right_slider_val+0x8>)
   805a2:	7858      	ldrb	r0, [r3, #1]
   805a4:	4770      	bx	lr
   805a6:	bf00      	nop
   805a8:	20000450 	.word	0x20000450

000805ac <motor_disable_break>:
	PIOD->PIO_OER = DIR | EN | SEL | NOT_RST | NOT_IOE ;
	PIOC->PIO_ODR = (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7);
}

void motor_disable_break(uint8_t bool){
	if(bool){
   805ac:	b920      	cbnz	r0, 805b8 <motor_disable_break+0xc>
		PIOD->PIO_SODR = PIO_SODR_P9; // Set MJ1_EN high
		return;
	}
	PIOD->PIO_CODR = PIO_CODR_P9; // Set MJ1_EN low
   805ae:	f44f 7200 	mov.w	r2, #512	; 0x200
   805b2:	4b04      	ldr	r3, [pc, #16]	; (805c4 <motor_disable_break+0x18>)
   805b4:	635a      	str	r2, [r3, #52]	; 0x34
   805b6:	4770      	bx	lr
		PIOD->PIO_SODR = PIO_SODR_P9; // Set MJ1_EN high
   805b8:	f44f 7200 	mov.w	r2, #512	; 0x200
   805bc:	4b01      	ldr	r3, [pc, #4]	; (805c4 <motor_disable_break+0x18>)
   805be:	631a      	str	r2, [r3, #48]	; 0x30
		return;
   805c0:	4770      	bx	lr
   805c2:	bf00      	nop
   805c4:	400e1400 	.word	0x400e1400

000805c8 <motor_set_direction>:

}

void motor_set_direction(uint8_t dir){
	if(dir){
   805c8:	b920      	cbnz	r0, 805d4 <motor_set_direction+0xc>
		PIOD->PIO_SODR = PIO_SODR_P10; // Set MJ1_SEL high
		return;
	}
	PIOD->PIO_CODR = PIO_CODR_P10; // Set MJ1_SEL low
   805ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
   805ce:	4b04      	ldr	r3, [pc, #16]	; (805e0 <motor_set_direction+0x18>)
   805d0:	635a      	str	r2, [r3, #52]	; 0x34
   805d2:	4770      	bx	lr
		PIOD->PIO_SODR = PIO_SODR_P10; // Set MJ1_SEL high
   805d4:	f44f 6280 	mov.w	r2, #1024	; 0x400
   805d8:	4b01      	ldr	r3, [pc, #4]	; (805e0 <motor_set_direction+0x18>)
   805da:	631a      	str	r2, [r3, #48]	; 0x30
		return;
   805dc:	4770      	bx	lr
   805de:	bf00      	nop
   805e0:	400e1400 	.word	0x400e1400

000805e4 <motor_encoder_reset>:
		motor_set_direction(1);
	}
}

void motor_encoder_reset(void){
	PIOD->PIO_CODR = NOT_RST;
   805e4:	4b02      	ldr	r3, [pc, #8]	; (805f0 <motor_encoder_reset+0xc>)
   805e6:	2202      	movs	r2, #2
   805e8:	635a      	str	r2, [r3, #52]	; 0x34
	PIOD->PIO_SODR = NOT_RST;
   805ea:	631a      	str	r2, [r3, #48]	; 0x30
   805ec:	4770      	bx	lr
   805ee:	bf00      	nop
   805f0:	400e1400 	.word	0x400e1400

000805f4 <motor_encoder_read>:
}
	
uint16_t motor_encoder_read(void){
   805f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	// Encoder output enable
	PIOD->PIO_CODR = NOT_IOE;
   805f8:	4d0e      	ldr	r5, [pc, #56]	; (80634 <motor_encoder_read+0x40>)
   805fa:	2701      	movs	r7, #1
   805fc:	636f      	str	r7, [r5, #52]	; 0x34
	
	PIOD->PIO_SODR = SEL;// Set SEL = 1
   805fe:	f04f 0904 	mov.w	r9, #4
   80602:	f8c5 9030 	str.w	r9, [r5, #48]	; 0x30
	delay_us(20);
   80606:	2014      	movs	r0, #20
   80608:	f8df 8034 	ldr.w	r8, [pc, #52]	; 80640 <motor_encoder_read+0x4c>
   8060c:	47c0      	blx	r8
	uint8_t low_byte = ((PIOC->PIO_PDSR) & (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7)) >> 1;
   8060e:	4e0a      	ldr	r6, [pc, #40]	; (80638 <motor_encoder_read+0x44>)
   80610:	6bf4      	ldr	r4, [r6, #60]	; 0x3c
   80612:	f3c4 0447 	ubfx	r4, r4, #1, #8
	
	
	
	PIOD->PIO_CODR = SEL; // Set SEL = 0
   80616:	f8c5 9034 	str.w	r9, [r5, #52]	; 0x34
	delay_us(20);
   8061a:	2014      	movs	r0, #20
   8061c:	47c0      	blx	r8
	uint8_t high_byte = ((PIOC->PIO_PDSR) & (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7)) >> 1;
   8061e:	6bf6      	ldr	r6, [r6, #60]	; 0x3c
   80620:	40fe      	lsrs	r6, r7
		
	motor_encoder_reset();
   80622:	4b06      	ldr	r3, [pc, #24]	; (8063c <motor_encoder_read+0x48>)
   80624:	4798      	blx	r3
	
	uint16_t data = low_byte | (high_byte << 8);
   80626:	ea44 2006 	orr.w	r0, r4, r6, lsl #8
	
	// Encoder output disable
	PIOD->PIO_SODR = NOT_IOE;
   8062a:	632f      	str	r7, [r5, #48]	; 0x30
	return data;
}
   8062c:	b280      	uxth	r0, r0
   8062e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80632:	bf00      	nop
   80634:	400e1400 	.word	0x400e1400
   80638:	400e1200 	.word	0x400e1200
   8063c:	000805e5 	.word	0x000805e5
   80640:	000809e9 	.word	0x000809e9

00080644 <DAC_init>:

void DAC_init(void){
	
	//set perifiral clk on PMC
	// Enable peripheral clock on PID38 (DACC)
	PMC->PMC_PCER1 |= PMC_PCER1_PID38;
   80644:	4a0c      	ldr	r2, [pc, #48]	; (80678 <DAC_init+0x34>)
   80646:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   8064a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8064e:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	
	// Disable IO for PB16, which enables Peripheral control of the pin
	PIOB->PIO_PDR |= PIO_PDR_P16;
   80652:	f502 6220 	add.w	r2, r2, #2560	; 0xa00
   80656:	6853      	ldr	r3, [r2, #4]
   80658:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8065c:	6053      	str	r3, [r2, #4]
	
	
	//set DAC Mode
	
	DACC->DACC_MR |= DACC_MR_USER_SEL_CHANNEL1;
   8065e:	4b07      	ldr	r3, [pc, #28]	; (8067c <DAC_init+0x38>)
   80660:	685a      	ldr	r2, [r3, #4]
   80662:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
   80666:	605a      	str	r2, [r3, #4]
	DACC->DACC_MR |= DACC_MR_WORD_HALF;
   80668:	685a      	ldr	r2, [r3, #4]
   8066a:	605a      	str	r2, [r3, #4]
	
	//Enable channel 1
	DACC->DACC_CHER |= DACC_CHER_CH1;
   8066c:	691a      	ldr	r2, [r3, #16]
   8066e:	f042 0202 	orr.w	r2, r2, #2
   80672:	611a      	str	r2, [r3, #16]
   80674:	4770      	bx	lr
   80676:	bf00      	nop
   80678:	400e0600 	.word	0x400e0600
   8067c:	400c8000 	.word	0x400c8000

00080680 <motor_init>:
void motor_init(void){
   80680:	b508      	push	{r3, lr}
	DAC_init(); 
   80682:	4b0c      	ldr	r3, [pc, #48]	; (806b4 <motor_init+0x34>)
   80684:	4798      	blx	r3
	PMC->PMC_PCER0 |= PMC_PCER0_PID13 ;
   80686:	4a0c      	ldr	r2, [pc, #48]	; (806b8 <motor_init+0x38>)
   80688:	6913      	ldr	r3, [r2, #16]
   8068a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8068e:	6113      	str	r3, [r2, #16]
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_PID(13) ;
   80690:	f8d2 310c 	ldr.w	r3, [r2, #268]	; 0x10c
   80694:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   80698:	f043 030d 	orr.w	r3, r3, #13
   8069c:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
	PIOD->PIO_OER = DIR | EN | SEL | NOT_RST | NOT_IOE ;
   806a0:	f240 6207 	movw	r2, #1543	; 0x607
   806a4:	4b05      	ldr	r3, [pc, #20]	; (806bc <motor_init+0x3c>)
   806a6:	611a      	str	r2, [r3, #16]
	PIOC->PIO_ODR = (DO0 | DO1 | DO2 | DO3 | DO4 | DO5 | DO6 | DO7);
   806a8:	f44f 72ff 	mov.w	r2, #510	; 0x1fe
   806ac:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
   806b0:	615a      	str	r2, [r3, #20]
   806b2:	bd08      	pop	{r3, pc}
   806b4:	00080645 	.word	0x00080645
   806b8:	400e0600 	.word	0x400e0600
   806bc:	400e1400 	.word	0x400e1400

000806c0 <motor_set_speed>:
}


void motor_set_speed(uint32_t percentage){

	uint32_t digitalspeed = ((percentage))*0x1C ;
   806c0:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
   806c4:	0083      	lsls	r3, r0, #2

	//set conversion reg in DAC
	DACC->DACC_CDR = digitalspeed;	
   806c6:	4a01      	ldr	r2, [pc, #4]	; (806cc <motor_set_speed+0xc>)
   806c8:	6213      	str	r3, [r2, #32]
   806ca:	4770      	bx	lr
   806cc:	400c8000 	.word	0x400c8000

000806d0 <motor_pid_controlled>:
void motor_pid_controlled(void){
   806d0:	b510      	push	{r4, lr}
	int u = pid_get_u();
   806d2:	4b09      	ldr	r3, [pc, #36]	; (806f8 <motor_pid_controlled+0x28>)
   806d4:	4798      	blx	r3
   806d6:	4604      	mov	r4, r0
	motor_set_speed(abs(u));
   806d8:	ea80 70e0 	eor.w	r0, r0, r0, asr #31
   806dc:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
   806e0:	4b06      	ldr	r3, [pc, #24]	; (806fc <motor_pid_controlled+0x2c>)
   806e2:	4798      	blx	r3
	if (u < 0){
   806e4:	2c00      	cmp	r4, #0
   806e6:	db03      	blt.n	806f0 <motor_pid_controlled+0x20>
		motor_set_direction(1);
   806e8:	2001      	movs	r0, #1
   806ea:	4b05      	ldr	r3, [pc, #20]	; (80700 <motor_pid_controlled+0x30>)
   806ec:	4798      	blx	r3
   806ee:	bd10      	pop	{r4, pc}
		motor_set_direction(0);
   806f0:	2000      	movs	r0, #0
   806f2:	4b03      	ldr	r3, [pc, #12]	; (80700 <motor_pid_controlled+0x30>)
   806f4:	4798      	blx	r3
   806f6:	bd10      	pop	{r4, pc}
   806f8:	000807f1 	.word	0x000807f1
   806fc:	000806c1 	.word	0x000806c1
   80700:	000805c9 	.word	0x000805c9

00080704 <pid_update_e>:
TC1_Handler(){
	REG_TC0_SR1;
	pid_update_e();
}

void pid_update_e (void){
   80704:	b510      	push	{r4, lr}
	e_pri = e;
   80706:	4b10      	ldr	r3, [pc, #64]	; (80748 <pid_update_e+0x44>)
   80708:	681a      	ldr	r2, [r3, #0]
   8070a:	605a      	str	r2, [r3, #4]
	e_i += e;
   8070c:	681a      	ldr	r2, [r3, #0]
   8070e:	6899      	ldr	r1, [r3, #8]
   80710:	440a      	add	r2, r1
   80712:	609a      	str	r2, [r3, #8]
	uint16_t encoder_val = motor_encoder_read();
   80714:	4b0d      	ldr	r3, [pc, #52]	; (8074c <pid_update_e+0x48>)
   80716:	4798      	blx	r3
   80718:	4604      	mov	r4, r0
	if(encoder_val > 10000) encoder_val = 0;
   8071a:	f242 7310 	movw	r3, #10000	; 0x2710
   8071e:	4298      	cmp	r0, r3
   80720:	d900      	bls.n	80724 <pid_update_e+0x20>
   80722:	2400      	movs	r4, #0
	e = get_right_slider_val()-(100-(encoder_val*100)/9010);
   80724:	4b0a      	ldr	r3, [pc, #40]	; (80750 <pid_update_e+0x4c>)
   80726:	4798      	blx	r3
   80728:	f06f 0363 	mvn.w	r3, #99	; 0x63
   8072c:	fb03 f304 	mul.w	r3, r3, r4
   80730:	4a08      	ldr	r2, [pc, #32]	; (80754 <pid_update_e+0x50>)
   80732:	fb82 1203 	smull	r1, r2, r2, r3
   80736:	17db      	asrs	r3, r3, #31
   80738:	ebc3 23e2 	rsb	r3, r3, r2, asr #11
   8073c:	3364      	adds	r3, #100	; 0x64
   8073e:	1ac0      	subs	r0, r0, r3
   80740:	4b01      	ldr	r3, [pc, #4]	; (80748 <pid_update_e+0x44>)
   80742:	6018      	str	r0, [r3, #0]
   80744:	bd10      	pop	{r4, pc}
   80746:	bf00      	nop
   80748:	20000454 	.word	0x20000454
   8074c:	000805f5 	.word	0x000805f5
   80750:	000805a1 	.word	0x000805a1
   80754:	3a308779 	.word	0x3a308779

00080758 <TC1_Handler>:
TC1_Handler(){
   80758:	b508      	push	{r3, lr}
	REG_TC0_SR1;
   8075a:	4b02      	ldr	r3, [pc, #8]	; (80764 <TC1_Handler+0xc>)
   8075c:	681b      	ldr	r3, [r3, #0]
	pid_update_e();
   8075e:	4b02      	ldr	r3, [pc, #8]	; (80768 <TC1_Handler+0x10>)
   80760:	4798      	blx	r3
   80762:	bd08      	pop	{r3, pc}
   80764:	40080060 	.word	0x40080060
   80768:	00080705 	.word	0x00080705
   8076c:	00000000 	.word	0x00000000

00080770 <pid_update_u>:
}

void pid_update_u (void){
   80770:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
	u = K_p*e + (e_i*K_i*T_ms)/1000;
   80774:	4c16      	ldr	r4, [pc, #88]	; (807d0 <pid_update_u+0x60>)
   80776:	6820      	ldr	r0, [r4, #0]
   80778:	4e16      	ldr	r6, [pc, #88]	; (807d4 <pid_update_u+0x64>)
   8077a:	47b0      	blx	r6
   8077c:	4d16      	ldr	r5, [pc, #88]	; (807d8 <pid_update_u+0x68>)
   8077e:	a310      	add	r3, pc, #64	; (adr r3, 807c0 <pid_update_u+0x50>)
   80780:	e9d3 2300 	ldrd	r2, r3, [r3]
   80784:	47a8      	blx	r5
   80786:	4680      	mov	r8, r0
   80788:	4689      	mov	r9, r1
   8078a:	68a0      	ldr	r0, [r4, #8]
   8078c:	47b0      	blx	r6
   8078e:	a30e      	add	r3, pc, #56	; (adr r3, 807c8 <pid_update_u+0x58>)
   80790:	e9d3 2300 	ldrd	r2, r3, [r3]
   80794:	47a8      	blx	r5
   80796:	2200      	movs	r2, #0
   80798:	4b10      	ldr	r3, [pc, #64]	; (807dc <pid_update_u+0x6c>)
   8079a:	47a8      	blx	r5
   8079c:	2200      	movs	r2, #0
   8079e:	4b10      	ldr	r3, [pc, #64]	; (807e0 <pid_update_u+0x70>)
   807a0:	4d10      	ldr	r5, [pc, #64]	; (807e4 <pid_update_u+0x74>)
   807a2:	47a8      	blx	r5
   807a4:	4602      	mov	r2, r0
   807a6:	460b      	mov	r3, r1
   807a8:	4640      	mov	r0, r8
   807aa:	4649      	mov	r1, r9
   807ac:	4d0e      	ldr	r5, [pc, #56]	; (807e8 <pid_update_u+0x78>)
   807ae:	47a8      	blx	r5
   807b0:	4b0e      	ldr	r3, [pc, #56]	; (807ec <pid_update_u+0x7c>)
   807b2:	4798      	blx	r3
   807b4:	60e0      	str	r0, [r4, #12]
   807b6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   807ba:	bf00      	nop
   807bc:	f3af 8000 	nop.w
   807c0:	66666666 	.word	0x66666666
   807c4:	40066666 	.word	0x40066666
   807c8:	66666666 	.word	0x66666666
   807cc:	3fe66666 	.word	0x3fe66666
   807d0:	20000454 	.word	0x20000454
   807d4:	0008106d 	.word	0x0008106d
   807d8:	00081139 	.word	0x00081139
   807dc:	40590000 	.word	0x40590000
   807e0:	408f4000 	.word	0x408f4000
   807e4:	0008138d 	.word	0x0008138d
   807e8:	00080dd5 	.word	0x00080dd5
   807ec:	0008155d 	.word	0x0008155d

000807f0 <pid_get_u>:

}

int pid_get_u (void){
   807f0:	b508      	push	{r3, lr}
	pid_update_u();
   807f2:	4b02      	ldr	r3, [pc, #8]	; (807fc <pid_get_u+0xc>)
   807f4:	4798      	blx	r3
	return u;
   807f6:	4b02      	ldr	r3, [pc, #8]	; (80800 <pid_get_u+0x10>)
   807f8:	68d8      	ldr	r0, [r3, #12]
   807fa:	bd08      	pop	{r3, pc}
   807fc:	00080771 	.word	0x00080771
   80800:	20000454 	.word	0x20000454

00080804 <ADC_init>:
   80804:	4a0d      	ldr	r2, [pc, #52]	; (8083c <ADC_init+0x38>)
   80806:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   8080a:	f043 0320 	orr.w	r3, r3, #32
   8080e:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   80812:	f502 6200 	add.w	r2, r2, #2048	; 0x800
   80816:	6853      	ldr	r3, [r2, #4]
   80818:	f043 0304 	orr.w	r3, r3, #4
   8081c:	6053      	str	r3, [r2, #4]
   8081e:	4b08      	ldr	r3, [pc, #32]	; (80840 <ADC_init+0x3c>)
   80820:	691a      	ldr	r2, [r3, #16]
   80822:	f042 0201 	orr.w	r2, r2, #1
   80826:	611a      	str	r2, [r3, #16]
   80828:	685a      	ldr	r2, [r3, #4]
   8082a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8082e:	605a      	str	r2, [r3, #4]
   80830:	681a      	ldr	r2, [r3, #0]
   80832:	f042 0202 	orr.w	r2, r2, #2
   80836:	601a      	str	r2, [r3, #0]
   80838:	4770      	bx	lr
   8083a:	bf00      	nop
   8083c:	400e0600 	.word	0x400e0600
   80840:	400c0000 	.word	0x400c0000

00080844 <ADC_read>:
   80844:	4b01      	ldr	r3, [pc, #4]	; (8084c <ADC_read+0x8>)
   80846:	6d18      	ldr	r0, [r3, #80]	; 0x50
   80848:	4770      	bx	lr
   8084a:	bf00      	nop
   8084c:	400c0000 	.word	0x400c0000

00080850 <goal>:
   80850:	b508      	push	{r3, lr}
   80852:	4b04      	ldr	r3, [pc, #16]	; (80864 <goal+0x14>)
   80854:	4798      	blx	r3
   80856:	f5b0 7ffa 	cmp.w	r0, #500	; 0x1f4
   8085a:	d301      	bcc.n	80860 <goal+0x10>
   8085c:	2000      	movs	r0, #0
   8085e:	bd08      	pop	{r3, pc}
   80860:	2001      	movs	r0, #1
   80862:	bd08      	pop	{r3, pc}
   80864:	00080845 	.word	0x00080845

00080868 <PWM_init>:
   80868:	4a21      	ldr	r2, [pc, #132]	; (808f0 <PWM_init+0x88>)
   8086a:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   8086e:	f043 0310 	orr.w	r3, r3, #16
   80872:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   80876:	4b1f      	ldr	r3, [pc, #124]	; (808f4 <PWM_init+0x8c>)
   80878:	685a      	ldr	r2, [r3, #4]
   8087a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   8087e:	605a      	str	r2, [r3, #4]
   80880:	685a      	ldr	r2, [r3, #4]
   80882:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   80886:	605a      	str	r2, [r3, #4]
   80888:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8088a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   8088e:	671a      	str	r2, [r3, #112]	; 0x70
   80890:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80892:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   80896:	671a      	str	r2, [r3, #112]	; 0x70
   80898:	4a17      	ldr	r2, [pc, #92]	; (808f8 <PWM_init+0x90>)
   8089a:	6813      	ldr	r3, [r2, #0]
   8089c:	f043 0307 	orr.w	r3, r3, #7
   808a0:	6013      	str	r3, [r2, #0]
   808a2:	3220      	adds	r2, #32
   808a4:	6813      	ldr	r3, [r2, #0]
   808a6:	f043 0307 	orr.w	r3, r3, #7
   808aa:	6013      	str	r3, [r2, #0]
   808ac:	4b13      	ldr	r3, [pc, #76]	; (808fc <PWM_init+0x94>)
   808ae:	681a      	ldr	r2, [r3, #0]
   808b0:	f243 3145 	movw	r1, #13125	; 0x3345
   808b4:	430a      	orrs	r2, r1
   808b6:	601a      	str	r2, [r3, #0]
   808b8:	4a11      	ldr	r2, [pc, #68]	; (80900 <PWM_init+0x98>)
   808ba:	6813      	ldr	r3, [r2, #0]
   808bc:	430b      	orrs	r3, r1
   808be:	6013      	str	r3, [r2, #0]
   808c0:	3a28      	subs	r2, #40	; 0x28
   808c2:	6813      	ldr	r3, [r2, #0]
   808c4:	f443 5343 	orr.w	r3, r3, #12480	; 0x30c0
   808c8:	f043 0335 	orr.w	r3, r3, #53	; 0x35
   808cc:	6013      	str	r3, [r2, #0]
   808ce:	3220      	adds	r2, #32
   808d0:	6813      	ldr	r3, [r2, #0]
   808d2:	f443 5337 	orr.w	r3, r3, #11712	; 0x2dc0
   808d6:	f043 0322 	orr.w	r3, r3, #34	; 0x22
   808da:	6013      	str	r3, [r2, #0]
   808dc:	4b09      	ldr	r3, [pc, #36]	; (80904 <PWM_init+0x9c>)
   808de:	685a      	ldr	r2, [r3, #4]
   808e0:	f042 0220 	orr.w	r2, r2, #32
   808e4:	605a      	str	r2, [r3, #4]
   808e6:	685a      	ldr	r2, [r3, #4]
   808e8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   808ec:	605a      	str	r2, [r3, #4]
   808ee:	4770      	bx	lr
   808f0:	400e0600 	.word	0x400e0600
   808f4:	400e1200 	.word	0x400e1200
   808f8:	400942a0 	.word	0x400942a0
   808fc:	400942ac 	.word	0x400942ac
   80900:	400942cc 	.word	0x400942cc
   80904:	40094000 	.word	0x40094000

00080908 <PWM_update_dutycycle>:
   80908:	4b07      	ldr	r3, [pc, #28]	; (80928 <PWM_update_dutycycle+0x20>)
   8090a:	fb03 f000 	mul.w	r0, r3, r0
   8090e:	f500 10a0 	add.w	r0, r0, #1310720	; 0x140000
   80912:	f500 60d2 	add.w	r0, r0, #1680	; 0x690
   80916:	4b05      	ldr	r3, [pc, #20]	; (8092c <PWM_update_dutycycle+0x24>)
   80918:	fba3 3000 	umull	r3, r0, r3, r0
   8091c:	0940      	lsrs	r0, r0, #5
   8091e:	4b04      	ldr	r3, [pc, #16]	; (80930 <PWM_update_dutycycle+0x28>)
   80920:	6018      	str	r0, [r3, #0]
   80922:	3320      	adds	r3, #32
   80924:	6018      	str	r0, [r3, #0]
   80926:	4770      	bx	lr
   80928:	ffffccbc 	.word	0xffffccbc
   8092c:	51eb851f 	.word	0x51eb851f
   80930:	400942a8 	.word	0x400942a8

00080934 <set_servo_posistion>:
 */ 

#include "servocontrol.h"


void set_servo_posistion(uint32_t joystick_percentage){
   80934:	b508      	push	{r3, lr}
	
	uint32_t dutyCycle = (100-joystick_percentage)/20 + 5;
   80936:	f1c0 0064 	rsb	r0, r0, #100	; 0x64
   8093a:	4b04      	ldr	r3, [pc, #16]	; (8094c <set_servo_posistion+0x18>)
   8093c:	fba3 3000 	umull	r3, r0, r3, r0
   80940:	0900      	lsrs	r0, r0, #4
	
	//printf("dutyculce %d \n\r", dutyCycle);
	
	
	PWM_update_dutycycle(dutyCycle);
   80942:	3005      	adds	r0, #5
   80944:	4b02      	ldr	r3, [pc, #8]	; (80950 <set_servo_posistion+0x1c>)
   80946:	4798      	blx	r3
   80948:	bd08      	pop	{r3, pc}
   8094a:	bf00      	nop
   8094c:	cccccccd 	.word	0xcccccccd
   80950:	00080909 	.word	0x00080909

00080954 <timer_init>:
#include "sam.h"
#include <stdio.h>

void timer_init( void ){	
	// Delay
	PMC->PMC_PCR |= PMC_PCR_DIV_PERIPH_DIV_MCK | PMC_PCR_EN;
   80954:	4b1d      	ldr	r3, [pc, #116]	; (809cc <timer_init+0x78>)
   80956:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   8095a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
   8095e:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCER0 |= PMC_PCER0_PID27;
   80962:	691a      	ldr	r2, [r3, #16]
   80964:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
   80968:	611a      	str	r2, [r3, #16]

	REG_TC0_CMR0 |= TC_CMR_WAVE;
   8096a:	4a19      	ldr	r2, [pc, #100]	; (809d0 <timer_init+0x7c>)
   8096c:	6811      	ldr	r1, [r2, #0]
   8096e:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
   80972:	6011      	str	r1, [r2, #0]
	REG_TC0_CMR0 |= TC_CMR_CPCSTOP;
   80974:	6811      	ldr	r1, [r2, #0]
   80976:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   8097a:	6011      	str	r1, [r2, #0]
	REG_TC0_CCR0 |= TC_CCR_CLKEN;
   8097c:	4915      	ldr	r1, [pc, #84]	; (809d4 <timer_init+0x80>)
   8097e:	680a      	ldr	r2, [r1, #0]
   80980:	f042 0201 	orr.w	r2, r2, #1
   80984:	600a      	str	r2, [r1, #0]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80986:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8098a:	4a13      	ldr	r2, [pc, #76]	; (809d8 <timer_init+0x84>)
   8098c:	6011      	str	r1, [r2, #0]
	
	
	// Interrupt
	NVIC_EnableIRQ(ID_TC1);
	PMC->PMC_PCER0 |= PMC_PCER0_PID28;
   8098e:	691a      	ldr	r2, [r3, #16]
   80990:	430a      	orrs	r2, r1
   80992:	611a      	str	r2, [r3, #16]

	REG_TC0_CMR1 |= TC_CMR_WAVE;
   80994:	f5a3 23c0 	sub.w	r3, r3, #393216	; 0x60000
   80998:	f2a3 53bc 	subw	r3, r3, #1468	; 0x5bc
   8099c:	681a      	ldr	r2, [r3, #0]
   8099e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
   809a2:	601a      	str	r2, [r3, #0]
	REG_TC0_CMR1 |= TC_CMR_TCCLKS_TIMER_CLOCK3;
   809a4:	681a      	ldr	r2, [r3, #0]
   809a6:	f042 0202 	orr.w	r2, r2, #2
   809aa:	601a      	str	r2, [r3, #0]
	REG_TC0_CMR1 |= TC_CMR_WAVSEL_UP_RC;
   809ac:	681a      	ldr	r2, [r3, #0]
   809ae:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   809b2:	601a      	str	r2, [r3, #0]

	REG_TC0_CCR1 |= TC_CCR_CLKEN | TC_CCR_SWTRG;
   809b4:	4a09      	ldr	r2, [pc, #36]	; (809dc <timer_init+0x88>)
   809b6:	6813      	ldr	r3, [r2, #0]
   809b8:	f043 0305 	orr.w	r3, r3, #5
   809bc:	6013      	str	r3, [r2, #0]
	
	REG_TC0_IER1 = TC_IER_CPCS;
   809be:	2210      	movs	r2, #16
   809c0:	4b07      	ldr	r3, [pc, #28]	; (809e0 <timer_init+0x8c>)
   809c2:	601a      	str	r2, [r3, #0]

	REG_TC0_RC1 = 262500;
   809c4:	4a07      	ldr	r2, [pc, #28]	; (809e4 <timer_init+0x90>)
   809c6:	3b08      	subs	r3, #8
   809c8:	601a      	str	r2, [r3, #0]
   809ca:	4770      	bx	lr
   809cc:	400e0600 	.word	0x400e0600
   809d0:	40080004 	.word	0x40080004
   809d4:	40080000 	.word	0x40080000
   809d8:	e000e100 	.word	0xe000e100
   809dc:	40080040 	.word	0x40080040
   809e0:	40080064 	.word	0x40080064
   809e4:	00040164 	.word	0x00040164

000809e8 <delay_us>:
	}
}

void delay_us( int delay ){

	REG_TC0_CMR0 |= TC_CMR_TCCLKS_TIMER_CLOCK1;
   809e8:	4b0a      	ldr	r3, [pc, #40]	; (80a14 <delay_us+0x2c>)
   809ea:	681a      	ldr	r2, [r3, #0]
   809ec:	601a      	str	r2, [r3, #0]
	REG_TC0_RC0 = 41;
   809ee:	2229      	movs	r2, #41	; 0x29
   809f0:	3318      	adds	r3, #24
   809f2:	601a      	str	r2, [r3, #0]

	for (int i = 0; i < delay; i++){
   809f4:	2200      	movs	r2, #0
   809f6:	e00a      	b.n	80a0e <delay_us+0x26>
		// Start the clock
		REG_TC0_CCR0 |= TC_CCR_SWTRG;
   809f8:	4907      	ldr	r1, [pc, #28]	; (80a18 <delay_us+0x30>)
   809fa:	680b      	ldr	r3, [r1, #0]
   809fc:	f043 0304 	orr.w	r3, r3, #4
   80a00:	600b      	str	r3, [r1, #0]
		while (!(REG_TC0_SR0 & TC_SR_CPCS));
   80a02:	4b06      	ldr	r3, [pc, #24]	; (80a1c <delay_us+0x34>)
   80a04:	681b      	ldr	r3, [r3, #0]
   80a06:	f013 0f10 	tst.w	r3, #16
   80a0a:	d0fa      	beq.n	80a02 <delay_us+0x1a>
	for (int i = 0; i < delay; i++){
   80a0c:	3201      	adds	r2, #1
   80a0e:	4282      	cmp	r2, r0
   80a10:	dbf2      	blt.n	809f8 <delay_us+0x10>
	}
   80a12:	4770      	bx	lr
   80a14:	40080004 	.word	0x40080004
   80a18:	40080000 	.word	0x40080000
   80a1c:	40080020 	.word	0x40080020

00080a20 <printchar>:
   80a20:	b508      	push	{r3, lr}
   80a22:	b2c8      	uxtb	r0, r1
   80a24:	4b01      	ldr	r3, [pc, #4]	; (80a2c <printchar+0xc>)
   80a26:	4798      	blx	r3
   80a28:	bd08      	pop	{r3, pc}
   80a2a:	bf00      	nop
   80a2c:	00080d3d 	.word	0x00080d3d

00080a30 <prints>:
   80a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80a34:	4607      	mov	r7, r0
   80a36:	460e      	mov	r6, r1
   80a38:	1e15      	subs	r5, r2, #0
   80a3a:	dd02      	ble.n	80a42 <prints+0x12>
   80a3c:	460a      	mov	r2, r1
   80a3e:	2100      	movs	r1, #0
   80a40:	e004      	b.n	80a4c <prints+0x1c>
   80a42:	f04f 0820 	mov.w	r8, #32
   80a46:	e00e      	b.n	80a66 <prints+0x36>
   80a48:	3101      	adds	r1, #1
   80a4a:	3201      	adds	r2, #1
   80a4c:	7810      	ldrb	r0, [r2, #0]
   80a4e:	2800      	cmp	r0, #0
   80a50:	d1fa      	bne.n	80a48 <prints+0x18>
   80a52:	42a9      	cmp	r1, r5
   80a54:	da01      	bge.n	80a5a <prints+0x2a>
   80a56:	1a6d      	subs	r5, r5, r1
   80a58:	e000      	b.n	80a5c <prints+0x2c>
   80a5a:	2500      	movs	r5, #0
   80a5c:	f013 0f02 	tst.w	r3, #2
   80a60:	d106      	bne.n	80a70 <prints+0x40>
   80a62:	f04f 0820 	mov.w	r8, #32
   80a66:	f013 0401 	ands.w	r4, r3, #1
   80a6a:	d00a      	beq.n	80a82 <prints+0x52>
   80a6c:	2400      	movs	r4, #0
   80a6e:	e010      	b.n	80a92 <prints+0x62>
   80a70:	f04f 0830 	mov.w	r8, #48	; 0x30
   80a74:	e7f7      	b.n	80a66 <prints+0x36>
   80a76:	4641      	mov	r1, r8
   80a78:	4638      	mov	r0, r7
   80a7a:	4b0d      	ldr	r3, [pc, #52]	; (80ab0 <prints+0x80>)
   80a7c:	4798      	blx	r3
   80a7e:	3401      	adds	r4, #1
   80a80:	3d01      	subs	r5, #1
   80a82:	2d00      	cmp	r5, #0
   80a84:	dcf7      	bgt.n	80a76 <prints+0x46>
   80a86:	e004      	b.n	80a92 <prints+0x62>
   80a88:	4638      	mov	r0, r7
   80a8a:	4b09      	ldr	r3, [pc, #36]	; (80ab0 <prints+0x80>)
   80a8c:	4798      	blx	r3
   80a8e:	3401      	adds	r4, #1
   80a90:	3601      	adds	r6, #1
   80a92:	7831      	ldrb	r1, [r6, #0]
   80a94:	2900      	cmp	r1, #0
   80a96:	d1f7      	bne.n	80a88 <prints+0x58>
   80a98:	e005      	b.n	80aa6 <prints+0x76>
   80a9a:	4641      	mov	r1, r8
   80a9c:	4638      	mov	r0, r7
   80a9e:	4b04      	ldr	r3, [pc, #16]	; (80ab0 <prints+0x80>)
   80aa0:	4798      	blx	r3
   80aa2:	3401      	adds	r4, #1
   80aa4:	3d01      	subs	r5, #1
   80aa6:	2d00      	cmp	r5, #0
   80aa8:	dcf7      	bgt.n	80a9a <prints+0x6a>
   80aaa:	4620      	mov	r0, r4
   80aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80ab0:	00080a21 	.word	0x00080a21

00080ab4 <printi>:
   80ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
   80ab6:	b085      	sub	sp, #20
   80ab8:	4607      	mov	r7, r0
   80aba:	980c      	ldr	r0, [sp, #48]	; 0x30
   80abc:	b151      	cbz	r1, 80ad4 <printi+0x20>
   80abe:	461e      	mov	r6, r3
   80ac0:	460c      	mov	r4, r1
   80ac2:	b113      	cbz	r3, 80aca <printi+0x16>
   80ac4:	2a0a      	cmp	r2, #10
   80ac6:	d012      	beq.n	80aee <printi+0x3a>
   80ac8:	2600      	movs	r6, #0
   80aca:	ad04      	add	r5, sp, #16
   80acc:	2300      	movs	r3, #0
   80ace:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80ad2:	e018      	b.n	80b06 <printi+0x52>
   80ad4:	2330      	movs	r3, #48	; 0x30
   80ad6:	f88d 3004 	strb.w	r3, [sp, #4]
   80ada:	2300      	movs	r3, #0
   80adc:	f88d 3005 	strb.w	r3, [sp, #5]
   80ae0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80ae2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80ae4:	a901      	add	r1, sp, #4
   80ae6:	4638      	mov	r0, r7
   80ae8:	4c1b      	ldr	r4, [pc, #108]	; (80b58 <printi+0xa4>)
   80aea:	47a0      	blx	r4
   80aec:	e029      	b.n	80b42 <printi+0x8e>
   80aee:	2900      	cmp	r1, #0
   80af0:	db01      	blt.n	80af6 <printi+0x42>
   80af2:	2600      	movs	r6, #0
   80af4:	e7e9      	b.n	80aca <printi+0x16>
   80af6:	424c      	negs	r4, r1
   80af8:	2601      	movs	r6, #1
   80afa:	e7e6      	b.n	80aca <printi+0x16>
   80afc:	3330      	adds	r3, #48	; 0x30
   80afe:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80b02:	fbb4 f4f2 	udiv	r4, r4, r2
   80b06:	b14c      	cbz	r4, 80b1c <printi+0x68>
   80b08:	fbb4 f3f2 	udiv	r3, r4, r2
   80b0c:	fb02 4313 	mls	r3, r2, r3, r4
   80b10:	2b09      	cmp	r3, #9
   80b12:	ddf3      	ble.n	80afc <printi+0x48>
   80b14:	f1a0 013a 	sub.w	r1, r0, #58	; 0x3a
   80b18:	440b      	add	r3, r1
   80b1a:	e7ef      	b.n	80afc <printi+0x48>
   80b1c:	b156      	cbz	r6, 80b34 <printi+0x80>
   80b1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80b20:	b11b      	cbz	r3, 80b2a <printi+0x76>
   80b22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80b24:	f013 0f02 	tst.w	r3, #2
   80b28:	d10d      	bne.n	80b46 <printi+0x92>
   80b2a:	232d      	movs	r3, #45	; 0x2d
   80b2c:	f805 3c01 	strb.w	r3, [r5, #-1]
   80b30:	3d01      	subs	r5, #1
   80b32:	2600      	movs	r6, #0
   80b34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80b36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80b38:	4629      	mov	r1, r5
   80b3a:	4638      	mov	r0, r7
   80b3c:	4c06      	ldr	r4, [pc, #24]	; (80b58 <printi+0xa4>)
   80b3e:	47a0      	blx	r4
   80b40:	4430      	add	r0, r6
   80b42:	b005      	add	sp, #20
   80b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80b46:	212d      	movs	r1, #45	; 0x2d
   80b48:	4638      	mov	r0, r7
   80b4a:	4b04      	ldr	r3, [pc, #16]	; (80b5c <printi+0xa8>)
   80b4c:	4798      	blx	r3
   80b4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80b50:	3b01      	subs	r3, #1
   80b52:	930a      	str	r3, [sp, #40]	; 0x28
   80b54:	e7ee      	b.n	80b34 <printi+0x80>
   80b56:	bf00      	nop
   80b58:	00080a31 	.word	0x00080a31
   80b5c:	00080a21 	.word	0x00080a21

00080b60 <print>:
   80b60:	b5f0      	push	{r4, r5, r6, r7, lr}
   80b62:	b089      	sub	sp, #36	; 0x24
   80b64:	4606      	mov	r6, r0
   80b66:	460c      	mov	r4, r1
   80b68:	9205      	str	r2, [sp, #20]
   80b6a:	2500      	movs	r5, #0
   80b6c:	e081      	b.n	80c72 <print+0x112>
   80b6e:	1ca2      	adds	r2, r4, #2
   80b70:	2301      	movs	r3, #1
   80b72:	e08b      	b.n	80c8c <print+0x12c>
   80b74:	3401      	adds	r4, #1
   80b76:	f043 0302 	orr.w	r3, r3, #2
   80b7a:	7822      	ldrb	r2, [r4, #0]
   80b7c:	2a30      	cmp	r2, #48	; 0x30
   80b7e:	d0f9      	beq.n	80b74 <print+0x14>
   80b80:	2200      	movs	r2, #0
   80b82:	e006      	b.n	80b92 <print+0x32>
   80b84:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80b88:	0050      	lsls	r0, r2, #1
   80b8a:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   80b8e:	4402      	add	r2, r0
   80b90:	3401      	adds	r4, #1
   80b92:	7821      	ldrb	r1, [r4, #0]
   80b94:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   80b98:	b2c0      	uxtb	r0, r0
   80b9a:	2809      	cmp	r0, #9
   80b9c:	d9f2      	bls.n	80b84 <print+0x24>
   80b9e:	2973      	cmp	r1, #115	; 0x73
   80ba0:	d018      	beq.n	80bd4 <print+0x74>
   80ba2:	2964      	cmp	r1, #100	; 0x64
   80ba4:	d022      	beq.n	80bec <print+0x8c>
   80ba6:	2978      	cmp	r1, #120	; 0x78
   80ba8:	d02f      	beq.n	80c0a <print+0xaa>
   80baa:	2958      	cmp	r1, #88	; 0x58
   80bac:	d03c      	beq.n	80c28 <print+0xc8>
   80bae:	2975      	cmp	r1, #117	; 0x75
   80bb0:	d049      	beq.n	80c46 <print+0xe6>
   80bb2:	2963      	cmp	r1, #99	; 0x63
   80bb4:	d15c      	bne.n	80c70 <print+0x110>
   80bb6:	9905      	ldr	r1, [sp, #20]
   80bb8:	1d08      	adds	r0, r1, #4
   80bba:	9005      	str	r0, [sp, #20]
   80bbc:	7809      	ldrb	r1, [r1, #0]
   80bbe:	f88d 101c 	strb.w	r1, [sp, #28]
   80bc2:	2100      	movs	r1, #0
   80bc4:	f88d 101d 	strb.w	r1, [sp, #29]
   80bc8:	a907      	add	r1, sp, #28
   80bca:	4630      	mov	r0, r6
   80bcc:	4f34      	ldr	r7, [pc, #208]	; (80ca0 <print+0x140>)
   80bce:	47b8      	blx	r7
   80bd0:	4405      	add	r5, r0
   80bd2:	e04d      	b.n	80c70 <print+0x110>
   80bd4:	9905      	ldr	r1, [sp, #20]
   80bd6:	1d08      	adds	r0, r1, #4
   80bd8:	9005      	str	r0, [sp, #20]
   80bda:	6809      	ldr	r1, [r1, #0]
   80bdc:	b121      	cbz	r1, 80be8 <print+0x88>
   80bde:	4630      	mov	r0, r6
   80be0:	4f2f      	ldr	r7, [pc, #188]	; (80ca0 <print+0x140>)
   80be2:	47b8      	blx	r7
   80be4:	4405      	add	r5, r0
   80be6:	e043      	b.n	80c70 <print+0x110>
   80be8:	492e      	ldr	r1, [pc, #184]	; (80ca4 <print+0x144>)
   80bea:	e7f8      	b.n	80bde <print+0x7e>
   80bec:	9905      	ldr	r1, [sp, #20]
   80bee:	1d08      	adds	r0, r1, #4
   80bf0:	9005      	str	r0, [sp, #20]
   80bf2:	6809      	ldr	r1, [r1, #0]
   80bf4:	2061      	movs	r0, #97	; 0x61
   80bf6:	9002      	str	r0, [sp, #8]
   80bf8:	9301      	str	r3, [sp, #4]
   80bfa:	9200      	str	r2, [sp, #0]
   80bfc:	2301      	movs	r3, #1
   80bfe:	220a      	movs	r2, #10
   80c00:	4630      	mov	r0, r6
   80c02:	4f29      	ldr	r7, [pc, #164]	; (80ca8 <print+0x148>)
   80c04:	47b8      	blx	r7
   80c06:	4405      	add	r5, r0
   80c08:	e032      	b.n	80c70 <print+0x110>
   80c0a:	9905      	ldr	r1, [sp, #20]
   80c0c:	1d08      	adds	r0, r1, #4
   80c0e:	9005      	str	r0, [sp, #20]
   80c10:	6809      	ldr	r1, [r1, #0]
   80c12:	2061      	movs	r0, #97	; 0x61
   80c14:	9002      	str	r0, [sp, #8]
   80c16:	9301      	str	r3, [sp, #4]
   80c18:	9200      	str	r2, [sp, #0]
   80c1a:	2300      	movs	r3, #0
   80c1c:	2210      	movs	r2, #16
   80c1e:	4630      	mov	r0, r6
   80c20:	4f21      	ldr	r7, [pc, #132]	; (80ca8 <print+0x148>)
   80c22:	47b8      	blx	r7
   80c24:	4405      	add	r5, r0
   80c26:	e023      	b.n	80c70 <print+0x110>
   80c28:	9905      	ldr	r1, [sp, #20]
   80c2a:	1d08      	adds	r0, r1, #4
   80c2c:	9005      	str	r0, [sp, #20]
   80c2e:	6809      	ldr	r1, [r1, #0]
   80c30:	2041      	movs	r0, #65	; 0x41
   80c32:	9002      	str	r0, [sp, #8]
   80c34:	9301      	str	r3, [sp, #4]
   80c36:	9200      	str	r2, [sp, #0]
   80c38:	2300      	movs	r3, #0
   80c3a:	2210      	movs	r2, #16
   80c3c:	4630      	mov	r0, r6
   80c3e:	4f1a      	ldr	r7, [pc, #104]	; (80ca8 <print+0x148>)
   80c40:	47b8      	blx	r7
   80c42:	4405      	add	r5, r0
   80c44:	e014      	b.n	80c70 <print+0x110>
   80c46:	9905      	ldr	r1, [sp, #20]
   80c48:	1d08      	adds	r0, r1, #4
   80c4a:	9005      	str	r0, [sp, #20]
   80c4c:	6809      	ldr	r1, [r1, #0]
   80c4e:	2061      	movs	r0, #97	; 0x61
   80c50:	9002      	str	r0, [sp, #8]
   80c52:	9301      	str	r3, [sp, #4]
   80c54:	9200      	str	r2, [sp, #0]
   80c56:	2300      	movs	r3, #0
   80c58:	220a      	movs	r2, #10
   80c5a:	4630      	mov	r0, r6
   80c5c:	4f12      	ldr	r7, [pc, #72]	; (80ca8 <print+0x148>)
   80c5e:	47b8      	blx	r7
   80c60:	4405      	add	r5, r0
   80c62:	e005      	b.n	80c70 <print+0x110>
   80c64:	4614      	mov	r4, r2
   80c66:	7821      	ldrb	r1, [r4, #0]
   80c68:	4630      	mov	r0, r6
   80c6a:	4b10      	ldr	r3, [pc, #64]	; (80cac <print+0x14c>)
   80c6c:	4798      	blx	r3
   80c6e:	3501      	adds	r5, #1
   80c70:	3401      	adds	r4, #1
   80c72:	7823      	ldrb	r3, [r4, #0]
   80c74:	b163      	cbz	r3, 80c90 <print+0x130>
   80c76:	2b25      	cmp	r3, #37	; 0x25
   80c78:	d1f5      	bne.n	80c66 <print+0x106>
   80c7a:	1c62      	adds	r2, r4, #1
   80c7c:	7863      	ldrb	r3, [r4, #1]
   80c7e:	b13b      	cbz	r3, 80c90 <print+0x130>
   80c80:	2b25      	cmp	r3, #37	; 0x25
   80c82:	d0ef      	beq.n	80c64 <print+0x104>
   80c84:	2b2d      	cmp	r3, #45	; 0x2d
   80c86:	f43f af72 	beq.w	80b6e <print+0xe>
   80c8a:	2300      	movs	r3, #0
   80c8c:	4614      	mov	r4, r2
   80c8e:	e774      	b.n	80b7a <print+0x1a>
   80c90:	b116      	cbz	r6, 80c98 <print+0x138>
   80c92:	6833      	ldr	r3, [r6, #0]
   80c94:	2200      	movs	r2, #0
   80c96:	701a      	strb	r2, [r3, #0]
   80c98:	4628      	mov	r0, r5
   80c9a:	b009      	add	sp, #36	; 0x24
   80c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80c9e:	bf00      	nop
   80ca0:	00080a31 	.word	0x00080a31
   80ca4:	0008176c 	.word	0x0008176c
   80ca8:	00080ab5 	.word	0x00080ab5
   80cac:	00080a21 	.word	0x00080a21

00080cb0 <printf>:
   80cb0:	b40f      	push	{r0, r1, r2, r3}
   80cb2:	b500      	push	{lr}
   80cb4:	b083      	sub	sp, #12
   80cb6:	aa04      	add	r2, sp, #16
   80cb8:	f852 1b04 	ldr.w	r1, [r2], #4
   80cbc:	9201      	str	r2, [sp, #4]
   80cbe:	2000      	movs	r0, #0
   80cc0:	4b03      	ldr	r3, [pc, #12]	; (80cd0 <printf+0x20>)
   80cc2:	4798      	blx	r3
   80cc4:	b003      	add	sp, #12
   80cc6:	f85d eb04 	ldr.w	lr, [sp], #4
   80cca:	b004      	add	sp, #16
   80ccc:	4770      	bx	lr
   80cce:	bf00      	nop
   80cd0:	00080b61 	.word	0x00080b61

00080cd4 <configure_uart>:
   80cd4:	4b16      	ldr	r3, [pc, #88]	; (80d30 <configure_uart+0x5c>)
   80cd6:	2200      	movs	r2, #0
   80cd8:	701a      	strb	r2, [r3, #0]
   80cda:	705a      	strb	r2, [r3, #1]
   80cdc:	4b15      	ldr	r3, [pc, #84]	; (80d34 <configure_uart+0x60>)
   80cde:	f44f 7140 	mov.w	r1, #768	; 0x300
   80ce2:	6459      	str	r1, [r3, #68]	; 0x44
   80ce4:	6059      	str	r1, [r3, #4]
   80ce6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80ce8:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80cea:	4002      	ands	r2, r0
   80cec:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80cf0:	671a      	str	r2, [r3, #112]	; 0x70
   80cf2:	6659      	str	r1, [r3, #100]	; 0x64
   80cf4:	f44f 7280 	mov.w	r2, #256	; 0x100
   80cf8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80cfc:	611a      	str	r2, [r3, #16]
   80cfe:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80d02:	21ac      	movs	r1, #172	; 0xac
   80d04:	6019      	str	r1, [r3, #0]
   80d06:	f240 2123 	movw	r1, #547	; 0x223
   80d0a:	6219      	str	r1, [r3, #32]
   80d0c:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80d10:	6059      	str	r1, [r3, #4]
   80d12:	f240 2102 	movw	r1, #514	; 0x202
   80d16:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80d1a:	f04f 31ff 	mov.w	r1, #4294967295
   80d1e:	60d9      	str	r1, [r3, #12]
   80d20:	21e1      	movs	r1, #225	; 0xe1
   80d22:	6099      	str	r1, [r3, #8]
   80d24:	4904      	ldr	r1, [pc, #16]	; (80d38 <configure_uart+0x64>)
   80d26:	600a      	str	r2, [r1, #0]
   80d28:	2250      	movs	r2, #80	; 0x50
   80d2a:	601a      	str	r2, [r3, #0]
   80d2c:	4770      	bx	lr
   80d2e:	bf00      	nop
   80d30:	20000464 	.word	0x20000464
   80d34:	400e0e00 	.word	0x400e0e00
   80d38:	e000e100 	.word	0xe000e100

00080d3c <uart_putchar>:
   80d3c:	4b07      	ldr	r3, [pc, #28]	; (80d5c <uart_putchar+0x20>)
   80d3e:	695b      	ldr	r3, [r3, #20]
   80d40:	f013 0f02 	tst.w	r3, #2
   80d44:	d008      	beq.n	80d58 <uart_putchar+0x1c>
   80d46:	4b05      	ldr	r3, [pc, #20]	; (80d5c <uart_putchar+0x20>)
   80d48:	61d8      	str	r0, [r3, #28]
   80d4a:	4b04      	ldr	r3, [pc, #16]	; (80d5c <uart_putchar+0x20>)
   80d4c:	695b      	ldr	r3, [r3, #20]
   80d4e:	f413 7f00 	tst.w	r3, #512	; 0x200
   80d52:	d0fa      	beq.n	80d4a <uart_putchar+0xe>
   80d54:	2000      	movs	r0, #0
   80d56:	4770      	bx	lr
   80d58:	2001      	movs	r0, #1
   80d5a:	4770      	bx	lr
   80d5c:	400e0800 	.word	0x400e0800

00080d60 <UART_Handler>:
   80d60:	b508      	push	{r3, lr}
   80d62:	4b15      	ldr	r3, [pc, #84]	; (80db8 <UART_Handler+0x58>)
   80d64:	695b      	ldr	r3, [r3, #20]
   80d66:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80d6a:	d003      	beq.n	80d74 <UART_Handler+0x14>
   80d6c:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80d70:	4a11      	ldr	r2, [pc, #68]	; (80db8 <UART_Handler+0x58>)
   80d72:	6011      	str	r1, [r2, #0]
   80d74:	f013 0f01 	tst.w	r3, #1
   80d78:	d012      	beq.n	80da0 <UART_Handler+0x40>
   80d7a:	4810      	ldr	r0, [pc, #64]	; (80dbc <UART_Handler+0x5c>)
   80d7c:	7842      	ldrb	r2, [r0, #1]
   80d7e:	1c53      	adds	r3, r2, #1
   80d80:	4259      	negs	r1, r3
   80d82:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80d86:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80d8a:	bf58      	it	pl
   80d8c:	424b      	negpl	r3, r1
   80d8e:	7801      	ldrb	r1, [r0, #0]
   80d90:	428b      	cmp	r3, r1
   80d92:	d006      	beq.n	80da2 <UART_Handler+0x42>
   80d94:	4908      	ldr	r1, [pc, #32]	; (80db8 <UART_Handler+0x58>)
   80d96:	6988      	ldr	r0, [r1, #24]
   80d98:	4908      	ldr	r1, [pc, #32]	; (80dbc <UART_Handler+0x5c>)
   80d9a:	440a      	add	r2, r1
   80d9c:	7090      	strb	r0, [r2, #2]
   80d9e:	704b      	strb	r3, [r1, #1]
   80da0:	bd08      	pop	{r3, pc}
   80da2:	4807      	ldr	r0, [pc, #28]	; (80dc0 <UART_Handler+0x60>)
   80da4:	4b07      	ldr	r3, [pc, #28]	; (80dc4 <UART_Handler+0x64>)
   80da6:	4798      	blx	r3
   80da8:	4b04      	ldr	r3, [pc, #16]	; (80dbc <UART_Handler+0x5c>)
   80daa:	7859      	ldrb	r1, [r3, #1]
   80dac:	4a02      	ldr	r2, [pc, #8]	; (80db8 <UART_Handler+0x58>)
   80dae:	6992      	ldr	r2, [r2, #24]
   80db0:	440b      	add	r3, r1
   80db2:	709a      	strb	r2, [r3, #2]
   80db4:	bd08      	pop	{r3, pc}
   80db6:	bf00      	nop
   80db8:	400e0800 	.word	0x400e0800
   80dbc:	20000464 	.word	0x20000464
   80dc0:	00081774 	.word	0x00081774
   80dc4:	00080cb1 	.word	0x00080cb1

00080dc8 <__aeabi_drsub>:
   80dc8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80dcc:	e002      	b.n	80dd4 <__adddf3>
   80dce:	bf00      	nop

00080dd0 <__aeabi_dsub>:
   80dd0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080dd4 <__adddf3>:
   80dd4:	b530      	push	{r4, r5, lr}
   80dd6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80dda:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80dde:	ea94 0f05 	teq	r4, r5
   80de2:	bf08      	it	eq
   80de4:	ea90 0f02 	teqeq	r0, r2
   80de8:	bf1f      	itttt	ne
   80dea:	ea54 0c00 	orrsne.w	ip, r4, r0
   80dee:	ea55 0c02 	orrsne.w	ip, r5, r2
   80df2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80df6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80dfa:	f000 80e2 	beq.w	80fc2 <__adddf3+0x1ee>
   80dfe:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80e02:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80e06:	bfb8      	it	lt
   80e08:	426d      	neglt	r5, r5
   80e0a:	dd0c      	ble.n	80e26 <__adddf3+0x52>
   80e0c:	442c      	add	r4, r5
   80e0e:	ea80 0202 	eor.w	r2, r0, r2
   80e12:	ea81 0303 	eor.w	r3, r1, r3
   80e16:	ea82 0000 	eor.w	r0, r2, r0
   80e1a:	ea83 0101 	eor.w	r1, r3, r1
   80e1e:	ea80 0202 	eor.w	r2, r0, r2
   80e22:	ea81 0303 	eor.w	r3, r1, r3
   80e26:	2d36      	cmp	r5, #54	; 0x36
   80e28:	bf88      	it	hi
   80e2a:	bd30      	pophi	{r4, r5, pc}
   80e2c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80e30:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80e34:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80e38:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80e3c:	d002      	beq.n	80e44 <__adddf3+0x70>
   80e3e:	4240      	negs	r0, r0
   80e40:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80e44:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80e48:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80e4c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80e50:	d002      	beq.n	80e58 <__adddf3+0x84>
   80e52:	4252      	negs	r2, r2
   80e54:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80e58:	ea94 0f05 	teq	r4, r5
   80e5c:	f000 80a7 	beq.w	80fae <__adddf3+0x1da>
   80e60:	f1a4 0401 	sub.w	r4, r4, #1
   80e64:	f1d5 0e20 	rsbs	lr, r5, #32
   80e68:	db0d      	blt.n	80e86 <__adddf3+0xb2>
   80e6a:	fa02 fc0e 	lsl.w	ip, r2, lr
   80e6e:	fa22 f205 	lsr.w	r2, r2, r5
   80e72:	1880      	adds	r0, r0, r2
   80e74:	f141 0100 	adc.w	r1, r1, #0
   80e78:	fa03 f20e 	lsl.w	r2, r3, lr
   80e7c:	1880      	adds	r0, r0, r2
   80e7e:	fa43 f305 	asr.w	r3, r3, r5
   80e82:	4159      	adcs	r1, r3
   80e84:	e00e      	b.n	80ea4 <__adddf3+0xd0>
   80e86:	f1a5 0520 	sub.w	r5, r5, #32
   80e8a:	f10e 0e20 	add.w	lr, lr, #32
   80e8e:	2a01      	cmp	r2, #1
   80e90:	fa03 fc0e 	lsl.w	ip, r3, lr
   80e94:	bf28      	it	cs
   80e96:	f04c 0c02 	orrcs.w	ip, ip, #2
   80e9a:	fa43 f305 	asr.w	r3, r3, r5
   80e9e:	18c0      	adds	r0, r0, r3
   80ea0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80ea4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80ea8:	d507      	bpl.n	80eba <__adddf3+0xe6>
   80eaa:	f04f 0e00 	mov.w	lr, #0
   80eae:	f1dc 0c00 	rsbs	ip, ip, #0
   80eb2:	eb7e 0000 	sbcs.w	r0, lr, r0
   80eb6:	eb6e 0101 	sbc.w	r1, lr, r1
   80eba:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80ebe:	d31b      	bcc.n	80ef8 <__adddf3+0x124>
   80ec0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80ec4:	d30c      	bcc.n	80ee0 <__adddf3+0x10c>
   80ec6:	0849      	lsrs	r1, r1, #1
   80ec8:	ea5f 0030 	movs.w	r0, r0, rrx
   80ecc:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80ed0:	f104 0401 	add.w	r4, r4, #1
   80ed4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80ed8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80edc:	f080 809a 	bcs.w	81014 <__adddf3+0x240>
   80ee0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80ee4:	bf08      	it	eq
   80ee6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80eea:	f150 0000 	adcs.w	r0, r0, #0
   80eee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80ef2:	ea41 0105 	orr.w	r1, r1, r5
   80ef6:	bd30      	pop	{r4, r5, pc}
   80ef8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80efc:	4140      	adcs	r0, r0
   80efe:	eb41 0101 	adc.w	r1, r1, r1
   80f02:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80f06:	f1a4 0401 	sub.w	r4, r4, #1
   80f0a:	d1e9      	bne.n	80ee0 <__adddf3+0x10c>
   80f0c:	f091 0f00 	teq	r1, #0
   80f10:	bf04      	itt	eq
   80f12:	4601      	moveq	r1, r0
   80f14:	2000      	moveq	r0, #0
   80f16:	fab1 f381 	clz	r3, r1
   80f1a:	bf08      	it	eq
   80f1c:	3320      	addeq	r3, #32
   80f1e:	f1a3 030b 	sub.w	r3, r3, #11
   80f22:	f1b3 0220 	subs.w	r2, r3, #32
   80f26:	da0c      	bge.n	80f42 <__adddf3+0x16e>
   80f28:	320c      	adds	r2, #12
   80f2a:	dd08      	ble.n	80f3e <__adddf3+0x16a>
   80f2c:	f102 0c14 	add.w	ip, r2, #20
   80f30:	f1c2 020c 	rsb	r2, r2, #12
   80f34:	fa01 f00c 	lsl.w	r0, r1, ip
   80f38:	fa21 f102 	lsr.w	r1, r1, r2
   80f3c:	e00c      	b.n	80f58 <__adddf3+0x184>
   80f3e:	f102 0214 	add.w	r2, r2, #20
   80f42:	bfd8      	it	le
   80f44:	f1c2 0c20 	rsble	ip, r2, #32
   80f48:	fa01 f102 	lsl.w	r1, r1, r2
   80f4c:	fa20 fc0c 	lsr.w	ip, r0, ip
   80f50:	bfdc      	itt	le
   80f52:	ea41 010c 	orrle.w	r1, r1, ip
   80f56:	4090      	lslle	r0, r2
   80f58:	1ae4      	subs	r4, r4, r3
   80f5a:	bfa2      	ittt	ge
   80f5c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   80f60:	4329      	orrge	r1, r5
   80f62:	bd30      	popge	{r4, r5, pc}
   80f64:	ea6f 0404 	mvn.w	r4, r4
   80f68:	3c1f      	subs	r4, #31
   80f6a:	da1c      	bge.n	80fa6 <__adddf3+0x1d2>
   80f6c:	340c      	adds	r4, #12
   80f6e:	dc0e      	bgt.n	80f8e <__adddf3+0x1ba>
   80f70:	f104 0414 	add.w	r4, r4, #20
   80f74:	f1c4 0220 	rsb	r2, r4, #32
   80f78:	fa20 f004 	lsr.w	r0, r0, r4
   80f7c:	fa01 f302 	lsl.w	r3, r1, r2
   80f80:	ea40 0003 	orr.w	r0, r0, r3
   80f84:	fa21 f304 	lsr.w	r3, r1, r4
   80f88:	ea45 0103 	orr.w	r1, r5, r3
   80f8c:	bd30      	pop	{r4, r5, pc}
   80f8e:	f1c4 040c 	rsb	r4, r4, #12
   80f92:	f1c4 0220 	rsb	r2, r4, #32
   80f96:	fa20 f002 	lsr.w	r0, r0, r2
   80f9a:	fa01 f304 	lsl.w	r3, r1, r4
   80f9e:	ea40 0003 	orr.w	r0, r0, r3
   80fa2:	4629      	mov	r1, r5
   80fa4:	bd30      	pop	{r4, r5, pc}
   80fa6:	fa21 f004 	lsr.w	r0, r1, r4
   80faa:	4629      	mov	r1, r5
   80fac:	bd30      	pop	{r4, r5, pc}
   80fae:	f094 0f00 	teq	r4, #0
   80fb2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   80fb6:	bf06      	itte	eq
   80fb8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   80fbc:	3401      	addeq	r4, #1
   80fbe:	3d01      	subne	r5, #1
   80fc0:	e74e      	b.n	80e60 <__adddf3+0x8c>
   80fc2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80fc6:	bf18      	it	ne
   80fc8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80fcc:	d029      	beq.n	81022 <__adddf3+0x24e>
   80fce:	ea94 0f05 	teq	r4, r5
   80fd2:	bf08      	it	eq
   80fd4:	ea90 0f02 	teqeq	r0, r2
   80fd8:	d005      	beq.n	80fe6 <__adddf3+0x212>
   80fda:	ea54 0c00 	orrs.w	ip, r4, r0
   80fde:	bf04      	itt	eq
   80fe0:	4619      	moveq	r1, r3
   80fe2:	4610      	moveq	r0, r2
   80fe4:	bd30      	pop	{r4, r5, pc}
   80fe6:	ea91 0f03 	teq	r1, r3
   80fea:	bf1e      	ittt	ne
   80fec:	2100      	movne	r1, #0
   80fee:	2000      	movne	r0, #0
   80ff0:	bd30      	popne	{r4, r5, pc}
   80ff2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   80ff6:	d105      	bne.n	81004 <__adddf3+0x230>
   80ff8:	0040      	lsls	r0, r0, #1
   80ffa:	4149      	adcs	r1, r1
   80ffc:	bf28      	it	cs
   80ffe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   81002:	bd30      	pop	{r4, r5, pc}
   81004:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   81008:	bf3c      	itt	cc
   8100a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   8100e:	bd30      	popcc	{r4, r5, pc}
   81010:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81014:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   81018:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8101c:	f04f 0000 	mov.w	r0, #0
   81020:	bd30      	pop	{r4, r5, pc}
   81022:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   81026:	bf1a      	itte	ne
   81028:	4619      	movne	r1, r3
   8102a:	4610      	movne	r0, r2
   8102c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   81030:	bf1c      	itt	ne
   81032:	460b      	movne	r3, r1
   81034:	4602      	movne	r2, r0
   81036:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8103a:	bf06      	itte	eq
   8103c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   81040:	ea91 0f03 	teqeq	r1, r3
   81044:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   81048:	bd30      	pop	{r4, r5, pc}
   8104a:	bf00      	nop

0008104c <__aeabi_ui2d>:
   8104c:	f090 0f00 	teq	r0, #0
   81050:	bf04      	itt	eq
   81052:	2100      	moveq	r1, #0
   81054:	4770      	bxeq	lr
   81056:	b530      	push	{r4, r5, lr}
   81058:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8105c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81060:	f04f 0500 	mov.w	r5, #0
   81064:	f04f 0100 	mov.w	r1, #0
   81068:	e750      	b.n	80f0c <__adddf3+0x138>
   8106a:	bf00      	nop

0008106c <__aeabi_i2d>:
   8106c:	f090 0f00 	teq	r0, #0
   81070:	bf04      	itt	eq
   81072:	2100      	moveq	r1, #0
   81074:	4770      	bxeq	lr
   81076:	b530      	push	{r4, r5, lr}
   81078:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8107c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81080:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   81084:	bf48      	it	mi
   81086:	4240      	negmi	r0, r0
   81088:	f04f 0100 	mov.w	r1, #0
   8108c:	e73e      	b.n	80f0c <__adddf3+0x138>
   8108e:	bf00      	nop

00081090 <__aeabi_f2d>:
   81090:	0042      	lsls	r2, r0, #1
   81092:	ea4f 01e2 	mov.w	r1, r2, asr #3
   81096:	ea4f 0131 	mov.w	r1, r1, rrx
   8109a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8109e:	bf1f      	itttt	ne
   810a0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   810a4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   810a8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   810ac:	4770      	bxne	lr
   810ae:	f092 0f00 	teq	r2, #0
   810b2:	bf14      	ite	ne
   810b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   810b8:	4770      	bxeq	lr
   810ba:	b530      	push	{r4, r5, lr}
   810bc:	f44f 7460 	mov.w	r4, #896	; 0x380
   810c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   810c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   810c8:	e720      	b.n	80f0c <__adddf3+0x138>
   810ca:	bf00      	nop

000810cc <__aeabi_ul2d>:
   810cc:	ea50 0201 	orrs.w	r2, r0, r1
   810d0:	bf08      	it	eq
   810d2:	4770      	bxeq	lr
   810d4:	b530      	push	{r4, r5, lr}
   810d6:	f04f 0500 	mov.w	r5, #0
   810da:	e00a      	b.n	810f2 <__aeabi_l2d+0x16>

000810dc <__aeabi_l2d>:
   810dc:	ea50 0201 	orrs.w	r2, r0, r1
   810e0:	bf08      	it	eq
   810e2:	4770      	bxeq	lr
   810e4:	b530      	push	{r4, r5, lr}
   810e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   810ea:	d502      	bpl.n	810f2 <__aeabi_l2d+0x16>
   810ec:	4240      	negs	r0, r0
   810ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   810f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   810f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   810fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   810fe:	f43f aedc 	beq.w	80eba <__adddf3+0xe6>
   81102:	f04f 0203 	mov.w	r2, #3
   81106:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8110a:	bf18      	it	ne
   8110c:	3203      	addne	r2, #3
   8110e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   81112:	bf18      	it	ne
   81114:	3203      	addne	r2, #3
   81116:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8111a:	f1c2 0320 	rsb	r3, r2, #32
   8111e:	fa00 fc03 	lsl.w	ip, r0, r3
   81122:	fa20 f002 	lsr.w	r0, r0, r2
   81126:	fa01 fe03 	lsl.w	lr, r1, r3
   8112a:	ea40 000e 	orr.w	r0, r0, lr
   8112e:	fa21 f102 	lsr.w	r1, r1, r2
   81132:	4414      	add	r4, r2
   81134:	e6c1      	b.n	80eba <__adddf3+0xe6>
   81136:	bf00      	nop

00081138 <__aeabi_dmul>:
   81138:	b570      	push	{r4, r5, r6, lr}
   8113a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8113e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81142:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   81146:	bf1d      	ittte	ne
   81148:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   8114c:	ea94 0f0c 	teqne	r4, ip
   81150:	ea95 0f0c 	teqne	r5, ip
   81154:	f000 f8de 	bleq	81314 <__aeabi_dmul+0x1dc>
   81158:	442c      	add	r4, r5
   8115a:	ea81 0603 	eor.w	r6, r1, r3
   8115e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   81162:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   81166:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8116a:	bf18      	it	ne
   8116c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81170:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81174:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   81178:	d038      	beq.n	811ec <__aeabi_dmul+0xb4>
   8117a:	fba0 ce02 	umull	ip, lr, r0, r2
   8117e:	f04f 0500 	mov.w	r5, #0
   81182:	fbe1 e502 	umlal	lr, r5, r1, r2
   81186:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8118a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8118e:	f04f 0600 	mov.w	r6, #0
   81192:	fbe1 5603 	umlal	r5, r6, r1, r3
   81196:	f09c 0f00 	teq	ip, #0
   8119a:	bf18      	it	ne
   8119c:	f04e 0e01 	orrne.w	lr, lr, #1
   811a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   811a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   811a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   811ac:	d204      	bcs.n	811b8 <__aeabi_dmul+0x80>
   811ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   811b2:	416d      	adcs	r5, r5
   811b4:	eb46 0606 	adc.w	r6, r6, r6
   811b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   811bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   811c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   811c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   811c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   811cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   811d0:	bf88      	it	hi
   811d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   811d6:	d81e      	bhi.n	81216 <__aeabi_dmul+0xde>
   811d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   811dc:	bf08      	it	eq
   811de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   811e2:	f150 0000 	adcs.w	r0, r0, #0
   811e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   811ea:	bd70      	pop	{r4, r5, r6, pc}
   811ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   811f0:	ea46 0101 	orr.w	r1, r6, r1
   811f4:	ea40 0002 	orr.w	r0, r0, r2
   811f8:	ea81 0103 	eor.w	r1, r1, r3
   811fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   81200:	bfc2      	ittt	gt
   81202:	ebd4 050c 	rsbsgt	r5, r4, ip
   81206:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8120a:	bd70      	popgt	{r4, r5, r6, pc}
   8120c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81210:	f04f 0e00 	mov.w	lr, #0
   81214:	3c01      	subs	r4, #1
   81216:	f300 80ab 	bgt.w	81370 <__aeabi_dmul+0x238>
   8121a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   8121e:	bfde      	ittt	le
   81220:	2000      	movle	r0, #0
   81222:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   81226:	bd70      	pople	{r4, r5, r6, pc}
   81228:	f1c4 0400 	rsb	r4, r4, #0
   8122c:	3c20      	subs	r4, #32
   8122e:	da35      	bge.n	8129c <__aeabi_dmul+0x164>
   81230:	340c      	adds	r4, #12
   81232:	dc1b      	bgt.n	8126c <__aeabi_dmul+0x134>
   81234:	f104 0414 	add.w	r4, r4, #20
   81238:	f1c4 0520 	rsb	r5, r4, #32
   8123c:	fa00 f305 	lsl.w	r3, r0, r5
   81240:	fa20 f004 	lsr.w	r0, r0, r4
   81244:	fa01 f205 	lsl.w	r2, r1, r5
   81248:	ea40 0002 	orr.w	r0, r0, r2
   8124c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   81250:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81254:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   81258:	fa21 f604 	lsr.w	r6, r1, r4
   8125c:	eb42 0106 	adc.w	r1, r2, r6
   81260:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81264:	bf08      	it	eq
   81266:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8126a:	bd70      	pop	{r4, r5, r6, pc}
   8126c:	f1c4 040c 	rsb	r4, r4, #12
   81270:	f1c4 0520 	rsb	r5, r4, #32
   81274:	fa00 f304 	lsl.w	r3, r0, r4
   81278:	fa20 f005 	lsr.w	r0, r0, r5
   8127c:	fa01 f204 	lsl.w	r2, r1, r4
   81280:	ea40 0002 	orr.w	r0, r0, r2
   81284:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81288:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8128c:	f141 0100 	adc.w	r1, r1, #0
   81290:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81294:	bf08      	it	eq
   81296:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8129a:	bd70      	pop	{r4, r5, r6, pc}
   8129c:	f1c4 0520 	rsb	r5, r4, #32
   812a0:	fa00 f205 	lsl.w	r2, r0, r5
   812a4:	ea4e 0e02 	orr.w	lr, lr, r2
   812a8:	fa20 f304 	lsr.w	r3, r0, r4
   812ac:	fa01 f205 	lsl.w	r2, r1, r5
   812b0:	ea43 0302 	orr.w	r3, r3, r2
   812b4:	fa21 f004 	lsr.w	r0, r1, r4
   812b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   812bc:	fa21 f204 	lsr.w	r2, r1, r4
   812c0:	ea20 0002 	bic.w	r0, r0, r2
   812c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   812c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   812cc:	bf08      	it	eq
   812ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   812d2:	bd70      	pop	{r4, r5, r6, pc}
   812d4:	f094 0f00 	teq	r4, #0
   812d8:	d10f      	bne.n	812fa <__aeabi_dmul+0x1c2>
   812da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   812de:	0040      	lsls	r0, r0, #1
   812e0:	eb41 0101 	adc.w	r1, r1, r1
   812e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   812e8:	bf08      	it	eq
   812ea:	3c01      	subeq	r4, #1
   812ec:	d0f7      	beq.n	812de <__aeabi_dmul+0x1a6>
   812ee:	ea41 0106 	orr.w	r1, r1, r6
   812f2:	f095 0f00 	teq	r5, #0
   812f6:	bf18      	it	ne
   812f8:	4770      	bxne	lr
   812fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   812fe:	0052      	lsls	r2, r2, #1
   81300:	eb43 0303 	adc.w	r3, r3, r3
   81304:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   81308:	bf08      	it	eq
   8130a:	3d01      	subeq	r5, #1
   8130c:	d0f7      	beq.n	812fe <__aeabi_dmul+0x1c6>
   8130e:	ea43 0306 	orr.w	r3, r3, r6
   81312:	4770      	bx	lr
   81314:	ea94 0f0c 	teq	r4, ip
   81318:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8131c:	bf18      	it	ne
   8131e:	ea95 0f0c 	teqne	r5, ip
   81322:	d00c      	beq.n	8133e <__aeabi_dmul+0x206>
   81324:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81328:	bf18      	it	ne
   8132a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8132e:	d1d1      	bne.n	812d4 <__aeabi_dmul+0x19c>
   81330:	ea81 0103 	eor.w	r1, r1, r3
   81334:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81338:	f04f 0000 	mov.w	r0, #0
   8133c:	bd70      	pop	{r4, r5, r6, pc}
   8133e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81342:	bf06      	itte	eq
   81344:	4610      	moveq	r0, r2
   81346:	4619      	moveq	r1, r3
   81348:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8134c:	d019      	beq.n	81382 <__aeabi_dmul+0x24a>
   8134e:	ea94 0f0c 	teq	r4, ip
   81352:	d102      	bne.n	8135a <__aeabi_dmul+0x222>
   81354:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   81358:	d113      	bne.n	81382 <__aeabi_dmul+0x24a>
   8135a:	ea95 0f0c 	teq	r5, ip
   8135e:	d105      	bne.n	8136c <__aeabi_dmul+0x234>
   81360:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81364:	bf1c      	itt	ne
   81366:	4610      	movne	r0, r2
   81368:	4619      	movne	r1, r3
   8136a:	d10a      	bne.n	81382 <__aeabi_dmul+0x24a>
   8136c:	ea81 0103 	eor.w	r1, r1, r3
   81370:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81374:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81378:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8137c:	f04f 0000 	mov.w	r0, #0
   81380:	bd70      	pop	{r4, r5, r6, pc}
   81382:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81386:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8138a:	bd70      	pop	{r4, r5, r6, pc}

0008138c <__aeabi_ddiv>:
   8138c:	b570      	push	{r4, r5, r6, lr}
   8138e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81392:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81396:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8139a:	bf1d      	ittte	ne
   8139c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   813a0:	ea94 0f0c 	teqne	r4, ip
   813a4:	ea95 0f0c 	teqne	r5, ip
   813a8:	f000 f8a7 	bleq	814fa <__aeabi_ddiv+0x16e>
   813ac:	eba4 0405 	sub.w	r4, r4, r5
   813b0:	ea81 0e03 	eor.w	lr, r1, r3
   813b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   813b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   813bc:	f000 8088 	beq.w	814d0 <__aeabi_ddiv+0x144>
   813c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   813c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   813c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   813cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   813d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   813d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   813d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   813dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
   813e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   813e4:	429d      	cmp	r5, r3
   813e6:	bf08      	it	eq
   813e8:	4296      	cmpeq	r6, r2
   813ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   813ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
   813f2:	d202      	bcs.n	813fa <__aeabi_ddiv+0x6e>
   813f4:	085b      	lsrs	r3, r3, #1
   813f6:	ea4f 0232 	mov.w	r2, r2, rrx
   813fa:	1ab6      	subs	r6, r6, r2
   813fc:	eb65 0503 	sbc.w	r5, r5, r3
   81400:	085b      	lsrs	r3, r3, #1
   81402:	ea4f 0232 	mov.w	r2, r2, rrx
   81406:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8140a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   8140e:	ebb6 0e02 	subs.w	lr, r6, r2
   81412:	eb75 0e03 	sbcs.w	lr, r5, r3
   81416:	bf22      	ittt	cs
   81418:	1ab6      	subcs	r6, r6, r2
   8141a:	4675      	movcs	r5, lr
   8141c:	ea40 000c 	orrcs.w	r0, r0, ip
   81420:	085b      	lsrs	r3, r3, #1
   81422:	ea4f 0232 	mov.w	r2, r2, rrx
   81426:	ebb6 0e02 	subs.w	lr, r6, r2
   8142a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8142e:	bf22      	ittt	cs
   81430:	1ab6      	subcs	r6, r6, r2
   81432:	4675      	movcs	r5, lr
   81434:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   81438:	085b      	lsrs	r3, r3, #1
   8143a:	ea4f 0232 	mov.w	r2, r2, rrx
   8143e:	ebb6 0e02 	subs.w	lr, r6, r2
   81442:	eb75 0e03 	sbcs.w	lr, r5, r3
   81446:	bf22      	ittt	cs
   81448:	1ab6      	subcs	r6, r6, r2
   8144a:	4675      	movcs	r5, lr
   8144c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81450:	085b      	lsrs	r3, r3, #1
   81452:	ea4f 0232 	mov.w	r2, r2, rrx
   81456:	ebb6 0e02 	subs.w	lr, r6, r2
   8145a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8145e:	bf22      	ittt	cs
   81460:	1ab6      	subcs	r6, r6, r2
   81462:	4675      	movcs	r5, lr
   81464:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81468:	ea55 0e06 	orrs.w	lr, r5, r6
   8146c:	d018      	beq.n	814a0 <__aeabi_ddiv+0x114>
   8146e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81472:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   81476:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8147a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8147e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81482:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   81486:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8148a:	d1c0      	bne.n	8140e <__aeabi_ddiv+0x82>
   8148c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81490:	d10b      	bne.n	814aa <__aeabi_ddiv+0x11e>
   81492:	ea41 0100 	orr.w	r1, r1, r0
   81496:	f04f 0000 	mov.w	r0, #0
   8149a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8149e:	e7b6      	b.n	8140e <__aeabi_ddiv+0x82>
   814a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   814a4:	bf04      	itt	eq
   814a6:	4301      	orreq	r1, r0
   814a8:	2000      	moveq	r0, #0
   814aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   814ae:	bf88      	it	hi
   814b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   814b4:	f63f aeaf 	bhi.w	81216 <__aeabi_dmul+0xde>
   814b8:	ebb5 0c03 	subs.w	ip, r5, r3
   814bc:	bf04      	itt	eq
   814be:	ebb6 0c02 	subseq.w	ip, r6, r2
   814c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   814c6:	f150 0000 	adcs.w	r0, r0, #0
   814ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   814ce:	bd70      	pop	{r4, r5, r6, pc}
   814d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   814d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   814d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   814dc:	bfc2      	ittt	gt
   814de:	ebd4 050c 	rsbsgt	r5, r4, ip
   814e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   814e6:	bd70      	popgt	{r4, r5, r6, pc}
   814e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   814ec:	f04f 0e00 	mov.w	lr, #0
   814f0:	3c01      	subs	r4, #1
   814f2:	e690      	b.n	81216 <__aeabi_dmul+0xde>
   814f4:	ea45 0e06 	orr.w	lr, r5, r6
   814f8:	e68d      	b.n	81216 <__aeabi_dmul+0xde>
   814fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   814fe:	ea94 0f0c 	teq	r4, ip
   81502:	bf08      	it	eq
   81504:	ea95 0f0c 	teqeq	r5, ip
   81508:	f43f af3b 	beq.w	81382 <__aeabi_dmul+0x24a>
   8150c:	ea94 0f0c 	teq	r4, ip
   81510:	d10a      	bne.n	81528 <__aeabi_ddiv+0x19c>
   81512:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   81516:	f47f af34 	bne.w	81382 <__aeabi_dmul+0x24a>
   8151a:	ea95 0f0c 	teq	r5, ip
   8151e:	f47f af25 	bne.w	8136c <__aeabi_dmul+0x234>
   81522:	4610      	mov	r0, r2
   81524:	4619      	mov	r1, r3
   81526:	e72c      	b.n	81382 <__aeabi_dmul+0x24a>
   81528:	ea95 0f0c 	teq	r5, ip
   8152c:	d106      	bne.n	8153c <__aeabi_ddiv+0x1b0>
   8152e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81532:	f43f aefd 	beq.w	81330 <__aeabi_dmul+0x1f8>
   81536:	4610      	mov	r0, r2
   81538:	4619      	mov	r1, r3
   8153a:	e722      	b.n	81382 <__aeabi_dmul+0x24a>
   8153c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81540:	bf18      	it	ne
   81542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81546:	f47f aec5 	bne.w	812d4 <__aeabi_dmul+0x19c>
   8154a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8154e:	f47f af0d 	bne.w	8136c <__aeabi_dmul+0x234>
   81552:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   81556:	f47f aeeb 	bne.w	81330 <__aeabi_dmul+0x1f8>
   8155a:	e712      	b.n	81382 <__aeabi_dmul+0x24a>

0008155c <__aeabi_d2iz>:
   8155c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   81560:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81564:	d215      	bcs.n	81592 <__aeabi_d2iz+0x36>
   81566:	d511      	bpl.n	8158c <__aeabi_d2iz+0x30>
   81568:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8156c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81570:	d912      	bls.n	81598 <__aeabi_d2iz+0x3c>
   81572:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   81576:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8157a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8157e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81582:	fa23 f002 	lsr.w	r0, r3, r2
   81586:	bf18      	it	ne
   81588:	4240      	negne	r0, r0
   8158a:	4770      	bx	lr
   8158c:	f04f 0000 	mov.w	r0, #0
   81590:	4770      	bx	lr
   81592:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   81596:	d105      	bne.n	815a4 <__aeabi_d2iz+0x48>
   81598:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8159c:	bf08      	it	eq
   8159e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   815a2:	4770      	bx	lr
   815a4:	f04f 0000 	mov.w	r0, #0
   815a8:	4770      	bx	lr
   815aa:	bf00      	nop

000815ac <__libc_init_array>:
   815ac:	b570      	push	{r4, r5, r6, lr}
   815ae:	4e0f      	ldr	r6, [pc, #60]	; (815ec <__libc_init_array+0x40>)
   815b0:	4d0f      	ldr	r5, [pc, #60]	; (815f0 <__libc_init_array+0x44>)
   815b2:	1b76      	subs	r6, r6, r5
   815b4:	10b6      	asrs	r6, r6, #2
   815b6:	bf18      	it	ne
   815b8:	2400      	movne	r4, #0
   815ba:	d005      	beq.n	815c8 <__libc_init_array+0x1c>
   815bc:	3401      	adds	r4, #1
   815be:	f855 3b04 	ldr.w	r3, [r5], #4
   815c2:	4798      	blx	r3
   815c4:	42a6      	cmp	r6, r4
   815c6:	d1f9      	bne.n	815bc <__libc_init_array+0x10>
   815c8:	4e0a      	ldr	r6, [pc, #40]	; (815f4 <__libc_init_array+0x48>)
   815ca:	4d0b      	ldr	r5, [pc, #44]	; (815f8 <__libc_init_array+0x4c>)
   815cc:	f000 f8e4 	bl	81798 <_init>
   815d0:	1b76      	subs	r6, r6, r5
   815d2:	10b6      	asrs	r6, r6, #2
   815d4:	bf18      	it	ne
   815d6:	2400      	movne	r4, #0
   815d8:	d006      	beq.n	815e8 <__libc_init_array+0x3c>
   815da:	3401      	adds	r4, #1
   815dc:	f855 3b04 	ldr.w	r3, [r5], #4
   815e0:	4798      	blx	r3
   815e2:	42a6      	cmp	r6, r4
   815e4:	d1f9      	bne.n	815da <__libc_init_array+0x2e>
   815e6:	bd70      	pop	{r4, r5, r6, pc}
   815e8:	bd70      	pop	{r4, r5, r6, pc}
   815ea:	bf00      	nop
   815ec:	000817a4 	.word	0x000817a4
   815f0:	000817a4 	.word	0x000817a4
   815f4:	000817ac 	.word	0x000817ac
   815f8:	000817a4 	.word	0x000817a4

000815fc <register_fini>:
   815fc:	4b02      	ldr	r3, [pc, #8]	; (81608 <register_fini+0xc>)
   815fe:	b113      	cbz	r3, 81606 <register_fini+0xa>
   81600:	4802      	ldr	r0, [pc, #8]	; (8160c <register_fini+0x10>)
   81602:	f000 b805 	b.w	81610 <atexit>
   81606:	4770      	bx	lr
   81608:	00000000 	.word	0x00000000
   8160c:	0008161d 	.word	0x0008161d

00081610 <atexit>:
   81610:	2300      	movs	r3, #0
   81612:	4601      	mov	r1, r0
   81614:	461a      	mov	r2, r3
   81616:	4618      	mov	r0, r3
   81618:	f000 b81e 	b.w	81658 <__register_exitproc>

0008161c <__libc_fini_array>:
   8161c:	b538      	push	{r3, r4, r5, lr}
   8161e:	4c0a      	ldr	r4, [pc, #40]	; (81648 <__libc_fini_array+0x2c>)
   81620:	4d0a      	ldr	r5, [pc, #40]	; (8164c <__libc_fini_array+0x30>)
   81622:	1b64      	subs	r4, r4, r5
   81624:	10a4      	asrs	r4, r4, #2
   81626:	d00a      	beq.n	8163e <__libc_fini_array+0x22>
   81628:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   8162c:	3b01      	subs	r3, #1
   8162e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   81632:	3c01      	subs	r4, #1
   81634:	f855 3904 	ldr.w	r3, [r5], #-4
   81638:	4798      	blx	r3
   8163a:	2c00      	cmp	r4, #0
   8163c:	d1f9      	bne.n	81632 <__libc_fini_array+0x16>
   8163e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   81642:	f000 b8b3 	b.w	817ac <_fini>
   81646:	bf00      	nop
   81648:	000817bc 	.word	0x000817bc
   8164c:	000817b8 	.word	0x000817b8

00081650 <__retarget_lock_acquire_recursive>:
   81650:	4770      	bx	lr
   81652:	bf00      	nop

00081654 <__retarget_lock_release_recursive>:
   81654:	4770      	bx	lr
   81656:	bf00      	nop

00081658 <__register_exitproc>:
   81658:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8165c:	4d2c      	ldr	r5, [pc, #176]	; (81710 <__register_exitproc+0xb8>)
   8165e:	4606      	mov	r6, r0
   81660:	6828      	ldr	r0, [r5, #0]
   81662:	4698      	mov	r8, r3
   81664:	460f      	mov	r7, r1
   81666:	4691      	mov	r9, r2
   81668:	f7ff fff2 	bl	81650 <__retarget_lock_acquire_recursive>
   8166c:	4b29      	ldr	r3, [pc, #164]	; (81714 <__register_exitproc+0xbc>)
   8166e:	681c      	ldr	r4, [r3, #0]
   81670:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   81674:	2b00      	cmp	r3, #0
   81676:	d03e      	beq.n	816f6 <__register_exitproc+0x9e>
   81678:	685a      	ldr	r2, [r3, #4]
   8167a:	2a1f      	cmp	r2, #31
   8167c:	dc1c      	bgt.n	816b8 <__register_exitproc+0x60>
   8167e:	f102 0e01 	add.w	lr, r2, #1
   81682:	b176      	cbz	r6, 816a2 <__register_exitproc+0x4a>
   81684:	2101      	movs	r1, #1
   81686:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   8168a:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8168e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   81692:	4091      	lsls	r1, r2
   81694:	4308      	orrs	r0, r1
   81696:	2e02      	cmp	r6, #2
   81698:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   8169c:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   816a0:	d023      	beq.n	816ea <__register_exitproc+0x92>
   816a2:	3202      	adds	r2, #2
   816a4:	f8c3 e004 	str.w	lr, [r3, #4]
   816a8:	6828      	ldr	r0, [r5, #0]
   816aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   816ae:	f7ff ffd1 	bl	81654 <__retarget_lock_release_recursive>
   816b2:	2000      	movs	r0, #0
   816b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   816b8:	4b17      	ldr	r3, [pc, #92]	; (81718 <__register_exitproc+0xc0>)
   816ba:	b30b      	cbz	r3, 81700 <__register_exitproc+0xa8>
   816bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
   816c0:	f3af 8000 	nop.w
   816c4:	4603      	mov	r3, r0
   816c6:	b1d8      	cbz	r0, 81700 <__register_exitproc+0xa8>
   816c8:	2000      	movs	r0, #0
   816ca:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   816ce:	f04f 0e01 	mov.w	lr, #1
   816d2:	6058      	str	r0, [r3, #4]
   816d4:	6019      	str	r1, [r3, #0]
   816d6:	4602      	mov	r2, r0
   816d8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   816dc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   816e0:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   816e4:	2e00      	cmp	r6, #0
   816e6:	d0dc      	beq.n	816a2 <__register_exitproc+0x4a>
   816e8:	e7cc      	b.n	81684 <__register_exitproc+0x2c>
   816ea:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   816ee:	4301      	orrs	r1, r0
   816f0:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   816f4:	e7d5      	b.n	816a2 <__register_exitproc+0x4a>
   816f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   816fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   816fe:	e7bb      	b.n	81678 <__register_exitproc+0x20>
   81700:	6828      	ldr	r0, [r5, #0]
   81702:	f7ff ffa7 	bl	81654 <__retarget_lock_release_recursive>
   81706:	f04f 30ff 	mov.w	r0, #4294967295
   8170a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8170e:	bf00      	nop
   81710:	20000430 	.word	0x20000430
   81714:	00081794 	.word	0x00081794
   81718:	00000000 	.word	0x00000000
   8171c:	304e4143 	.word	0x304e4143
   81720:	73656d20 	.word	0x73656d20
   81724:	65676173 	.word	0x65676173
   81728:	72726120 	.word	0x72726120
   8172c:	64657669 	.word	0x64657669
   81730:	206e6920 	.word	0x206e6920
   81734:	2d6e6f6e 	.word	0x2d6e6f6e
   81738:	64657375 	.word	0x64657375
   8173c:	69616d20 	.word	0x69616d20
   81740:	786f626c 	.word	0x786f626c
   81744:	00000d0a 	.word	0x00000d0a
   81748:	2c796548 	.word	0x2c796548
   8174c:	756f7920 	.word	0x756f7920
   81750:	736f6c20 	.word	0x736f6c20
   81754:	0d0a2174 	.word	0x0d0a2174
   81758:	00000000 	.word	0x00000000
   8175c:	6c697453 	.word	0x6c697453
   81760:	6c70206c 	.word	0x6c70206c
   81764:	6e697961 	.word	0x6e697961
   81768:	000d0a67 	.word	0x000d0a67
   8176c:	6c756e28 	.word	0x6c756e28
   81770:	0000296c 	.word	0x0000296c
   81774:	3a525245 	.word	0x3a525245
   81778:	52415520 	.word	0x52415520
   8177c:	58522054 	.word	0x58522054
   81780:	66756220 	.word	0x66756220
   81784:	20726566 	.word	0x20726566
   81788:	66207369 	.word	0x66207369
   8178c:	0a6c6c75 	.word	0x0a6c6c75
   81790:	0000000d 	.word	0x0000000d

00081794 <_global_impure_ptr>:
   81794:	20000008                                ... 

00081798 <_init>:
   81798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8179a:	bf00      	nop
   8179c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8179e:	bc08      	pop	{r3}
   817a0:	469e      	mov	lr, r3
   817a2:	4770      	bx	lr

000817a4 <__init_array_start>:
   817a4:	000815fd 	.word	0x000815fd

000817a8 <__frame_dummy_init_array_entry>:
   817a8:	00080119                                ....

000817ac <_fini>:
   817ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   817ae:	bf00      	nop
   817b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   817b2:	bc08      	pop	{r3}
   817b4:	469e      	mov	lr, r3
   817b6:	4770      	bx	lr

000817b8 <__fini_array_start>:
   817b8:	000800f5 	.word	0x000800f5
