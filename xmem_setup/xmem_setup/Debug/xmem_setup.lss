
xmem_setup.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00001106  0000119a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001106  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800120  00800120  000011ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001218  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001254  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016ea  00000000  00000000  000013ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bd1  00000000  00000000  00002a96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b5b  00000000  00000000  00003667  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  000041c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000071b  00000000  00000000  00004488  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006f5  00000000  00000000  00004ba3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005298  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x258>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e6 e0       	ldi	r30, 0x06	; 6
     37c:	f1 e1       	ldi	r31, 0x11	; 17
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a0 32       	cpi	r26, 0x20	; 32
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a0 e2       	ldi	r26, 0x20	; 32
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a0 33       	cpi	r26, 0x30	; 48
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 b7 02 	call	0x56e	; 0x56e <main>
     39e:	0c 94 81 08 	jmp	0x1102	; 0x1102 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_sample>:
pos_p posistion_percentage;

void adc_sample( void ){
	
	volatile char * ext_mem = ( char *) 0x1400;
	ext_mem [ 0 ] = 0x01;
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x12d0>
     3ac:	08 95       	ret

000003ae <adc_read>:
}

uint8_t adc_read ( uint8_t channel ){
     3ae:	cf 93       	push	r28
     3b0:	c8 2f       	mov	r28, r24
	
	adc_sample();
     3b2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_sample>
	
	while((PIND & 1<<PIND4) == 0 ){}// While BUSY is low, spin here
     3b6:	84 9b       	sbis	0x10, 4	; 16
     3b8:	fe cf       	rjmp	.-4      	; 0x3b6 <adc_read+0x8>

	//_delay_ms(100);
	volatile char * ext_mem = ( char *) 0x1400 ;
	uint8_t ch_0 = ext_mem [ 0 ];
     3ba:	e0 e0       	ldi	r30, 0x00	; 0
     3bc:	f4 e1       	ldi	r31, 0x14	; 20
     3be:	90 81       	ld	r25, Z
	uint8_t ch_1 = ext_mem [ 0 ];
     3c0:	30 81       	ld	r19, Z
	uint8_t ch_2 = ext_mem [ 0 ];
     3c2:	80 81       	ld	r24, Z
	uint8_t ch_3 = ext_mem [ 0 ];
     3c4:	20 81       	ld	r18, Z
	
	switch (channel)
     3c6:	c1 30       	cpi	r28, 0x01	; 1
     3c8:	39 f0       	breq	.+14     	; 0x3d8 <adc_read+0x2a>
     3ca:	50 f0       	brcs	.+20     	; 0x3e0 <adc_read+0x32>
     3cc:	c2 30       	cpi	r28, 0x02	; 2
     3ce:	49 f0       	breq	.+18     	; 0x3e2 <adc_read+0x34>
     3d0:	c3 30       	cpi	r28, 0x03	; 3
     3d2:	21 f0       	breq	.+8      	; 0x3dc <adc_read+0x2e>

		case 3:
		return ch_3;

		default:
		return 0;
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <adc_read+0x34>
	{
		case 0:
		return ch_0;
		
		case 1:
		return ch_1;
     3d8:	83 2f       	mov	r24, r19
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <adc_read+0x34>

		case 2:
		return ch_2;

		case 3:
		return ch_3;
     3dc:	82 2f       	mov	r24, r18
     3de:	01 c0       	rjmp	.+2      	; 0x3e2 <adc_read+0x34>
	uint8_t ch_3 = ext_mem [ 0 ];
	
	switch (channel)
	{
		case 0:
		return ch_0;
     3e0:	89 2f       	mov	r24, r25
		return ch_3;

		default:
		return 0;
	}
}
     3e2:	cf 91       	pop	r28
     3e4:	08 95       	ret

000003e6 <adc_calibrate>:

void adc_calibrate( void ){
     3e6:	cf 93       	push	r28
	uint8_t adc_x = adc_read(0);
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     3ee:	c8 2f       	mov	r28, r24
	uint8_t adc_y = adc_read(1);
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
	
	if(m_middle_x_value == 0)
     3f6:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <m_middle_x_value>
     3fa:	91 11       	cpse	r25, r1
     3fc:	02 c0       	rjmp	.+4      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
	m_middle_x_value = adc_x;
     3fe:	c0 93 22 01 	sts	0x0122, r28	; 0x800122 <m_middle_x_value>
	
	if(m_middle_y_value == 0)
     402:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <__data_end>
     406:	91 11       	cpse	r25, r1
     408:	02 c0       	rjmp	.+4      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
	m_middle_y_value = adc_y;
     40a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
	
	//setting max and min values for x-values of joystick
	if (adc_x > m_max_x_value)
     40e:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <m_max_x_value>
     412:	9c 17       	cp	r25, r28
     414:	10 f4       	brcc	.+4      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
	m_max_x_value = adc_x;
     416:	c0 93 23 01 	sts	0x0123, r28	; 0x800123 <m_max_x_value>

	if (adc_x < m_min_x_value)
     41a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <m_min_x_value>
     41e:	c9 17       	cp	r28, r25
     420:	10 f4       	brcc	.+4      	; 0x426 <__DATA_REGION_LENGTH__+0x26>
	m_min_x_value = adc_x;
     422:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <m_min_x_value>

	//setting max and min values for y-values of joystick
	if (adc_y > m_max_y_value)
     426:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <m_max_y_value>
     42a:	98 17       	cp	r25, r24
     42c:	10 f4       	brcc	.+4      	; 0x432 <__DATA_REGION_LENGTH__+0x32>
	m_max_y_value = adc_y;
     42e:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <m_max_y_value>
	
	if (adc_y < m_min_y_value)
     432:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <m_min_y_value>
     436:	89 17       	cp	r24, r25
     438:	10 f4       	brcc	.+4      	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
	m_min_y_value = adc_y;
     43a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <m_min_y_value>
}
     43e:	cf 91       	pop	r28
     440:	08 95       	ret

00000442 <pos_read>:

pos_p pos_read(void){
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
	
	int16_t adc_x = adc_read(0);
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     44c:	c8 2f       	mov	r28, r24
     44e:	d0 e0       	ldi	r29, 0x00	; 0
	int16_t adc_y = adc_read(1);
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     456:	28 2f       	mov	r18, r24
     458:	30 e0       	ldi	r19, 0x00	; 0

	if(adc_x <= m_middle_x_value)
     45a:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <m_middle_x_value>
     45e:	50 e0       	ldi	r21, 0x00	; 0
     460:	4c 17       	cp	r20, r28
     462:	5d 07       	cpc	r21, r29
     464:	9c f0       	brlt	.+38     	; 0x48c <pos_read+0x4a>
	posistion_percentage.x_axis	= 100*(adc_x - m_middle_x_value)/(m_middle_x_value-m_min_x_value);
     466:	c4 1b       	sub	r28, r20
     468:	d5 0b       	sbc	r29, r21
     46a:	64 e6       	ldi	r22, 0x64	; 100
     46c:	6c 9f       	mul	r22, r28
     46e:	c0 01       	movw	r24, r0
     470:	6d 9f       	mul	r22, r29
     472:	90 0d       	add	r25, r0
     474:	11 24       	eor	r1, r1
     476:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <m_min_x_value>
     47a:	fa 01       	movw	r30, r20
     47c:	e6 1b       	sub	r30, r22
     47e:	f1 09       	sbc	r31, r1
     480:	bf 01       	movw	r22, r30
     482:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divmodhi4>
     486:	60 93 24 01 	sts	0x0124, r22	; 0x800124 <posistion_percentage>
     48a:	11 c0       	rjmp	.+34     	; 0x4ae <pos_read+0x6c>
	else
	posistion_percentage.x_axis	= 100*(adc_x - m_middle_x_value)/(m_max_x_value-m_middle_x_value);
     48c:	c4 1b       	sub	r28, r20
     48e:	d5 0b       	sbc	r29, r21
     490:	64 e6       	ldi	r22, 0x64	; 100
     492:	6c 9f       	mul	r22, r28
     494:	c0 01       	movw	r24, r0
     496:	6d 9f       	mul	r22, r29
     498:	90 0d       	add	r25, r0
     49a:	11 24       	eor	r1, r1
     49c:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <m_max_x_value>
     4a0:	70 e0       	ldi	r23, 0x00	; 0
     4a2:	64 1b       	sub	r22, r20
     4a4:	75 0b       	sbc	r23, r21
     4a6:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divmodhi4>
     4aa:	60 93 24 01 	sts	0x0124, r22	; 0x800124 <posistion_percentage>

	if(adc_y <= m_middle_y_value)
     4ae:	40 91 20 01 	lds	r20, 0x0120	; 0x800120 <__data_end>
     4b2:	50 e0       	ldi	r21, 0x00	; 0
     4b4:	42 17       	cp	r20, r18
     4b6:	53 07       	cpc	r21, r19
     4b8:	94 f0       	brlt	.+36     	; 0x4de <pos_read+0x9c>
	posistion_percentage.y_axis	= 100*(adc_y - m_middle_y_value)/(m_middle_y_value-m_min_y_value);
     4ba:	24 1b       	sub	r18, r20
     4bc:	35 0b       	sbc	r19, r21
     4be:	64 e6       	ldi	r22, 0x64	; 100
     4c0:	62 9f       	mul	r22, r18
     4c2:	c0 01       	movw	r24, r0
     4c4:	63 9f       	mul	r22, r19
     4c6:	90 0d       	add	r25, r0
     4c8:	11 24       	eor	r1, r1
     4ca:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <m_min_y_value>
     4ce:	ba 01       	movw	r22, r20
     4d0:	62 1b       	sub	r22, r18
     4d2:	71 09       	sbc	r23, r1
     4d4:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divmodhi4>
     4d8:	60 93 25 01 	sts	0x0125, r22	; 0x800125 <posistion_percentage+0x1>
     4dc:	11 c0       	rjmp	.+34     	; 0x500 <__stack+0x1>
	else
	posistion_percentage.y_axis	= 100*(adc_y - m_middle_y_value)/(m_max_y_value-m_middle_y_value);
     4de:	24 1b       	sub	r18, r20
     4e0:	35 0b       	sbc	r19, r21
     4e2:	64 e6       	ldi	r22, 0x64	; 100
     4e4:	62 9f       	mul	r22, r18
     4e6:	c0 01       	movw	r24, r0
     4e8:	63 9f       	mul	r22, r19
     4ea:	90 0d       	add	r25, r0
     4ec:	11 24       	eor	r1, r1
     4ee:	60 91 21 01 	lds	r22, 0x0121	; 0x800121 <m_max_y_value>
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	64 1b       	sub	r22, r20
     4f6:	75 0b       	sbc	r23, r21
     4f8:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divmodhi4>
     4fc:	60 93 25 01 	sts	0x0125, r22	; 0x800125 <posistion_percentage+0x1>
	
	return posistion_percentage;
}
     500:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <posistion_percentage>
     504:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <posistion_percentage+0x1>
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	08 95       	ret

0000050e <direction_read>:

direction direction_read (void){
	if(abs(posistion_percentage.x_axis) < 5 && abs(posistion_percentage.y_axis) < 5)
     50e:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <posistion_percentage>
     512:	84 e0       	ldi	r24, 0x04	; 4
     514:	82 0f       	add	r24, r18
     516:	89 30       	cpi	r24, 0x09	; 9
     518:	28 f4       	brcc	.+10     	; 0x524 <direction_read+0x16>
     51a:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <posistion_percentage+0x1>
     51e:	8c 5f       	subi	r24, 0xFC	; 252
     520:	89 30       	cpi	r24, 0x09	; 9
     522:	f8 f0       	brcs	.+62     	; 0x562 <direction_read+0x54>
		return neutral;

	if(abs(posistion_percentage.x_axis) < abs(posistion_percentage.y_axis)){
     524:	82 2f       	mov	r24, r18
     526:	02 2e       	mov	r0, r18
     528:	00 0c       	add	r0, r0
     52a:	99 0b       	sbc	r25, r25
     52c:	99 23       	and	r25, r25
     52e:	1c f4       	brge	.+6      	; 0x536 <direction_read+0x28>
     530:	91 95       	neg	r25
     532:	81 95       	neg	r24
     534:	91 09       	sbc	r25, r1
     536:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <posistion_percentage+0x1>
     53a:	43 2f       	mov	r20, r19
     53c:	03 2e       	mov	r0, r19
     53e:	00 0c       	add	r0, r0
     540:	55 0b       	sbc	r21, r21
     542:	55 23       	and	r21, r21
     544:	1c f4       	brge	.+6      	; 0x54c <direction_read+0x3e>
     546:	51 95       	neg	r21
     548:	41 95       	neg	r20
     54a:	51 09       	sbc	r21, r1
     54c:	84 17       	cp	r24, r20
     54e:	95 07       	cpc	r25, r21
     550:	24 f4       	brge	.+8      	; 0x55a <direction_read+0x4c>
		if(posistion_percentage.y_axis < 0)
     552:	33 23       	and	r19, r19
     554:	44 f4       	brge	.+16     	; 0x566 <direction_read+0x58>
			return down;
     556:	83 e0       	ldi	r24, 0x03	; 3
     558:	08 95       	ret
	return up;}
	
	else{
		if(posistion_percentage.x_axis < 0)
     55a:	22 23       	and	r18, r18
     55c:	34 f4       	brge	.+12     	; 0x56a <direction_read+0x5c>
			return left;
     55e:	81 e0       	ldi	r24, 0x01	; 1
     560:	08 95       	ret
	return posistion_percentage;
}

direction direction_read (void){
	if(abs(posistion_percentage.x_axis) < 5 && abs(posistion_percentage.y_axis) < 5)
		return neutral;
     562:	84 e0       	ldi	r24, 0x04	; 4
     564:	08 95       	ret

	if(abs(posistion_percentage.x_axis) < abs(posistion_percentage.y_axis)){
		if(posistion_percentage.y_axis < 0)
			return down;
	return up;}
     566:	82 e0       	ldi	r24, 0x02	; 2
     568:	08 95       	ret
	
	else{
		if(posistion_percentage.x_axis < 0)
			return left;
	return right;}
     56a:	80 e0       	ldi	r24, 0x00	; 0
}
     56c:	08 95       	ret

0000056e <main>:

// USART_Init( MYUBRR );

int main(void)
{
	xmem_init();
     56e:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <xmem_init>
	adc_init();
     572:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <adc_init>
	//USART_Init(MYUBRR);
	
	OLED_init();
     576:	0e 94 39 03 	call	0x672	; 0x672 <OLED_init>
	OLED_clear_screen();
     57a:	0e 94 b1 03 	call	0x762	; 0x762 <OLED_clear_screen>
	mainmenu();
     57e:	0e 94 c4 02 	call	0x588	; 0x588 <mainmenu>

	
		
	

}
     582:	80 e0       	ldi	r24, 0x00	; 0
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	08 95       	ret

00000588 <mainmenu>:
#include "mainmenu.h"
#include "OLEDdriver.h"
#include "ADCdriver.h"
#include <stdio.h>

void mainmenu( void ){
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	cd b7       	in	r28, 0x3d	; 61
     58e:	de b7       	in	r29, 0x3e	; 62
     590:	a8 97       	sbiw	r28, 0x28	; 40
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	f8 94       	cli
     596:	de bf       	out	0x3e, r29	; 62
     598:	0f be       	out	0x3f, r0	; 63
     59a:	cd bf       	out	0x3d, r28	; 61

	Node FirstChild;
	Node SecondChild;
	Node ThirdChild;

	FirstChild.name = "First";
     59c:	88 e0       	ldi	r24, 0x08	; 8
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	9c 8b       	std	Y+20, r25	; 0x14
     5a2:	8b 8b       	std	Y+19, r24	; 0x13
	FirstChild.next = &SecondChild;
     5a4:	ae 01       	movw	r20, r28
     5a6:	4b 5e       	subi	r20, 0xEB	; 235
     5a8:	5f 4f       	sbci	r21, 0xFF	; 255
     5aa:	58 8b       	std	Y+16, r21	; 0x10
     5ac:	4f 87       	std	Y+15, r20	; 0x0f
	FirstChild.prev = &ThirdChild;
     5ae:	ce 01       	movw	r24, r28
     5b0:	4f 96       	adiw	r24, 0x1f	; 31
     5b2:	9a 8b       	std	Y+18, r25	; 0x12
     5b4:	89 8b       	std	Y+17, r24	; 0x11
	FirstChild.currentChild = NULL;
     5b6:	1e 86       	std	Y+14, r1	; 0x0e
     5b8:	1d 86       	std	Y+13, r1	; 0x0d
	FirstChild.parent = &MainNode;
     5ba:	9e 01       	movw	r18, r28
     5bc:	2f 5f       	subi	r18, 0xFF	; 255
     5be:	3f 4f       	sbci	r19, 0xFF	; 255
     5c0:	3c 87       	std	Y+12, r19	; 0x0c
     5c2:	2b 87       	std	Y+11, r18	; 0x0b

	SecondChild.name = "Second";
     5c4:	6e e0       	ldi	r22, 0x0E	; 14
     5c6:	71 e0       	ldi	r23, 0x01	; 1
     5c8:	7e 8f       	std	Y+30, r23	; 0x1e
     5ca:	6d 8f       	std	Y+29, r22	; 0x1d
	SecondChild.next = &ThirdChild;
     5cc:	9a 8f       	std	Y+26, r25	; 0x1a
     5ce:	89 8f       	std	Y+25, r24	; 0x19
	SecondChild.prev = &FirstChild;
     5d0:	44 97       	sbiw	r24, 0x14	; 20
     5d2:	9c 8f       	std	Y+28, r25	; 0x1c
     5d4:	8b 8f       	std	Y+27, r24	; 0x1b
	SecondChild.currentChild = NULL;
     5d6:	18 8e       	std	Y+24, r1	; 0x18
     5d8:	1f 8a       	std	Y+23, r1	; 0x17
	SecondChild.parent = &MainNode;
     5da:	3e 8b       	std	Y+22, r19	; 0x16
     5dc:	2d 8b       	std	Y+21, r18	; 0x15

	ThirdChild.name = "Third";
     5de:	65 e1       	ldi	r22, 0x15	; 21
     5e0:	71 e0       	ldi	r23, 0x01	; 1
     5e2:	78 a7       	std	Y+40, r23	; 0x28
     5e4:	6f a3       	std	Y+39, r22	; 0x27
	ThirdChild.next = &FirstChild;
     5e6:	9c a3       	std	Y+36, r25	; 0x24
     5e8:	8b a3       	std	Y+35, r24	; 0x23
	ThirdChild.prev = &SecondChild;
     5ea:	5e a3       	std	Y+38, r21	; 0x26
     5ec:	4d a3       	std	Y+37, r20	; 0x25
	ThirdChild.currentChild = NULL;
     5ee:	1a a2       	std	Y+34, r1	; 0x22
     5f0:	19 a2       	std	Y+33, r1	; 0x21
	ThirdChild.parent = &MainNode;
     5f2:	38 a3       	std	Y+32, r19	; 0x20
     5f4:	2f 8f       	std	Y+31, r18	; 0x1f


	//Initialize MainMenu-node
	
	MainNode.name = "Main";
     5f6:	2b e1       	ldi	r18, 0x1B	; 27
     5f8:	31 e0       	ldi	r19, 0x01	; 1
     5fa:	3a 87       	std	Y+10, r19	; 0x0a
     5fc:	29 87       	std	Y+9, r18	; 0x09
	MainNode.next = NULL;
     5fe:	1e 82       	std	Y+6, r1	; 0x06
     600:	1d 82       	std	Y+5, r1	; 0x05
	MainNode.prev = NULL;
     602:	18 86       	std	Y+8, r1	; 0x08
     604:	1f 82       	std	Y+7, r1	; 0x07
	MainNode.currentChild = &FirstChild;
     606:	9c 83       	std	Y+4, r25	; 0x04
     608:	8b 83       	std	Y+3, r24	; 0x03


	//char * name = "Hadeland";
	while (1)
	{	
		pos_p p = pos_read();
     60a:	0e 94 21 02 	call	0x442	; 0x442 <pos_read>
		adc_calibrate();
     60e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <adc_calibrate>
		direction dir = direction_read();
     612:	0e 94 87 02 	call	0x50e	; 0x50e <direction_read>
     616:	18 2f       	mov	r17, r24
		OLED_clear_screen();
     618:	0e 94 b1 03 	call	0x762	; 0x762 <OLED_clear_screen>
		OLED_goto_pos(4, 20);
     61c:	64 e1       	ldi	r22, 0x14	; 20
     61e:	84 e0       	ldi	r24, 0x04	; 4
     620:	0e 94 c9 03 	call	0x792	; 0x792 <OLED_goto_pos>
		
		if(dir == up){
     624:	12 30       	cpi	r17, 0x02	; 2
     626:	31 f4       	brne	.+12     	; 0x634 <mainmenu+0xac>
			
			MainNode.currentChild = MainNode.currentChild->next;
     628:	eb 81       	ldd	r30, Y+3	; 0x03
     62a:	fc 81       	ldd	r31, Y+4	; 0x04
     62c:	84 81       	ldd	r24, Z+4	; 0x04
     62e:	95 81       	ldd	r25, Z+5	; 0x05
     630:	9c 83       	std	Y+4, r25	; 0x04
     632:	8b 83       	std	Y+3, r24	; 0x03
			//mainNode.currentChild = buffernode;
			//printf("up");
			
		}

		if ( dir == down ){
     634:	13 30       	cpi	r17, 0x03	; 3
     636:	31 f4       	brne	.+12     	; 0x644 <mainmenu+0xbc>

			MainNode.currentChild = MainNode.currentChild->prev;
     638:	eb 81       	ldd	r30, Y+3	; 0x03
     63a:	fc 81       	ldd	r31, Y+4	; 0x04
     63c:	86 81       	ldd	r24, Z+6	; 0x06
     63e:	97 81       	ldd	r25, Z+7	; 0x07
     640:	9c 83       	std	Y+4, r25	; 0x04
     642:	8b 83       	std	Y+3, r24	; 0x03
			//mainNode.currentChild = buffernode;
			//printf("down");
		}
		
		
		printf(MainNode.currentChild->name);
     644:	eb 81       	ldd	r30, Y+3	; 0x03
     646:	fc 81       	ldd	r31, Y+4	; 0x04
     648:	80 85       	ldd	r24, Z+8	; 0x08
     64a:	91 85       	ldd	r25, Z+9	; 0x09
     64c:	9f 93       	push	r25
     64e:	8f 93       	push	r24
     650:	0e 94 5f 04 	call	0x8be	; 0x8be <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     654:	2f ef       	ldi	r18, 0xFF	; 255
     656:	8f ef       	ldi	r24, 0xFF	; 255
     658:	92 e0       	ldi	r25, 0x02	; 2
     65a:	21 50       	subi	r18, 0x01	; 1
     65c:	80 40       	sbci	r24, 0x00	; 0
     65e:	90 40       	sbci	r25, 0x00	; 0
     660:	e1 f7       	brne	.-8      	; 0x65a <mainmenu+0xd2>
     662:	00 c0       	rjmp	.+0      	; 0x664 <mainmenu+0xdc>
     664:	00 c0       	rjmp	.+0      	; 0x666 <mainmenu+0xde>
		//printf("   %d \n\r", dir);
		
		_delay_ms(200);
	}
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	cf cf       	rjmp	.-98     	; 0x60a <mainmenu+0x82>

0000066c <OLED_write_command>:

void OLED_reset( void ){
	
}

void OLED_home( void ){
     66c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xed0>
     670:	08 95       	ret

00000672 <OLED_init>:
     672:	8e ea       	ldi	r24, 0xAE	; 174
     674:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     678:	81 ea       	ldi	r24, 0xA1	; 161
     67a:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     67e:	8a ed       	ldi	r24, 0xDA	; 218
     680:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     684:	82 e1       	ldi	r24, 0x12	; 18
     686:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     68a:	88 ec       	ldi	r24, 0xC8	; 200
     68c:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     690:	88 ea       	ldi	r24, 0xA8	; 168
     692:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     696:	8f e3       	ldi	r24, 0x3F	; 63
     698:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     69c:	85 ed       	ldi	r24, 0xD5	; 213
     69e:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6a2:	80 e8       	ldi	r24, 0x80	; 128
     6a4:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6a8:	81 e8       	ldi	r24, 0x81	; 129
     6aa:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6ae:	80 e5       	ldi	r24, 0x50	; 80
     6b0:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6b4:	89 ed       	ldi	r24, 0xD9	; 217
     6b6:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6ba:	81 e2       	ldi	r24, 0x21	; 33
     6bc:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6c0:	80 e2       	ldi	r24, 0x20	; 32
     6c2:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6c6:	82 e0       	ldi	r24, 0x02	; 2
     6c8:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6cc:	8b ed       	ldi	r24, 0xDB	; 219
     6ce:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6d2:	80 e3       	ldi	r24, 0x30	; 48
     6d4:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6d8:	8d ea       	ldi	r24, 0xAD	; 173
     6da:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6de:	80 e0       	ldi	r24, 0x00	; 0
     6e0:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6e4:	84 ea       	ldi	r24, 0xA4	; 164
     6e6:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6ea:	86 ea       	ldi	r24, 0xA6	; 166
     6ec:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6f0:	8f ea       	ldi	r24, 0xAF	; 175
     6f2:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	70 e0       	ldi	r23, 0x00	; 0
     6fa:	85 e8       	ldi	r24, 0x85	; 133
     6fc:	93 e0       	ldi	r25, 0x03	; 3
     6fe:	0e 94 14 04 	call	0x828	; 0x828 <fdevopen>
     702:	08 95       	ret

00000704 <OLED_write_data>:
     704:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10d0>
     708:	08 95       	ret

0000070a <OLED_write_char>:
     70a:	cf 93       	push	r28
     70c:	df 93       	push	r29
     70e:	d8 2f       	mov	r29, r24
     710:	c0 e0       	ldi	r28, 0x00	; 0
     712:	11 c0       	rjmp	.+34     	; 0x736 <OLED_write_char+0x2c>
     714:	ed 2f       	mov	r30, r29
     716:	f0 e0       	ldi	r31, 0x00	; 0
     718:	b0 97       	sbiw	r30, 0x20	; 32
     71a:	ee 0f       	add	r30, r30
     71c:	ff 1f       	adc	r31, r31
     71e:	ee 0f       	add	r30, r30
     720:	ff 1f       	adc	r31, r31
     722:	ee 0f       	add	r30, r30
     724:	ff 1f       	adc	r31, r31
     726:	ec 0f       	add	r30, r28
     728:	f1 1d       	adc	r31, r1
     72a:	e0 59       	subi	r30, 0x90	; 144
     72c:	ff 4f       	sbci	r31, 0xFF	; 255
     72e:	84 91       	lpm	r24, Z
     730:	0e 94 82 03 	call	0x704	; 0x704 <OLED_write_data>
     734:	cf 5f       	subi	r28, 0xFF	; 255
     736:	c8 30       	cpi	r28, 0x08	; 8
     738:	68 f3       	brcs	.-38     	; 0x714 <OLED_write_char+0xa>
     73a:	df 91       	pop	r29
     73c:	cf 91       	pop	r28
     73e:	08 95       	ret

00000740 <OLED_goto_page>:
	
}

void OLED_goto_page( uint8_t page ){
	OLED_write_command( 0xB0 + page ); // Set page
     740:	80 55       	subi	r24, 0x50	; 80
     742:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
     746:	08 95       	ret

00000748 <OLED_clear_page>:
	
}

void OLED_clear_page( uint8_t page ){
     748:	cf 93       	push	r28
	OLED_goto_page( page );
     74a:	0e 94 a0 03 	call	0x740	; 0x740 <OLED_goto_page>
	for ( uint8_t i = 0; i < 128; i++){
     74e:	c0 e0       	ldi	r28, 0x00	; 0
     750:	04 c0       	rjmp	.+8      	; 0x75a <OLED_clear_page+0x12>
		OLED_write_data(0);
     752:	80 e0       	ldi	r24, 0x00	; 0
     754:	0e 94 82 03 	call	0x704	; 0x704 <OLED_write_data>
	
}

void OLED_clear_page( uint8_t page ){
	OLED_goto_page( page );
	for ( uint8_t i = 0; i < 128; i++){
     758:	cf 5f       	subi	r28, 0xFF	; 255
     75a:	cc 23       	and	r28, r28
     75c:	d4 f7       	brge	.-12     	; 0x752 <OLED_clear_page+0xa>
		OLED_write_data(0);
	}
}
     75e:	cf 91       	pop	r28
     760:	08 95       	ret

00000762 <OLED_clear_screen>:

void OLED_clear_screen( void ){
     762:	cf 93       	push	r28
	for ( uint8_t i = 0; i < 8; i++){
     764:	c0 e0       	ldi	r28, 0x00	; 0
     766:	04 c0       	rjmp	.+8      	; 0x770 <OLED_clear_screen+0xe>
		OLED_clear_page( i );
     768:	8c 2f       	mov	r24, r28
     76a:	0e 94 a4 03 	call	0x748	; 0x748 <OLED_clear_page>
		OLED_write_data(0);
	}
}

void OLED_clear_screen( void ){
	for ( uint8_t i = 0; i < 8; i++){
     76e:	cf 5f       	subi	r28, 0xFF	; 255
     770:	c8 30       	cpi	r28, 0x08	; 8
     772:	d0 f3       	brcs	.-12     	; 0x768 <OLED_clear_screen+0x6>
		OLED_clear_page( i );
	}
}
     774:	cf 91       	pop	r28
     776:	08 95       	ret

00000778 <OLED_goto_column>:

void OLED_goto_column ( uint8_t column ){
     778:	cf 93       	push	r28
     77a:	c8 2f       	mov	r28, r24
	OLED_write_command(0x10 + column / 16); // Set column high address
     77c:	82 95       	swap	r24
     77e:	8f 70       	andi	r24, 0x0F	; 15
     780:	80 5f       	subi	r24, 0xF0	; 240
     782:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
	OLED_write_command(0x00 + column % 16); // Set column low address
     786:	8c 2f       	mov	r24, r28
     788:	8f 70       	andi	r24, 0x0F	; 15
     78a:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_write_command>
}
     78e:	cf 91       	pop	r28
     790:	08 95       	ret

00000792 <OLED_goto_pos>:

void OLED_goto_pos( uint8_t page, uint8_t column ){
     792:	cf 93       	push	r28
     794:	c6 2f       	mov	r28, r22
	OLED_goto_page( page );
     796:	0e 94 a0 03 	call	0x740	; 0x740 <OLED_goto_page>
	OLED_goto_column( column );
     79a:	8c 2f       	mov	r24, r28
     79c:	0e 94 bc 03 	call	0x778	; 0x778 <OLED_goto_column>
}
     7a0:	cf 91       	pop	r28
     7a2:	08 95       	ret

000007a4 <xmem_init>:
 */ 

#include "XMEMdriver.h"

void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
     7a4:	85 b7       	in	r24, 0x35	; 53
     7a6:	80 68       	ori	r24, 0x80	; 128
     7a8:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // mask unused bits
     7aa:	80 b7       	in	r24, 0x30	; 48
     7ac:	80 62       	ori	r24, 0x20	; 32
     7ae:	80 bf       	out	0x30, r24	; 48
     7b0:	08 95       	ret

000007b2 <adc_init>:
}

void adc_init ( void ){

	DDRD |= (1<<DDD5); // Set Data Direction PD5 to Write (output)
     7b2:	81 b3       	in	r24, 0x11	; 17
     7b4:	80 62       	ori	r24, 0x20	; 32
     7b6:	81 bb       	out	0x11, r24	; 17
	DDRD |= (0<<DDD4); // Set Data Direction PD4 to Read (input). Used for BUSY from ADC
     7b8:	81 b3       	in	r24, 0x11	; 17
     7ba:	81 bb       	out	0x11, r24	; 17
	
	TCCR1B |= (1<<WGM12 | 0<<WGM13); // Set CTC mode
     7bc:	8e b5       	in	r24, 0x2e	; 46
     7be:	88 60       	ori	r24, 0x08	; 8
     7c0:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (0<<WGM10 | 0<<WGM11); // Set CTC mode
     7c2:	8f b5       	in	r24, 0x2f	; 47
     7c4:	8f bd       	out	0x2f, r24	; 47
	
	TCCR1B |= (1<<CS10 | 0<<CS11 | 0<<CS12); //Clk frequency equal to system clock
     7c6:	8e b5       	in	r24, 0x2e	; 46
     7c8:	81 60       	ori	r24, 0x01	; 1
     7ca:	8e bd       	out	0x2e, r24	; 46

	TCCR1A |= (0<<COM1A1 | 1<<COM1A0); // Set 0C1A to toggle on match
     7cc:	8f b5       	in	r24, 0x2f	; 47
     7ce:	80 64       	ori	r24, 0x40	; 64
     7d0:	8f bd       	out	0x2f, r24	; 47
	
	OCR1A = 0x0; // Set compare to 0. Timer reset on compare equal, will always stay at 0, toggle every cycle (?)
     7d2:	1b bc       	out	0x2b, r1	; 43
     7d4:	1a bc       	out	0x2a, r1	; 42
     7d6:	08 95       	ret

000007d8 <__divmodhi4>:
     7d8:	97 fb       	bst	r25, 7
     7da:	07 2e       	mov	r0, r23
     7dc:	16 f4       	brtc	.+4      	; 0x7e2 <__divmodhi4+0xa>
     7de:	00 94       	com	r0
     7e0:	07 d0       	rcall	.+14     	; 0x7f0 <__divmodhi4_neg1>
     7e2:	77 fd       	sbrc	r23, 7
     7e4:	09 d0       	rcall	.+18     	; 0x7f8 <__divmodhi4_neg2>
     7e6:	0e 94 00 04 	call	0x800	; 0x800 <__udivmodhi4>
     7ea:	07 fc       	sbrc	r0, 7
     7ec:	05 d0       	rcall	.+10     	; 0x7f8 <__divmodhi4_neg2>
     7ee:	3e f4       	brtc	.+14     	; 0x7fe <__divmodhi4_exit>

000007f0 <__divmodhi4_neg1>:
     7f0:	90 95       	com	r25
     7f2:	81 95       	neg	r24
     7f4:	9f 4f       	sbci	r25, 0xFF	; 255
     7f6:	08 95       	ret

000007f8 <__divmodhi4_neg2>:
     7f8:	70 95       	com	r23
     7fa:	61 95       	neg	r22
     7fc:	7f 4f       	sbci	r23, 0xFF	; 255

000007fe <__divmodhi4_exit>:
     7fe:	08 95       	ret

00000800 <__udivmodhi4>:
     800:	aa 1b       	sub	r26, r26
     802:	bb 1b       	sub	r27, r27
     804:	51 e1       	ldi	r21, 0x11	; 17
     806:	07 c0       	rjmp	.+14     	; 0x816 <__udivmodhi4_ep>

00000808 <__udivmodhi4_loop>:
     808:	aa 1f       	adc	r26, r26
     80a:	bb 1f       	adc	r27, r27
     80c:	a6 17       	cp	r26, r22
     80e:	b7 07       	cpc	r27, r23
     810:	10 f0       	brcs	.+4      	; 0x816 <__udivmodhi4_ep>
     812:	a6 1b       	sub	r26, r22
     814:	b7 0b       	sbc	r27, r23

00000816 <__udivmodhi4_ep>:
     816:	88 1f       	adc	r24, r24
     818:	99 1f       	adc	r25, r25
     81a:	5a 95       	dec	r21
     81c:	a9 f7       	brne	.-22     	; 0x808 <__udivmodhi4_loop>
     81e:	80 95       	com	r24
     820:	90 95       	com	r25
     822:	bc 01       	movw	r22, r24
     824:	cd 01       	movw	r24, r26
     826:	08 95       	ret

00000828 <fdevopen>:
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	00 97       	sbiw	r24, 0x00	; 0
     832:	31 f4       	brne	.+12     	; 0x840 <fdevopen+0x18>
     834:	61 15       	cp	r22, r1
     836:	71 05       	cpc	r23, r1
     838:	19 f4       	brne	.+6      	; 0x840 <fdevopen+0x18>
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	3a c0       	rjmp	.+116    	; 0x8b4 <fdevopen+0x8c>
     840:	8b 01       	movw	r16, r22
     842:	ec 01       	movw	r28, r24
     844:	6e e0       	ldi	r22, 0x0E	; 14
     846:	70 e0       	ldi	r23, 0x00	; 0
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	0e 94 56 06 	call	0xcac	; 0xcac <calloc>
     850:	fc 01       	movw	r30, r24
     852:	89 2b       	or	r24, r25
     854:	91 f3       	breq	.-28     	; 0x83a <fdevopen+0x12>
     856:	80 e8       	ldi	r24, 0x80	; 128
     858:	83 83       	std	Z+3, r24	; 0x03
     85a:	01 15       	cp	r16, r1
     85c:	11 05       	cpc	r17, r1
     85e:	71 f0       	breq	.+28     	; 0x87c <fdevopen+0x54>
     860:	13 87       	std	Z+11, r17	; 0x0b
     862:	02 87       	std	Z+10, r16	; 0x0a
     864:	81 e8       	ldi	r24, 0x81	; 129
     866:	83 83       	std	Z+3, r24	; 0x03
     868:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__iob>
     86c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__iob+0x1>
     870:	89 2b       	or	r24, r25
     872:	21 f4       	brne	.+8      	; 0x87c <fdevopen+0x54>
     874:	f0 93 27 01 	sts	0x0127, r31	; 0x800127 <__iob+0x1>
     878:	e0 93 26 01 	sts	0x0126, r30	; 0x800126 <__iob>
     87c:	20 97       	sbiw	r28, 0x00	; 0
     87e:	c9 f0       	breq	.+50     	; 0x8b2 <fdevopen+0x8a>
     880:	d1 87       	std	Z+9, r29	; 0x09
     882:	c0 87       	std	Z+8, r28	; 0x08
     884:	83 81       	ldd	r24, Z+3	; 0x03
     886:	82 60       	ori	r24, 0x02	; 2
     888:	83 83       	std	Z+3, r24	; 0x03
     88a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__iob+0x2>
     88e:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__iob+0x3>
     892:	89 2b       	or	r24, r25
     894:	71 f4       	brne	.+28     	; 0x8b2 <fdevopen+0x8a>
     896:	f0 93 29 01 	sts	0x0129, r31	; 0x800129 <__iob+0x3>
     89a:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <__iob+0x2>
     89e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__iob+0x4>
     8a2:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__iob+0x5>
     8a6:	89 2b       	or	r24, r25
     8a8:	21 f4       	brne	.+8      	; 0x8b2 <fdevopen+0x8a>
     8aa:	f0 93 2b 01 	sts	0x012B, r31	; 0x80012b <__iob+0x5>
     8ae:	e0 93 2a 01 	sts	0x012A, r30	; 0x80012a <__iob+0x4>
     8b2:	cf 01       	movw	r24, r30
     8b4:	df 91       	pop	r29
     8b6:	cf 91       	pop	r28
     8b8:	1f 91       	pop	r17
     8ba:	0f 91       	pop	r16
     8bc:	08 95       	ret

000008be <printf>:
     8be:	a0 e0       	ldi	r26, 0x00	; 0
     8c0:	b0 e0       	ldi	r27, 0x00	; 0
     8c2:	e5 e6       	ldi	r30, 0x65	; 101
     8c4:	f4 e0       	ldi	r31, 0x04	; 4
     8c6:	0c 94 5a 08 	jmp	0x10b4	; 0x10b4 <__prologue_saves__+0x20>
     8ca:	ae 01       	movw	r20, r28
     8cc:	4b 5f       	subi	r20, 0xFB	; 251
     8ce:	5f 4f       	sbci	r21, 0xFF	; 255
     8d0:	fa 01       	movw	r30, r20
     8d2:	61 91       	ld	r22, Z+
     8d4:	71 91       	ld	r23, Z+
     8d6:	af 01       	movw	r20, r30
     8d8:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__iob+0x2>
     8dc:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__iob+0x3>
     8e0:	0e 94 75 04 	call	0x8ea	; 0x8ea <vfprintf>
     8e4:	e2 e0       	ldi	r30, 0x02	; 2
     8e6:	0c 94 76 08 	jmp	0x10ec	; 0x10ec <__epilogue_restores__+0x20>

000008ea <vfprintf>:
     8ea:	ab e0       	ldi	r26, 0x0B	; 11
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	eb e7       	ldi	r30, 0x7B	; 123
     8f0:	f4 e0       	ldi	r31, 0x04	; 4
     8f2:	0c 94 4a 08 	jmp	0x1094	; 0x1094 <__prologue_saves__>
     8f6:	6c 01       	movw	r12, r24
     8f8:	7b 01       	movw	r14, r22
     8fa:	8a 01       	movw	r16, r20
     8fc:	fc 01       	movw	r30, r24
     8fe:	17 82       	std	Z+7, r1	; 0x07
     900:	16 82       	std	Z+6, r1	; 0x06
     902:	83 81       	ldd	r24, Z+3	; 0x03
     904:	81 ff       	sbrs	r24, 1
     906:	cc c1       	rjmp	.+920    	; 0xca0 <vfprintf+0x3b6>
     908:	ce 01       	movw	r24, r28
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	3c 01       	movw	r6, r24
     90e:	f6 01       	movw	r30, r12
     910:	93 81       	ldd	r25, Z+3	; 0x03
     912:	f7 01       	movw	r30, r14
     914:	93 fd       	sbrc	r25, 3
     916:	85 91       	lpm	r24, Z+
     918:	93 ff       	sbrs	r25, 3
     91a:	81 91       	ld	r24, Z+
     91c:	7f 01       	movw	r14, r30
     91e:	88 23       	and	r24, r24
     920:	09 f4       	brne	.+2      	; 0x924 <vfprintf+0x3a>
     922:	ba c1       	rjmp	.+884    	; 0xc98 <vfprintf+0x3ae>
     924:	85 32       	cpi	r24, 0x25	; 37
     926:	39 f4       	brne	.+14     	; 0x936 <vfprintf+0x4c>
     928:	93 fd       	sbrc	r25, 3
     92a:	85 91       	lpm	r24, Z+
     92c:	93 ff       	sbrs	r25, 3
     92e:	81 91       	ld	r24, Z+
     930:	7f 01       	movw	r14, r30
     932:	85 32       	cpi	r24, 0x25	; 37
     934:	29 f4       	brne	.+10     	; 0x940 <vfprintf+0x56>
     936:	b6 01       	movw	r22, r12
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     93e:	e7 cf       	rjmp	.-50     	; 0x90e <vfprintf+0x24>
     940:	91 2c       	mov	r9, r1
     942:	21 2c       	mov	r2, r1
     944:	31 2c       	mov	r3, r1
     946:	ff e1       	ldi	r31, 0x1F	; 31
     948:	f3 15       	cp	r31, r3
     94a:	d8 f0       	brcs	.+54     	; 0x982 <vfprintf+0x98>
     94c:	8b 32       	cpi	r24, 0x2B	; 43
     94e:	79 f0       	breq	.+30     	; 0x96e <vfprintf+0x84>
     950:	38 f4       	brcc	.+14     	; 0x960 <vfprintf+0x76>
     952:	80 32       	cpi	r24, 0x20	; 32
     954:	79 f0       	breq	.+30     	; 0x974 <vfprintf+0x8a>
     956:	83 32       	cpi	r24, 0x23	; 35
     958:	a1 f4       	brne	.+40     	; 0x982 <vfprintf+0x98>
     95a:	23 2d       	mov	r18, r3
     95c:	20 61       	ori	r18, 0x10	; 16
     95e:	1d c0       	rjmp	.+58     	; 0x99a <vfprintf+0xb0>
     960:	8d 32       	cpi	r24, 0x2D	; 45
     962:	61 f0       	breq	.+24     	; 0x97c <vfprintf+0x92>
     964:	80 33       	cpi	r24, 0x30	; 48
     966:	69 f4       	brne	.+26     	; 0x982 <vfprintf+0x98>
     968:	23 2d       	mov	r18, r3
     96a:	21 60       	ori	r18, 0x01	; 1
     96c:	16 c0       	rjmp	.+44     	; 0x99a <vfprintf+0xb0>
     96e:	83 2d       	mov	r24, r3
     970:	82 60       	ori	r24, 0x02	; 2
     972:	38 2e       	mov	r3, r24
     974:	e3 2d       	mov	r30, r3
     976:	e4 60       	ori	r30, 0x04	; 4
     978:	3e 2e       	mov	r3, r30
     97a:	2a c0       	rjmp	.+84     	; 0x9d0 <vfprintf+0xe6>
     97c:	f3 2d       	mov	r31, r3
     97e:	f8 60       	ori	r31, 0x08	; 8
     980:	1d c0       	rjmp	.+58     	; 0x9bc <vfprintf+0xd2>
     982:	37 fc       	sbrc	r3, 7
     984:	2d c0       	rjmp	.+90     	; 0x9e0 <vfprintf+0xf6>
     986:	20 ed       	ldi	r18, 0xD0	; 208
     988:	28 0f       	add	r18, r24
     98a:	2a 30       	cpi	r18, 0x0A	; 10
     98c:	40 f0       	brcs	.+16     	; 0x99e <vfprintf+0xb4>
     98e:	8e 32       	cpi	r24, 0x2E	; 46
     990:	b9 f4       	brne	.+46     	; 0x9c0 <vfprintf+0xd6>
     992:	36 fc       	sbrc	r3, 6
     994:	81 c1       	rjmp	.+770    	; 0xc98 <vfprintf+0x3ae>
     996:	23 2d       	mov	r18, r3
     998:	20 64       	ori	r18, 0x40	; 64
     99a:	32 2e       	mov	r3, r18
     99c:	19 c0       	rjmp	.+50     	; 0x9d0 <vfprintf+0xe6>
     99e:	36 fe       	sbrs	r3, 6
     9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0xc4>
     9a2:	8a e0       	ldi	r24, 0x0A	; 10
     9a4:	98 9e       	mul	r9, r24
     9a6:	20 0d       	add	r18, r0
     9a8:	11 24       	eor	r1, r1
     9aa:	92 2e       	mov	r9, r18
     9ac:	11 c0       	rjmp	.+34     	; 0x9d0 <vfprintf+0xe6>
     9ae:	ea e0       	ldi	r30, 0x0A	; 10
     9b0:	2e 9e       	mul	r2, r30
     9b2:	20 0d       	add	r18, r0
     9b4:	11 24       	eor	r1, r1
     9b6:	22 2e       	mov	r2, r18
     9b8:	f3 2d       	mov	r31, r3
     9ba:	f0 62       	ori	r31, 0x20	; 32
     9bc:	3f 2e       	mov	r3, r31
     9be:	08 c0       	rjmp	.+16     	; 0x9d0 <vfprintf+0xe6>
     9c0:	8c 36       	cpi	r24, 0x6C	; 108
     9c2:	21 f4       	brne	.+8      	; 0x9cc <vfprintf+0xe2>
     9c4:	83 2d       	mov	r24, r3
     9c6:	80 68       	ori	r24, 0x80	; 128
     9c8:	38 2e       	mov	r3, r24
     9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <vfprintf+0xe6>
     9cc:	88 36       	cpi	r24, 0x68	; 104
     9ce:	41 f4       	brne	.+16     	; 0x9e0 <vfprintf+0xf6>
     9d0:	f7 01       	movw	r30, r14
     9d2:	93 fd       	sbrc	r25, 3
     9d4:	85 91       	lpm	r24, Z+
     9d6:	93 ff       	sbrs	r25, 3
     9d8:	81 91       	ld	r24, Z+
     9da:	7f 01       	movw	r14, r30
     9dc:	81 11       	cpse	r24, r1
     9de:	b3 cf       	rjmp	.-154    	; 0x946 <vfprintf+0x5c>
     9e0:	98 2f       	mov	r25, r24
     9e2:	9f 7d       	andi	r25, 0xDF	; 223
     9e4:	95 54       	subi	r25, 0x45	; 69
     9e6:	93 30       	cpi	r25, 0x03	; 3
     9e8:	28 f4       	brcc	.+10     	; 0x9f4 <vfprintf+0x10a>
     9ea:	0c 5f       	subi	r16, 0xFC	; 252
     9ec:	1f 4f       	sbci	r17, 0xFF	; 255
     9ee:	9f e3       	ldi	r25, 0x3F	; 63
     9f0:	99 83       	std	Y+1, r25	; 0x01
     9f2:	0d c0       	rjmp	.+26     	; 0xa0e <vfprintf+0x124>
     9f4:	83 36       	cpi	r24, 0x63	; 99
     9f6:	31 f0       	breq	.+12     	; 0xa04 <vfprintf+0x11a>
     9f8:	83 37       	cpi	r24, 0x73	; 115
     9fa:	71 f0       	breq	.+28     	; 0xa18 <vfprintf+0x12e>
     9fc:	83 35       	cpi	r24, 0x53	; 83
     9fe:	09 f0       	breq	.+2      	; 0xa02 <vfprintf+0x118>
     a00:	59 c0       	rjmp	.+178    	; 0xab4 <vfprintf+0x1ca>
     a02:	21 c0       	rjmp	.+66     	; 0xa46 <vfprintf+0x15c>
     a04:	f8 01       	movw	r30, r16
     a06:	80 81       	ld	r24, Z
     a08:	89 83       	std	Y+1, r24	; 0x01
     a0a:	0e 5f       	subi	r16, 0xFE	; 254
     a0c:	1f 4f       	sbci	r17, 0xFF	; 255
     a0e:	88 24       	eor	r8, r8
     a10:	83 94       	inc	r8
     a12:	91 2c       	mov	r9, r1
     a14:	53 01       	movw	r10, r6
     a16:	13 c0       	rjmp	.+38     	; 0xa3e <vfprintf+0x154>
     a18:	28 01       	movw	r4, r16
     a1a:	f2 e0       	ldi	r31, 0x02	; 2
     a1c:	4f 0e       	add	r4, r31
     a1e:	51 1c       	adc	r5, r1
     a20:	f8 01       	movw	r30, r16
     a22:	a0 80       	ld	r10, Z
     a24:	b1 80       	ldd	r11, Z+1	; 0x01
     a26:	36 fe       	sbrs	r3, 6
     a28:	03 c0       	rjmp	.+6      	; 0xa30 <vfprintf+0x146>
     a2a:	69 2d       	mov	r22, r9
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <vfprintf+0x14a>
     a30:	6f ef       	ldi	r22, 0xFF	; 255
     a32:	7f ef       	ldi	r23, 0xFF	; 255
     a34:	c5 01       	movw	r24, r10
     a36:	0e 94 a5 07 	call	0xf4a	; 0xf4a <strnlen>
     a3a:	4c 01       	movw	r8, r24
     a3c:	82 01       	movw	r16, r4
     a3e:	f3 2d       	mov	r31, r3
     a40:	ff 77       	andi	r31, 0x7F	; 127
     a42:	3f 2e       	mov	r3, r31
     a44:	16 c0       	rjmp	.+44     	; 0xa72 <vfprintf+0x188>
     a46:	28 01       	movw	r4, r16
     a48:	22 e0       	ldi	r18, 0x02	; 2
     a4a:	42 0e       	add	r4, r18
     a4c:	51 1c       	adc	r5, r1
     a4e:	f8 01       	movw	r30, r16
     a50:	a0 80       	ld	r10, Z
     a52:	b1 80       	ldd	r11, Z+1	; 0x01
     a54:	36 fe       	sbrs	r3, 6
     a56:	03 c0       	rjmp	.+6      	; 0xa5e <vfprintf+0x174>
     a58:	69 2d       	mov	r22, r9
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	02 c0       	rjmp	.+4      	; 0xa62 <vfprintf+0x178>
     a5e:	6f ef       	ldi	r22, 0xFF	; 255
     a60:	7f ef       	ldi	r23, 0xFF	; 255
     a62:	c5 01       	movw	r24, r10
     a64:	0e 94 93 07 	call	0xf26	; 0xf26 <strnlen_P>
     a68:	4c 01       	movw	r8, r24
     a6a:	f3 2d       	mov	r31, r3
     a6c:	f0 68       	ori	r31, 0x80	; 128
     a6e:	3f 2e       	mov	r3, r31
     a70:	82 01       	movw	r16, r4
     a72:	33 fc       	sbrc	r3, 3
     a74:	1b c0       	rjmp	.+54     	; 0xaac <vfprintf+0x1c2>
     a76:	82 2d       	mov	r24, r2
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	88 16       	cp	r8, r24
     a7c:	99 06       	cpc	r9, r25
     a7e:	b0 f4       	brcc	.+44     	; 0xaac <vfprintf+0x1c2>
     a80:	b6 01       	movw	r22, r12
     a82:	80 e2       	ldi	r24, 0x20	; 32
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     a8a:	2a 94       	dec	r2
     a8c:	f4 cf       	rjmp	.-24     	; 0xa76 <vfprintf+0x18c>
     a8e:	f5 01       	movw	r30, r10
     a90:	37 fc       	sbrc	r3, 7
     a92:	85 91       	lpm	r24, Z+
     a94:	37 fe       	sbrs	r3, 7
     a96:	81 91       	ld	r24, Z+
     a98:	5f 01       	movw	r10, r30
     a9a:	b6 01       	movw	r22, r12
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     aa2:	21 10       	cpse	r2, r1
     aa4:	2a 94       	dec	r2
     aa6:	21 e0       	ldi	r18, 0x01	; 1
     aa8:	82 1a       	sub	r8, r18
     aaa:	91 08       	sbc	r9, r1
     aac:	81 14       	cp	r8, r1
     aae:	91 04       	cpc	r9, r1
     ab0:	71 f7       	brne	.-36     	; 0xa8e <vfprintf+0x1a4>
     ab2:	e8 c0       	rjmp	.+464    	; 0xc84 <vfprintf+0x39a>
     ab4:	84 36       	cpi	r24, 0x64	; 100
     ab6:	11 f0       	breq	.+4      	; 0xabc <vfprintf+0x1d2>
     ab8:	89 36       	cpi	r24, 0x69	; 105
     aba:	41 f5       	brne	.+80     	; 0xb0c <vfprintf+0x222>
     abc:	f8 01       	movw	r30, r16
     abe:	37 fe       	sbrs	r3, 7
     ac0:	07 c0       	rjmp	.+14     	; 0xad0 <vfprintf+0x1e6>
     ac2:	60 81       	ld	r22, Z
     ac4:	71 81       	ldd	r23, Z+1	; 0x01
     ac6:	82 81       	ldd	r24, Z+2	; 0x02
     ac8:	93 81       	ldd	r25, Z+3	; 0x03
     aca:	0c 5f       	subi	r16, 0xFC	; 252
     acc:	1f 4f       	sbci	r17, 0xFF	; 255
     ace:	08 c0       	rjmp	.+16     	; 0xae0 <vfprintf+0x1f6>
     ad0:	60 81       	ld	r22, Z
     ad2:	71 81       	ldd	r23, Z+1	; 0x01
     ad4:	07 2e       	mov	r0, r23
     ad6:	00 0c       	add	r0, r0
     ad8:	88 0b       	sbc	r24, r24
     ada:	99 0b       	sbc	r25, r25
     adc:	0e 5f       	subi	r16, 0xFE	; 254
     ade:	1f 4f       	sbci	r17, 0xFF	; 255
     ae0:	f3 2d       	mov	r31, r3
     ae2:	ff 76       	andi	r31, 0x6F	; 111
     ae4:	3f 2e       	mov	r3, r31
     ae6:	97 ff       	sbrs	r25, 7
     ae8:	09 c0       	rjmp	.+18     	; 0xafc <vfprintf+0x212>
     aea:	90 95       	com	r25
     aec:	80 95       	com	r24
     aee:	70 95       	com	r23
     af0:	61 95       	neg	r22
     af2:	7f 4f       	sbci	r23, 0xFF	; 255
     af4:	8f 4f       	sbci	r24, 0xFF	; 255
     af6:	9f 4f       	sbci	r25, 0xFF	; 255
     af8:	f0 68       	ori	r31, 0x80	; 128
     afa:	3f 2e       	mov	r3, r31
     afc:	2a e0       	ldi	r18, 0x0A	; 10
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	a3 01       	movw	r20, r6
     b02:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <__ultoa_invert>
     b06:	88 2e       	mov	r8, r24
     b08:	86 18       	sub	r8, r6
     b0a:	45 c0       	rjmp	.+138    	; 0xb96 <vfprintf+0x2ac>
     b0c:	85 37       	cpi	r24, 0x75	; 117
     b0e:	31 f4       	brne	.+12     	; 0xb1c <vfprintf+0x232>
     b10:	23 2d       	mov	r18, r3
     b12:	2f 7e       	andi	r18, 0xEF	; 239
     b14:	b2 2e       	mov	r11, r18
     b16:	2a e0       	ldi	r18, 0x0A	; 10
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	25 c0       	rjmp	.+74     	; 0xb66 <vfprintf+0x27c>
     b1c:	93 2d       	mov	r25, r3
     b1e:	99 7f       	andi	r25, 0xF9	; 249
     b20:	b9 2e       	mov	r11, r25
     b22:	8f 36       	cpi	r24, 0x6F	; 111
     b24:	c1 f0       	breq	.+48     	; 0xb56 <vfprintf+0x26c>
     b26:	18 f4       	brcc	.+6      	; 0xb2e <vfprintf+0x244>
     b28:	88 35       	cpi	r24, 0x58	; 88
     b2a:	79 f0       	breq	.+30     	; 0xb4a <vfprintf+0x260>
     b2c:	b5 c0       	rjmp	.+362    	; 0xc98 <vfprintf+0x3ae>
     b2e:	80 37       	cpi	r24, 0x70	; 112
     b30:	19 f0       	breq	.+6      	; 0xb38 <vfprintf+0x24e>
     b32:	88 37       	cpi	r24, 0x78	; 120
     b34:	21 f0       	breq	.+8      	; 0xb3e <vfprintf+0x254>
     b36:	b0 c0       	rjmp	.+352    	; 0xc98 <vfprintf+0x3ae>
     b38:	e9 2f       	mov	r30, r25
     b3a:	e0 61       	ori	r30, 0x10	; 16
     b3c:	be 2e       	mov	r11, r30
     b3e:	b4 fe       	sbrs	r11, 4
     b40:	0d c0       	rjmp	.+26     	; 0xb5c <vfprintf+0x272>
     b42:	fb 2d       	mov	r31, r11
     b44:	f4 60       	ori	r31, 0x04	; 4
     b46:	bf 2e       	mov	r11, r31
     b48:	09 c0       	rjmp	.+18     	; 0xb5c <vfprintf+0x272>
     b4a:	34 fe       	sbrs	r3, 4
     b4c:	0a c0       	rjmp	.+20     	; 0xb62 <vfprintf+0x278>
     b4e:	29 2f       	mov	r18, r25
     b50:	26 60       	ori	r18, 0x06	; 6
     b52:	b2 2e       	mov	r11, r18
     b54:	06 c0       	rjmp	.+12     	; 0xb62 <vfprintf+0x278>
     b56:	28 e0       	ldi	r18, 0x08	; 8
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	05 c0       	rjmp	.+10     	; 0xb66 <vfprintf+0x27c>
     b5c:	20 e1       	ldi	r18, 0x10	; 16
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	02 c0       	rjmp	.+4      	; 0xb66 <vfprintf+0x27c>
     b62:	20 e1       	ldi	r18, 0x10	; 16
     b64:	32 e0       	ldi	r19, 0x02	; 2
     b66:	f8 01       	movw	r30, r16
     b68:	b7 fe       	sbrs	r11, 7
     b6a:	07 c0       	rjmp	.+14     	; 0xb7a <vfprintf+0x290>
     b6c:	60 81       	ld	r22, Z
     b6e:	71 81       	ldd	r23, Z+1	; 0x01
     b70:	82 81       	ldd	r24, Z+2	; 0x02
     b72:	93 81       	ldd	r25, Z+3	; 0x03
     b74:	0c 5f       	subi	r16, 0xFC	; 252
     b76:	1f 4f       	sbci	r17, 0xFF	; 255
     b78:	06 c0       	rjmp	.+12     	; 0xb86 <vfprintf+0x29c>
     b7a:	60 81       	ld	r22, Z
     b7c:	71 81       	ldd	r23, Z+1	; 0x01
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 5f       	subi	r16, 0xFE	; 254
     b84:	1f 4f       	sbci	r17, 0xFF	; 255
     b86:	a3 01       	movw	r20, r6
     b88:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <__ultoa_invert>
     b8c:	88 2e       	mov	r8, r24
     b8e:	86 18       	sub	r8, r6
     b90:	fb 2d       	mov	r31, r11
     b92:	ff 77       	andi	r31, 0x7F	; 127
     b94:	3f 2e       	mov	r3, r31
     b96:	36 fe       	sbrs	r3, 6
     b98:	0d c0       	rjmp	.+26     	; 0xbb4 <vfprintf+0x2ca>
     b9a:	23 2d       	mov	r18, r3
     b9c:	2e 7f       	andi	r18, 0xFE	; 254
     b9e:	a2 2e       	mov	r10, r18
     ba0:	89 14       	cp	r8, r9
     ba2:	58 f4       	brcc	.+22     	; 0xbba <vfprintf+0x2d0>
     ba4:	34 fe       	sbrs	r3, 4
     ba6:	0b c0       	rjmp	.+22     	; 0xbbe <vfprintf+0x2d4>
     ba8:	32 fc       	sbrc	r3, 2
     baa:	09 c0       	rjmp	.+18     	; 0xbbe <vfprintf+0x2d4>
     bac:	83 2d       	mov	r24, r3
     bae:	8e 7e       	andi	r24, 0xEE	; 238
     bb0:	a8 2e       	mov	r10, r24
     bb2:	05 c0       	rjmp	.+10     	; 0xbbe <vfprintf+0x2d4>
     bb4:	b8 2c       	mov	r11, r8
     bb6:	a3 2c       	mov	r10, r3
     bb8:	03 c0       	rjmp	.+6      	; 0xbc0 <vfprintf+0x2d6>
     bba:	b8 2c       	mov	r11, r8
     bbc:	01 c0       	rjmp	.+2      	; 0xbc0 <vfprintf+0x2d6>
     bbe:	b9 2c       	mov	r11, r9
     bc0:	a4 fe       	sbrs	r10, 4
     bc2:	0f c0       	rjmp	.+30     	; 0xbe2 <vfprintf+0x2f8>
     bc4:	fe 01       	movw	r30, r28
     bc6:	e8 0d       	add	r30, r8
     bc8:	f1 1d       	adc	r31, r1
     bca:	80 81       	ld	r24, Z
     bcc:	80 33       	cpi	r24, 0x30	; 48
     bce:	21 f4       	brne	.+8      	; 0xbd8 <vfprintf+0x2ee>
     bd0:	9a 2d       	mov	r25, r10
     bd2:	99 7e       	andi	r25, 0xE9	; 233
     bd4:	a9 2e       	mov	r10, r25
     bd6:	09 c0       	rjmp	.+18     	; 0xbea <vfprintf+0x300>
     bd8:	a2 fe       	sbrs	r10, 2
     bda:	06 c0       	rjmp	.+12     	; 0xbe8 <vfprintf+0x2fe>
     bdc:	b3 94       	inc	r11
     bde:	b3 94       	inc	r11
     be0:	04 c0       	rjmp	.+8      	; 0xbea <vfprintf+0x300>
     be2:	8a 2d       	mov	r24, r10
     be4:	86 78       	andi	r24, 0x86	; 134
     be6:	09 f0       	breq	.+2      	; 0xbea <vfprintf+0x300>
     be8:	b3 94       	inc	r11
     bea:	a3 fc       	sbrc	r10, 3
     bec:	11 c0       	rjmp	.+34     	; 0xc10 <vfprintf+0x326>
     bee:	a0 fe       	sbrs	r10, 0
     bf0:	06 c0       	rjmp	.+12     	; 0xbfe <vfprintf+0x314>
     bf2:	b2 14       	cp	r11, r2
     bf4:	88 f4       	brcc	.+34     	; 0xc18 <vfprintf+0x32e>
     bf6:	28 0c       	add	r2, r8
     bf8:	92 2c       	mov	r9, r2
     bfa:	9b 18       	sub	r9, r11
     bfc:	0e c0       	rjmp	.+28     	; 0xc1a <vfprintf+0x330>
     bfe:	b2 14       	cp	r11, r2
     c00:	60 f4       	brcc	.+24     	; 0xc1a <vfprintf+0x330>
     c02:	b6 01       	movw	r22, r12
     c04:	80 e2       	ldi	r24, 0x20	; 32
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     c0c:	b3 94       	inc	r11
     c0e:	f7 cf       	rjmp	.-18     	; 0xbfe <vfprintf+0x314>
     c10:	b2 14       	cp	r11, r2
     c12:	18 f4       	brcc	.+6      	; 0xc1a <vfprintf+0x330>
     c14:	2b 18       	sub	r2, r11
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <vfprintf+0x332>
     c18:	98 2c       	mov	r9, r8
     c1a:	21 2c       	mov	r2, r1
     c1c:	a4 fe       	sbrs	r10, 4
     c1e:	10 c0       	rjmp	.+32     	; 0xc40 <vfprintf+0x356>
     c20:	b6 01       	movw	r22, r12
     c22:	80 e3       	ldi	r24, 0x30	; 48
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     c2a:	a2 fe       	sbrs	r10, 2
     c2c:	17 c0       	rjmp	.+46     	; 0xc5c <vfprintf+0x372>
     c2e:	a1 fc       	sbrc	r10, 1
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <vfprintf+0x34e>
     c32:	88 e7       	ldi	r24, 0x78	; 120
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <vfprintf+0x352>
     c38:	88 e5       	ldi	r24, 0x58	; 88
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	b6 01       	movw	r22, r12
     c3e:	0c c0       	rjmp	.+24     	; 0xc58 <vfprintf+0x36e>
     c40:	8a 2d       	mov	r24, r10
     c42:	86 78       	andi	r24, 0x86	; 134
     c44:	59 f0       	breq	.+22     	; 0xc5c <vfprintf+0x372>
     c46:	a1 fe       	sbrs	r10, 1
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <vfprintf+0x364>
     c4a:	8b e2       	ldi	r24, 0x2B	; 43
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <vfprintf+0x366>
     c4e:	80 e2       	ldi	r24, 0x20	; 32
     c50:	a7 fc       	sbrc	r10, 7
     c52:	8d e2       	ldi	r24, 0x2D	; 45
     c54:	b6 01       	movw	r22, r12
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     c5c:	89 14       	cp	r8, r9
     c5e:	38 f4       	brcc	.+14     	; 0xc6e <vfprintf+0x384>
     c60:	b6 01       	movw	r22, r12
     c62:	80 e3       	ldi	r24, 0x30	; 48
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     c6a:	9a 94       	dec	r9
     c6c:	f7 cf       	rjmp	.-18     	; 0xc5c <vfprintf+0x372>
     c6e:	8a 94       	dec	r8
     c70:	f3 01       	movw	r30, r6
     c72:	e8 0d       	add	r30, r8
     c74:	f1 1d       	adc	r31, r1
     c76:	80 81       	ld	r24, Z
     c78:	b6 01       	movw	r22, r12
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     c80:	81 10       	cpse	r8, r1
     c82:	f5 cf       	rjmp	.-22     	; 0xc6e <vfprintf+0x384>
     c84:	22 20       	and	r2, r2
     c86:	09 f4       	brne	.+2      	; 0xc8a <vfprintf+0x3a0>
     c88:	42 ce       	rjmp	.-892    	; 0x90e <vfprintf+0x24>
     c8a:	b6 01       	movw	r22, r12
     c8c:	80 e2       	ldi	r24, 0x20	; 32
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 b0 07 	call	0xf60	; 0xf60 <fputc>
     c94:	2a 94       	dec	r2
     c96:	f6 cf       	rjmp	.-20     	; 0xc84 <vfprintf+0x39a>
     c98:	f6 01       	movw	r30, r12
     c9a:	86 81       	ldd	r24, Z+6	; 0x06
     c9c:	97 81       	ldd	r25, Z+7	; 0x07
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <vfprintf+0x3ba>
     ca0:	8f ef       	ldi	r24, 0xFF	; 255
     ca2:	9f ef       	ldi	r25, 0xFF	; 255
     ca4:	2b 96       	adiw	r28, 0x0b	; 11
     ca6:	e2 e1       	ldi	r30, 0x12	; 18
     ca8:	0c 94 66 08 	jmp	0x10cc	; 0x10cc <__epilogue_restores__>

00000cac <calloc>:
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	86 9f       	mul	r24, r22
     cb6:	80 01       	movw	r16, r0
     cb8:	87 9f       	mul	r24, r23
     cba:	10 0d       	add	r17, r0
     cbc:	96 9f       	mul	r25, r22
     cbe:	10 0d       	add	r17, r0
     cc0:	11 24       	eor	r1, r1
     cc2:	c8 01       	movw	r24, r16
     cc4:	0e 94 72 06 	call	0xce4	; 0xce4 <malloc>
     cc8:	ec 01       	movw	r28, r24
     cca:	00 97       	sbiw	r24, 0x00	; 0
     ccc:	29 f0       	breq	.+10     	; 0xcd8 <calloc+0x2c>
     cce:	a8 01       	movw	r20, r16
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	0e 94 9e 07 	call	0xf3c	; 0xf3c <memset>
     cd8:	ce 01       	movw	r24, r28
     cda:	df 91       	pop	r29
     cdc:	cf 91       	pop	r28
     cde:	1f 91       	pop	r17
     ce0:	0f 91       	pop	r16
     ce2:	08 95       	ret

00000ce4 <malloc>:
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	82 30       	cpi	r24, 0x02	; 2
     cee:	91 05       	cpc	r25, r1
     cf0:	10 f4       	brcc	.+4      	; 0xcf6 <malloc+0x12>
     cf2:	82 e0       	ldi	r24, 0x02	; 2
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	e0 91 2e 01 	lds	r30, 0x012E	; 0x80012e <__flp>
     cfa:	f0 91 2f 01 	lds	r31, 0x012F	; 0x80012f <__flp+0x1>
     cfe:	20 e0       	ldi	r18, 0x00	; 0
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	a0 e0       	ldi	r26, 0x00	; 0
     d04:	b0 e0       	ldi	r27, 0x00	; 0
     d06:	30 97       	sbiw	r30, 0x00	; 0
     d08:	19 f1       	breq	.+70     	; 0xd50 <malloc+0x6c>
     d0a:	40 81       	ld	r20, Z
     d0c:	51 81       	ldd	r21, Z+1	; 0x01
     d0e:	02 81       	ldd	r16, Z+2	; 0x02
     d10:	13 81       	ldd	r17, Z+3	; 0x03
     d12:	48 17       	cp	r20, r24
     d14:	59 07       	cpc	r21, r25
     d16:	c8 f0       	brcs	.+50     	; 0xd4a <malloc+0x66>
     d18:	84 17       	cp	r24, r20
     d1a:	95 07       	cpc	r25, r21
     d1c:	69 f4       	brne	.+26     	; 0xd38 <malloc+0x54>
     d1e:	10 97       	sbiw	r26, 0x00	; 0
     d20:	31 f0       	breq	.+12     	; 0xd2e <malloc+0x4a>
     d22:	12 96       	adiw	r26, 0x02	; 2
     d24:	0c 93       	st	X, r16
     d26:	12 97       	sbiw	r26, 0x02	; 2
     d28:	13 96       	adiw	r26, 0x03	; 3
     d2a:	1c 93       	st	X, r17
     d2c:	27 c0       	rjmp	.+78     	; 0xd7c <malloc+0x98>
     d2e:	00 93 2e 01 	sts	0x012E, r16	; 0x80012e <__flp>
     d32:	10 93 2f 01 	sts	0x012F, r17	; 0x80012f <__flp+0x1>
     d36:	22 c0       	rjmp	.+68     	; 0xd7c <malloc+0x98>
     d38:	21 15       	cp	r18, r1
     d3a:	31 05       	cpc	r19, r1
     d3c:	19 f0       	breq	.+6      	; 0xd44 <malloc+0x60>
     d3e:	42 17       	cp	r20, r18
     d40:	53 07       	cpc	r21, r19
     d42:	18 f4       	brcc	.+6      	; 0xd4a <malloc+0x66>
     d44:	9a 01       	movw	r18, r20
     d46:	bd 01       	movw	r22, r26
     d48:	ef 01       	movw	r28, r30
     d4a:	df 01       	movw	r26, r30
     d4c:	f8 01       	movw	r30, r16
     d4e:	db cf       	rjmp	.-74     	; 0xd06 <malloc+0x22>
     d50:	21 15       	cp	r18, r1
     d52:	31 05       	cpc	r19, r1
     d54:	f9 f0       	breq	.+62     	; 0xd94 <malloc+0xb0>
     d56:	28 1b       	sub	r18, r24
     d58:	39 0b       	sbc	r19, r25
     d5a:	24 30       	cpi	r18, 0x04	; 4
     d5c:	31 05       	cpc	r19, r1
     d5e:	80 f4       	brcc	.+32     	; 0xd80 <malloc+0x9c>
     d60:	8a 81       	ldd	r24, Y+2	; 0x02
     d62:	9b 81       	ldd	r25, Y+3	; 0x03
     d64:	61 15       	cp	r22, r1
     d66:	71 05       	cpc	r23, r1
     d68:	21 f0       	breq	.+8      	; 0xd72 <malloc+0x8e>
     d6a:	fb 01       	movw	r30, r22
     d6c:	93 83       	std	Z+3, r25	; 0x03
     d6e:	82 83       	std	Z+2, r24	; 0x02
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <malloc+0x96>
     d72:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__flp+0x1>
     d76:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__flp>
     d7a:	fe 01       	movw	r30, r28
     d7c:	32 96       	adiw	r30, 0x02	; 2
     d7e:	44 c0       	rjmp	.+136    	; 0xe08 <malloc+0x124>
     d80:	fe 01       	movw	r30, r28
     d82:	e2 0f       	add	r30, r18
     d84:	f3 1f       	adc	r31, r19
     d86:	81 93       	st	Z+, r24
     d88:	91 93       	st	Z+, r25
     d8a:	22 50       	subi	r18, 0x02	; 2
     d8c:	31 09       	sbc	r19, r1
     d8e:	39 83       	std	Y+1, r19	; 0x01
     d90:	28 83       	st	Y, r18
     d92:	3a c0       	rjmp	.+116    	; 0xe08 <malloc+0x124>
     d94:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <__brkval>
     d98:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <__brkval+0x1>
     d9c:	23 2b       	or	r18, r19
     d9e:	41 f4       	brne	.+16     	; 0xdb0 <malloc+0xcc>
     da0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     da4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     da8:	30 93 2d 01 	sts	0x012D, r19	; 0x80012d <__brkval+0x1>
     dac:	20 93 2c 01 	sts	0x012C, r18	; 0x80012c <__brkval>
     db0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     db4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     db8:	21 15       	cp	r18, r1
     dba:	31 05       	cpc	r19, r1
     dbc:	41 f4       	brne	.+16     	; 0xdce <malloc+0xea>
     dbe:	2d b7       	in	r18, 0x3d	; 61
     dc0:	3e b7       	in	r19, 0x3e	; 62
     dc2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     dc6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     dca:	24 1b       	sub	r18, r20
     dcc:	35 0b       	sbc	r19, r21
     dce:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <__brkval>
     dd2:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <__brkval+0x1>
     dd6:	e2 17       	cp	r30, r18
     dd8:	f3 07       	cpc	r31, r19
     dda:	a0 f4       	brcc	.+40     	; 0xe04 <malloc+0x120>
     ddc:	2e 1b       	sub	r18, r30
     dde:	3f 0b       	sbc	r19, r31
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	78 f0       	brcs	.+30     	; 0xe04 <malloc+0x120>
     de6:	ac 01       	movw	r20, r24
     de8:	4e 5f       	subi	r20, 0xFE	; 254
     dea:	5f 4f       	sbci	r21, 0xFF	; 255
     dec:	24 17       	cp	r18, r20
     dee:	35 07       	cpc	r19, r21
     df0:	48 f0       	brcs	.+18     	; 0xe04 <malloc+0x120>
     df2:	4e 0f       	add	r20, r30
     df4:	5f 1f       	adc	r21, r31
     df6:	50 93 2d 01 	sts	0x012D, r21	; 0x80012d <__brkval+0x1>
     dfa:	40 93 2c 01 	sts	0x012C, r20	; 0x80012c <__brkval>
     dfe:	81 93       	st	Z+, r24
     e00:	91 93       	st	Z+, r25
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <malloc+0x124>
     e04:	e0 e0       	ldi	r30, 0x00	; 0
     e06:	f0 e0       	ldi	r31, 0x00	; 0
     e08:	cf 01       	movw	r24, r30
     e0a:	df 91       	pop	r29
     e0c:	cf 91       	pop	r28
     e0e:	1f 91       	pop	r17
     e10:	0f 91       	pop	r16
     e12:	08 95       	ret

00000e14 <free>:
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	00 97       	sbiw	r24, 0x00	; 0
     e1a:	09 f4       	brne	.+2      	; 0xe1e <free+0xa>
     e1c:	81 c0       	rjmp	.+258    	; 0xf20 <free+0x10c>
     e1e:	fc 01       	movw	r30, r24
     e20:	32 97       	sbiw	r30, 0x02	; 2
     e22:	13 82       	std	Z+3, r1	; 0x03
     e24:	12 82       	std	Z+2, r1	; 0x02
     e26:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <__flp>
     e2a:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <__flp+0x1>
     e2e:	10 97       	sbiw	r26, 0x00	; 0
     e30:	81 f4       	brne	.+32     	; 0xe52 <free+0x3e>
     e32:	20 81       	ld	r18, Z
     e34:	31 81       	ldd	r19, Z+1	; 0x01
     e36:	82 0f       	add	r24, r18
     e38:	93 1f       	adc	r25, r19
     e3a:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <__brkval>
     e3e:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <__brkval+0x1>
     e42:	28 17       	cp	r18, r24
     e44:	39 07       	cpc	r19, r25
     e46:	51 f5       	brne	.+84     	; 0xe9c <free+0x88>
     e48:	f0 93 2d 01 	sts	0x012D, r31	; 0x80012d <__brkval+0x1>
     e4c:	e0 93 2c 01 	sts	0x012C, r30	; 0x80012c <__brkval>
     e50:	67 c0       	rjmp	.+206    	; 0xf20 <free+0x10c>
     e52:	ed 01       	movw	r28, r26
     e54:	20 e0       	ldi	r18, 0x00	; 0
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	ce 17       	cp	r28, r30
     e5a:	df 07       	cpc	r29, r31
     e5c:	40 f4       	brcc	.+16     	; 0xe6e <free+0x5a>
     e5e:	4a 81       	ldd	r20, Y+2	; 0x02
     e60:	5b 81       	ldd	r21, Y+3	; 0x03
     e62:	9e 01       	movw	r18, r28
     e64:	41 15       	cp	r20, r1
     e66:	51 05       	cpc	r21, r1
     e68:	f1 f0       	breq	.+60     	; 0xea6 <free+0x92>
     e6a:	ea 01       	movw	r28, r20
     e6c:	f5 cf       	rjmp	.-22     	; 0xe58 <free+0x44>
     e6e:	d3 83       	std	Z+3, r29	; 0x03
     e70:	c2 83       	std	Z+2, r28	; 0x02
     e72:	40 81       	ld	r20, Z
     e74:	51 81       	ldd	r21, Z+1	; 0x01
     e76:	84 0f       	add	r24, r20
     e78:	95 1f       	adc	r25, r21
     e7a:	c8 17       	cp	r28, r24
     e7c:	d9 07       	cpc	r29, r25
     e7e:	59 f4       	brne	.+22     	; 0xe96 <free+0x82>
     e80:	88 81       	ld	r24, Y
     e82:	99 81       	ldd	r25, Y+1	; 0x01
     e84:	84 0f       	add	r24, r20
     e86:	95 1f       	adc	r25, r21
     e88:	02 96       	adiw	r24, 0x02	; 2
     e8a:	91 83       	std	Z+1, r25	; 0x01
     e8c:	80 83       	st	Z, r24
     e8e:	8a 81       	ldd	r24, Y+2	; 0x02
     e90:	9b 81       	ldd	r25, Y+3	; 0x03
     e92:	93 83       	std	Z+3, r25	; 0x03
     e94:	82 83       	std	Z+2, r24	; 0x02
     e96:	21 15       	cp	r18, r1
     e98:	31 05       	cpc	r19, r1
     e9a:	29 f4       	brne	.+10     	; 0xea6 <free+0x92>
     e9c:	f0 93 2f 01 	sts	0x012F, r31	; 0x80012f <__flp+0x1>
     ea0:	e0 93 2e 01 	sts	0x012E, r30	; 0x80012e <__flp>
     ea4:	3d c0       	rjmp	.+122    	; 0xf20 <free+0x10c>
     ea6:	e9 01       	movw	r28, r18
     ea8:	fb 83       	std	Y+3, r31	; 0x03
     eaa:	ea 83       	std	Y+2, r30	; 0x02
     eac:	49 91       	ld	r20, Y+
     eae:	59 91       	ld	r21, Y+
     eb0:	c4 0f       	add	r28, r20
     eb2:	d5 1f       	adc	r29, r21
     eb4:	ec 17       	cp	r30, r28
     eb6:	fd 07       	cpc	r31, r29
     eb8:	61 f4       	brne	.+24     	; 0xed2 <free+0xbe>
     eba:	80 81       	ld	r24, Z
     ebc:	91 81       	ldd	r25, Z+1	; 0x01
     ebe:	84 0f       	add	r24, r20
     ec0:	95 1f       	adc	r25, r21
     ec2:	02 96       	adiw	r24, 0x02	; 2
     ec4:	e9 01       	movw	r28, r18
     ec6:	99 83       	std	Y+1, r25	; 0x01
     ec8:	88 83       	st	Y, r24
     eca:	82 81       	ldd	r24, Z+2	; 0x02
     ecc:	93 81       	ldd	r25, Z+3	; 0x03
     ece:	9b 83       	std	Y+3, r25	; 0x03
     ed0:	8a 83       	std	Y+2, r24	; 0x02
     ed2:	e0 e0       	ldi	r30, 0x00	; 0
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	12 96       	adiw	r26, 0x02	; 2
     ed8:	8d 91       	ld	r24, X+
     eda:	9c 91       	ld	r25, X
     edc:	13 97       	sbiw	r26, 0x03	; 3
     ede:	00 97       	sbiw	r24, 0x00	; 0
     ee0:	19 f0       	breq	.+6      	; 0xee8 <free+0xd4>
     ee2:	fd 01       	movw	r30, r26
     ee4:	dc 01       	movw	r26, r24
     ee6:	f7 cf       	rjmp	.-18     	; 0xed6 <free+0xc2>
     ee8:	8d 91       	ld	r24, X+
     eea:	9c 91       	ld	r25, X
     eec:	11 97       	sbiw	r26, 0x01	; 1
     eee:	9d 01       	movw	r18, r26
     ef0:	2e 5f       	subi	r18, 0xFE	; 254
     ef2:	3f 4f       	sbci	r19, 0xFF	; 255
     ef4:	82 0f       	add	r24, r18
     ef6:	93 1f       	adc	r25, r19
     ef8:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <__brkval>
     efc:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <__brkval+0x1>
     f00:	28 17       	cp	r18, r24
     f02:	39 07       	cpc	r19, r25
     f04:	69 f4       	brne	.+26     	; 0xf20 <free+0x10c>
     f06:	30 97       	sbiw	r30, 0x00	; 0
     f08:	29 f4       	brne	.+10     	; 0xf14 <free+0x100>
     f0a:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <__flp+0x1>
     f0e:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <__flp>
     f12:	02 c0       	rjmp	.+4      	; 0xf18 <free+0x104>
     f14:	13 82       	std	Z+3, r1	; 0x03
     f16:	12 82       	std	Z+2, r1	; 0x02
     f18:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <__brkval+0x1>
     f1c:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <__brkval>
     f20:	df 91       	pop	r29
     f22:	cf 91       	pop	r28
     f24:	08 95       	ret

00000f26 <strnlen_P>:
     f26:	fc 01       	movw	r30, r24
     f28:	05 90       	lpm	r0, Z+
     f2a:	61 50       	subi	r22, 0x01	; 1
     f2c:	70 40       	sbci	r23, 0x00	; 0
     f2e:	01 10       	cpse	r0, r1
     f30:	d8 f7       	brcc	.-10     	; 0xf28 <strnlen_P+0x2>
     f32:	80 95       	com	r24
     f34:	90 95       	com	r25
     f36:	8e 0f       	add	r24, r30
     f38:	9f 1f       	adc	r25, r31
     f3a:	08 95       	ret

00000f3c <memset>:
     f3c:	dc 01       	movw	r26, r24
     f3e:	01 c0       	rjmp	.+2      	; 0xf42 <memset+0x6>
     f40:	6d 93       	st	X+, r22
     f42:	41 50       	subi	r20, 0x01	; 1
     f44:	50 40       	sbci	r21, 0x00	; 0
     f46:	e0 f7       	brcc	.-8      	; 0xf40 <memset+0x4>
     f48:	08 95       	ret

00000f4a <strnlen>:
     f4a:	fc 01       	movw	r30, r24
     f4c:	61 50       	subi	r22, 0x01	; 1
     f4e:	70 40       	sbci	r23, 0x00	; 0
     f50:	01 90       	ld	r0, Z+
     f52:	01 10       	cpse	r0, r1
     f54:	d8 f7       	brcc	.-10     	; 0xf4c <strnlen+0x2>
     f56:	80 95       	com	r24
     f58:	90 95       	com	r25
     f5a:	8e 0f       	add	r24, r30
     f5c:	9f 1f       	adc	r25, r31
     f5e:	08 95       	ret

00000f60 <fputc>:
     f60:	0f 93       	push	r16
     f62:	1f 93       	push	r17
     f64:	cf 93       	push	r28
     f66:	df 93       	push	r29
     f68:	fb 01       	movw	r30, r22
     f6a:	23 81       	ldd	r18, Z+3	; 0x03
     f6c:	21 fd       	sbrc	r18, 1
     f6e:	03 c0       	rjmp	.+6      	; 0xf76 <fputc+0x16>
     f70:	8f ef       	ldi	r24, 0xFF	; 255
     f72:	9f ef       	ldi	r25, 0xFF	; 255
     f74:	2c c0       	rjmp	.+88     	; 0xfce <fputc+0x6e>
     f76:	22 ff       	sbrs	r18, 2
     f78:	16 c0       	rjmp	.+44     	; 0xfa6 <fputc+0x46>
     f7a:	46 81       	ldd	r20, Z+6	; 0x06
     f7c:	57 81       	ldd	r21, Z+7	; 0x07
     f7e:	24 81       	ldd	r18, Z+4	; 0x04
     f80:	35 81       	ldd	r19, Z+5	; 0x05
     f82:	42 17       	cp	r20, r18
     f84:	53 07       	cpc	r21, r19
     f86:	44 f4       	brge	.+16     	; 0xf98 <fputc+0x38>
     f88:	a0 81       	ld	r26, Z
     f8a:	b1 81       	ldd	r27, Z+1	; 0x01
     f8c:	9d 01       	movw	r18, r26
     f8e:	2f 5f       	subi	r18, 0xFF	; 255
     f90:	3f 4f       	sbci	r19, 0xFF	; 255
     f92:	31 83       	std	Z+1, r19	; 0x01
     f94:	20 83       	st	Z, r18
     f96:	8c 93       	st	X, r24
     f98:	26 81       	ldd	r18, Z+6	; 0x06
     f9a:	37 81       	ldd	r19, Z+7	; 0x07
     f9c:	2f 5f       	subi	r18, 0xFF	; 255
     f9e:	3f 4f       	sbci	r19, 0xFF	; 255
     fa0:	37 83       	std	Z+7, r19	; 0x07
     fa2:	26 83       	std	Z+6, r18	; 0x06
     fa4:	14 c0       	rjmp	.+40     	; 0xfce <fputc+0x6e>
     fa6:	8b 01       	movw	r16, r22
     fa8:	ec 01       	movw	r28, r24
     faa:	fb 01       	movw	r30, r22
     fac:	00 84       	ldd	r0, Z+8	; 0x08
     fae:	f1 85       	ldd	r31, Z+9	; 0x09
     fb0:	e0 2d       	mov	r30, r0
     fb2:	09 95       	icall
     fb4:	89 2b       	or	r24, r25
     fb6:	e1 f6       	brne	.-72     	; 0xf70 <fputc+0x10>
     fb8:	d8 01       	movw	r26, r16
     fba:	16 96       	adiw	r26, 0x06	; 6
     fbc:	8d 91       	ld	r24, X+
     fbe:	9c 91       	ld	r25, X
     fc0:	17 97       	sbiw	r26, 0x07	; 7
     fc2:	01 96       	adiw	r24, 0x01	; 1
     fc4:	17 96       	adiw	r26, 0x07	; 7
     fc6:	9c 93       	st	X, r25
     fc8:	8e 93       	st	-X, r24
     fca:	16 97       	sbiw	r26, 0x06	; 6
     fcc:	ce 01       	movw	r24, r28
     fce:	df 91       	pop	r29
     fd0:	cf 91       	pop	r28
     fd2:	1f 91       	pop	r17
     fd4:	0f 91       	pop	r16
     fd6:	08 95       	ret

00000fd8 <__ultoa_invert>:
     fd8:	fa 01       	movw	r30, r20
     fda:	aa 27       	eor	r26, r26
     fdc:	28 30       	cpi	r18, 0x08	; 8
     fde:	51 f1       	breq	.+84     	; 0x1034 <__ultoa_invert+0x5c>
     fe0:	20 31       	cpi	r18, 0x10	; 16
     fe2:	81 f1       	breq	.+96     	; 0x1044 <__ultoa_invert+0x6c>
     fe4:	e8 94       	clt
     fe6:	6f 93       	push	r22
     fe8:	6e 7f       	andi	r22, 0xFE	; 254
     fea:	6e 5f       	subi	r22, 0xFE	; 254
     fec:	7f 4f       	sbci	r23, 0xFF	; 255
     fee:	8f 4f       	sbci	r24, 0xFF	; 255
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	af 4f       	sbci	r26, 0xFF	; 255
     ff4:	b1 e0       	ldi	r27, 0x01	; 1
     ff6:	3e d0       	rcall	.+124    	; 0x1074 <__ultoa_invert+0x9c>
     ff8:	b4 e0       	ldi	r27, 0x04	; 4
     ffa:	3c d0       	rcall	.+120    	; 0x1074 <__ultoa_invert+0x9c>
     ffc:	67 0f       	add	r22, r23
     ffe:	78 1f       	adc	r23, r24
    1000:	89 1f       	adc	r24, r25
    1002:	9a 1f       	adc	r25, r26
    1004:	a1 1d       	adc	r26, r1
    1006:	68 0f       	add	r22, r24
    1008:	79 1f       	adc	r23, r25
    100a:	8a 1f       	adc	r24, r26
    100c:	91 1d       	adc	r25, r1
    100e:	a1 1d       	adc	r26, r1
    1010:	6a 0f       	add	r22, r26
    1012:	71 1d       	adc	r23, r1
    1014:	81 1d       	adc	r24, r1
    1016:	91 1d       	adc	r25, r1
    1018:	a1 1d       	adc	r26, r1
    101a:	20 d0       	rcall	.+64     	; 0x105c <__ultoa_invert+0x84>
    101c:	09 f4       	brne	.+2      	; 0x1020 <__ultoa_invert+0x48>
    101e:	68 94       	set
    1020:	3f 91       	pop	r19
    1022:	2a e0       	ldi	r18, 0x0A	; 10
    1024:	26 9f       	mul	r18, r22
    1026:	11 24       	eor	r1, r1
    1028:	30 19       	sub	r19, r0
    102a:	30 5d       	subi	r19, 0xD0	; 208
    102c:	31 93       	st	Z+, r19
    102e:	de f6       	brtc	.-74     	; 0xfe6 <__ultoa_invert+0xe>
    1030:	cf 01       	movw	r24, r30
    1032:	08 95       	ret
    1034:	46 2f       	mov	r20, r22
    1036:	47 70       	andi	r20, 0x07	; 7
    1038:	40 5d       	subi	r20, 0xD0	; 208
    103a:	41 93       	st	Z+, r20
    103c:	b3 e0       	ldi	r27, 0x03	; 3
    103e:	0f d0       	rcall	.+30     	; 0x105e <__ultoa_invert+0x86>
    1040:	c9 f7       	brne	.-14     	; 0x1034 <__ultoa_invert+0x5c>
    1042:	f6 cf       	rjmp	.-20     	; 0x1030 <__ultoa_invert+0x58>
    1044:	46 2f       	mov	r20, r22
    1046:	4f 70       	andi	r20, 0x0F	; 15
    1048:	40 5d       	subi	r20, 0xD0	; 208
    104a:	4a 33       	cpi	r20, 0x3A	; 58
    104c:	18 f0       	brcs	.+6      	; 0x1054 <__ultoa_invert+0x7c>
    104e:	49 5d       	subi	r20, 0xD9	; 217
    1050:	31 fd       	sbrc	r19, 1
    1052:	40 52       	subi	r20, 0x20	; 32
    1054:	41 93       	st	Z+, r20
    1056:	02 d0       	rcall	.+4      	; 0x105c <__ultoa_invert+0x84>
    1058:	a9 f7       	brne	.-22     	; 0x1044 <__ultoa_invert+0x6c>
    105a:	ea cf       	rjmp	.-44     	; 0x1030 <__ultoa_invert+0x58>
    105c:	b4 e0       	ldi	r27, 0x04	; 4
    105e:	a6 95       	lsr	r26
    1060:	97 95       	ror	r25
    1062:	87 95       	ror	r24
    1064:	77 95       	ror	r23
    1066:	67 95       	ror	r22
    1068:	ba 95       	dec	r27
    106a:	c9 f7       	brne	.-14     	; 0x105e <__ultoa_invert+0x86>
    106c:	00 97       	sbiw	r24, 0x00	; 0
    106e:	61 05       	cpc	r22, r1
    1070:	71 05       	cpc	r23, r1
    1072:	08 95       	ret
    1074:	9b 01       	movw	r18, r22
    1076:	ac 01       	movw	r20, r24
    1078:	0a 2e       	mov	r0, r26
    107a:	06 94       	lsr	r0
    107c:	57 95       	ror	r21
    107e:	47 95       	ror	r20
    1080:	37 95       	ror	r19
    1082:	27 95       	ror	r18
    1084:	ba 95       	dec	r27
    1086:	c9 f7       	brne	.-14     	; 0x107a <__ultoa_invert+0xa2>
    1088:	62 0f       	add	r22, r18
    108a:	73 1f       	adc	r23, r19
    108c:	84 1f       	adc	r24, r20
    108e:	95 1f       	adc	r25, r21
    1090:	a0 1d       	adc	r26, r0
    1092:	08 95       	ret

00001094 <__prologue_saves__>:
    1094:	2f 92       	push	r2
    1096:	3f 92       	push	r3
    1098:	4f 92       	push	r4
    109a:	5f 92       	push	r5
    109c:	6f 92       	push	r6
    109e:	7f 92       	push	r7
    10a0:	8f 92       	push	r8
    10a2:	9f 92       	push	r9
    10a4:	af 92       	push	r10
    10a6:	bf 92       	push	r11
    10a8:	cf 92       	push	r12
    10aa:	df 92       	push	r13
    10ac:	ef 92       	push	r14
    10ae:	ff 92       	push	r15
    10b0:	0f 93       	push	r16
    10b2:	1f 93       	push	r17
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	cd b7       	in	r28, 0x3d	; 61
    10ba:	de b7       	in	r29, 0x3e	; 62
    10bc:	ca 1b       	sub	r28, r26
    10be:	db 0b       	sbc	r29, r27
    10c0:	0f b6       	in	r0, 0x3f	; 63
    10c2:	f8 94       	cli
    10c4:	de bf       	out	0x3e, r29	; 62
    10c6:	0f be       	out	0x3f, r0	; 63
    10c8:	cd bf       	out	0x3d, r28	; 61
    10ca:	09 94       	ijmp

000010cc <__epilogue_restores__>:
    10cc:	2a 88       	ldd	r2, Y+18	; 0x12
    10ce:	39 88       	ldd	r3, Y+17	; 0x11
    10d0:	48 88       	ldd	r4, Y+16	; 0x10
    10d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    10d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    10d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    10d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    10da:	9b 84       	ldd	r9, Y+11	; 0x0b
    10dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    10de:	b9 84       	ldd	r11, Y+9	; 0x09
    10e0:	c8 84       	ldd	r12, Y+8	; 0x08
    10e2:	df 80       	ldd	r13, Y+7	; 0x07
    10e4:	ee 80       	ldd	r14, Y+6	; 0x06
    10e6:	fd 80       	ldd	r15, Y+5	; 0x05
    10e8:	0c 81       	ldd	r16, Y+4	; 0x04
    10ea:	1b 81       	ldd	r17, Y+3	; 0x03
    10ec:	aa 81       	ldd	r26, Y+2	; 0x02
    10ee:	b9 81       	ldd	r27, Y+1	; 0x01
    10f0:	ce 0f       	add	r28, r30
    10f2:	d1 1d       	adc	r29, r1
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	ed 01       	movw	r28, r26
    1100:	08 95       	ret

00001102 <_exit>:
    1102:	f8 94       	cli

00001104 <__stop_program>:
    1104:	ff cf       	rjmp	.-2      	; 0x1104 <__stop_program>
