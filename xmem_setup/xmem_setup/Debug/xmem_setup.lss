
xmem_setup.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  00000c6c  00000d00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080017e  0080017e  00000d7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ddc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b14  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b3  00000000  00000000  000019b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000541  00000000  00000000  00002267  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  000027a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000484  00000000  00000000  00002898  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020c  00000000  00000000  00002d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002f28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e6       	ldi	r30, 0x6C	; 108
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 37       	cpi	r26, 0x7E	; 126
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ae e7       	ldi	r26, 0x7E	; 126
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 38       	cpi	r26, 0x88	; 136
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 34 06 	jmp	0xc68	; 0xc68 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:


    
int main(void)
{
	USART_Init( MYUBRR );
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 73 00 	call	0xe6	; 0xe6 <USART_Init>
	
	xmem_init();
  b6:	0e 94 80 00 	call	0x100	; 0x100 <xmem_init>
	SRAM_test();
  ba:	0e 94 87 00 	call	0x10e	; 0x10e <SRAM_test>

    while (1) 
    { 
		SRAM_test();
  be:	0e 94 87 00 	call	0x10e	; 0x10e <SRAM_test>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	2f ef       	ldi	r18, 0xFF	; 255
  c4:	8f ef       	ldi	r24, 0xFF	; 255
  c6:	9e e0       	ldi	r25, 0x0E	; 14
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x1a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x24>
  d2:	00 00       	nop
  d4:	f4 cf       	rjmp	.-24     	; 0xbe <main+0x10>

000000d6 <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
  d6:	5d 9b       	sbis	0x0b, 5	; 11
  d8:	fe cf       	rjmp	.-4      	; 0xd6 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
  da:	8c b9       	out	0x0c, r24	; 12
  dc:	08 95       	ret

000000de <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
  de:	5f 9b       	sbis	0x0b, 7	; 11
  e0:	fe cf       	rjmp	.-4      	; 0xde <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
  e2:	8c b1       	in	r24, 0x0c	; 12
}
  e4:	08 95       	ret

000000e6 <USART_Init>:


void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
  e6:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
  e8:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  ea:	88 e1       	ldi	r24, 0x18	; 24
  ec:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
  ee:	8e e8       	ldi	r24, 0x8E	; 142
  f0:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_Transmit, USART_Receive);
  f2:	6f e6       	ldi	r22, 0x6F	; 111
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	8b e6       	ldi	r24, 0x6B	; 107
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 34 01 	call	0x268	; 0x268 <fdevopen>
  fe:	08 95       	ret

00000100 <xmem_init>:

uint8_t xmem_read ( uint16_t addr ){
	volatile char * ext_mem = ( char *) BASE_ADDRESS ;
	uint8_t ret_val = ext_mem [ addr ];
	return ret_val ;
}
 100:	85 b7       	in	r24, 0x35	; 53
 102:	80 68       	ori	r24, 0x80	; 128
 104:	85 bf       	out	0x35, r24	; 53
 106:	80 b7       	in	r24, 0x30	; 48
 108:	80 62       	ori	r24, 0x20	; 32
 10a:	80 bf       	out	0x30, r24	; 48
 10c:	08 95       	ret

0000010e <SRAM_test>:

void SRAM_test(void)
{
 10e:	ef 92       	push	r14
 110:	ff 92       	push	r15
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\r\n");
 11a:	8a e0       	ldi	r24, 0x0A	; 10
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	0e 94 95 01 	call	0x32a	; 0x32a <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 122:	0e 94 24 01 	call	0x248	; 0x248 <rand>
 126:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 128:	0e 94 29 01 	call	0x252	; 0x252 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12c:	c0 e0       	ldi	r28, 0x00	; 0
 12e:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 130:	00 e0       	ldi	r16, 0x00	; 0
 132:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 134:	0b c0       	rjmp	.+22     	; 0x14c <SRAM_test+0x3e>
		uint8_t some_value = rand();
 136:	0e 94 24 01 	call	0x248	; 0x248 <rand>
		ext_ram[i] = some_value;
 13a:	fe 01       	movw	r30, r28
 13c:	f8 5e       	subi	r31, 0xE8	; 232
 13e:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 140:	90 81       	ld	r25, Z
		if (retreived_value != some_value) {
 142:	89 17       	cp	r24, r25
 144:	11 f0       	breq	.+4      	; 0x14a <SRAM_test+0x3c>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			write_errors++;
 146:	0f 5f       	subi	r16, 0xFF	; 255
 148:	1f 4f       	sbci	r17, 0xFF	; 255
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 14a:	21 96       	adiw	r28, 0x01	; 1
 14c:	c1 15       	cp	r28, r1
 14e:	88 e0       	ldi	r24, 0x08	; 8
 150:	d8 07       	cpc	r29, r24
 152:	88 f3       	brcs	.-30     	; 0x136 <SRAM_test+0x28>
			//printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 154:	c7 01       	movw	r24, r14
 156:	0e 94 29 01 	call	0x252	; 0x252 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 15a:	c0 e0       	ldi	r28, 0x00	; 0
 15c:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 15e:	e1 2c       	mov	r14, r1
 160:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 162:	0b c0       	rjmp	.+22     	; 0x17a <SRAM_test+0x6c>
		uint8_t some_value = rand();
 164:	0e 94 24 01 	call	0x248	; 0x248 <rand>
		uint8_t retreived_value = ext_ram[i];
 168:	fe 01       	movw	r30, r28
 16a:	f8 5e       	subi	r31, 0xE8	; 232
 16c:	90 81       	ld	r25, Z
		if (retreived_value != some_value) {
 16e:	89 17       	cp	r24, r25
 170:	19 f0       	breq	.+6      	; 0x178 <SRAM_test+0x6a>
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			retrieval_errors++;
 172:	8f ef       	ldi	r24, 0xFF	; 255
 174:	e8 1a       	sub	r14, r24
 176:	f8 0a       	sbc	r15, r24
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 178:	21 96       	adiw	r28, 0x01	; 1
 17a:	c1 15       	cp	r28, r1
 17c:	88 e0       	ldi	r24, 0x08	; 8
 17e:	d8 07       	cpc	r29, r24
 180:	88 f3       	brcs	.-30     	; 0x164 <SRAM_test+0x56>
		if (retreived_value != some_value) {
			//printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\r\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \r\n%4d errors in write phase and \r\n%4d errors in retrieval phase\r\n\r\n", write_errors, retrieval_errors);
 182:	ff 92       	push	r15
 184:	ef 92       	push	r14
 186:	1f 93       	push	r17
 188:	0f 93       	push	r16
 18a:	81 e2       	ldi	r24, 0x21	; 33
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	9f 93       	push	r25
 190:	8f 93       	push	r24
 192:	0e 94 7f 01 	call	0x2fe	; 0x2fe <printf>
}
 196:	0f 90       	pop	r0
 198:	0f 90       	pop	r0
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	1f 91       	pop	r17
 1a8:	0f 91       	pop	r16
 1aa:	ff 90       	pop	r15
 1ac:	ef 90       	pop	r14
 1ae:	08 95       	ret

000001b0 <do_rand>:
 1b0:	8f 92       	push	r8
 1b2:	9f 92       	push	r9
 1b4:	af 92       	push	r10
 1b6:	bf 92       	push	r11
 1b8:	cf 92       	push	r12
 1ba:	df 92       	push	r13
 1bc:	ef 92       	push	r14
 1be:	ff 92       	push	r15
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	ec 01       	movw	r28, r24
 1c6:	68 81       	ld	r22, Y
 1c8:	79 81       	ldd	r23, Y+1	; 0x01
 1ca:	8a 81       	ldd	r24, Y+2	; 0x02
 1cc:	9b 81       	ldd	r25, Y+3	; 0x03
 1ce:	61 15       	cp	r22, r1
 1d0:	71 05       	cpc	r23, r1
 1d2:	81 05       	cpc	r24, r1
 1d4:	91 05       	cpc	r25, r1
 1d6:	21 f4       	brne	.+8      	; 0x1e0 <do_rand+0x30>
 1d8:	64 e2       	ldi	r22, 0x24	; 36
 1da:	79 ed       	ldi	r23, 0xD9	; 217
 1dc:	8b e5       	ldi	r24, 0x5B	; 91
 1de:	97 e0       	ldi	r25, 0x07	; 7
 1e0:	2d e1       	ldi	r18, 0x1D	; 29
 1e2:	33 ef       	ldi	r19, 0xF3	; 243
 1e4:	41 e0       	ldi	r20, 0x01	; 1
 1e6:	50 e0       	ldi	r21, 0x00	; 0
 1e8:	0e 94 9a 05 	call	0xb34	; 0xb34 <__divmodsi4>
 1ec:	49 01       	movw	r8, r18
 1ee:	5a 01       	movw	r10, r20
 1f0:	9b 01       	movw	r18, r22
 1f2:	ac 01       	movw	r20, r24
 1f4:	a7 ea       	ldi	r26, 0xA7	; 167
 1f6:	b1 e4       	ldi	r27, 0x41	; 65
 1f8:	0e 94 b9 05 	call	0xb72	; 0xb72 <__muluhisi3>
 1fc:	6b 01       	movw	r12, r22
 1fe:	7c 01       	movw	r14, r24
 200:	ac ee       	ldi	r26, 0xEC	; 236
 202:	b4 ef       	ldi	r27, 0xF4	; 244
 204:	a5 01       	movw	r20, r10
 206:	94 01       	movw	r18, r8
 208:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__mulohisi3>
 20c:	dc 01       	movw	r26, r24
 20e:	cb 01       	movw	r24, r22
 210:	8c 0d       	add	r24, r12
 212:	9d 1d       	adc	r25, r13
 214:	ae 1d       	adc	r26, r14
 216:	bf 1d       	adc	r27, r15
 218:	b7 ff       	sbrs	r27, 7
 21a:	03 c0       	rjmp	.+6      	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	a1 09       	sbc	r26, r1
 220:	b0 48       	sbci	r27, 0x80	; 128
 222:	88 83       	st	Y, r24
 224:	99 83       	std	Y+1, r25	; 0x01
 226:	aa 83       	std	Y+2, r26	; 0x02
 228:	bb 83       	std	Y+3, r27	; 0x03
 22a:	9f 77       	andi	r25, 0x7F	; 127
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	ff 90       	pop	r15
 232:	ef 90       	pop	r14
 234:	df 90       	pop	r13
 236:	cf 90       	pop	r12
 238:	bf 90       	pop	r11
 23a:	af 90       	pop	r10
 23c:	9f 90       	pop	r9
 23e:	8f 90       	pop	r8
 240:	08 95       	ret

00000242 <rand_r>:
 242:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <do_rand>
 246:	08 95       	ret

00000248 <rand>:
 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <do_rand>
 250:	08 95       	ret

00000252 <srand>:
 252:	a0 e0       	ldi	r26, 0x00	; 0
 254:	b0 e0       	ldi	r27, 0x00	; 0
 256:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 25a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 25e:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 262:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 266:	08 95       	ret

00000268 <fdevopen>:
 268:	0f 93       	push	r16
 26a:	1f 93       	push	r17
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	00 97       	sbiw	r24, 0x00	; 0
 272:	31 f4       	brne	.+12     	; 0x280 <fdevopen+0x18>
 274:	61 15       	cp	r22, r1
 276:	71 05       	cpc	r23, r1
 278:	19 f4       	brne	.+6      	; 0x280 <fdevopen+0x18>
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	3a c0       	rjmp	.+116    	; 0x2f4 <fdevopen+0x8c>
 280:	8b 01       	movw	r16, r22
 282:	ec 01       	movw	r28, r24
 284:	6e e0       	ldi	r22, 0x0E	; 14
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 a6 03 	call	0x74c	; 0x74c <calloc>
 290:	fc 01       	movw	r30, r24
 292:	89 2b       	or	r24, r25
 294:	91 f3       	breq	.-28     	; 0x27a <fdevopen+0x12>
 296:	80 e8       	ldi	r24, 0x80	; 128
 298:	83 83       	std	Z+3, r24	; 0x03
 29a:	01 15       	cp	r16, r1
 29c:	11 05       	cpc	r17, r1
 29e:	71 f0       	breq	.+28     	; 0x2bc <fdevopen+0x54>
 2a0:	13 87       	std	Z+11, r17	; 0x0b
 2a2:	02 87       	std	Z+10, r16	; 0x0a
 2a4:	81 e8       	ldi	r24, 0x81	; 129
 2a6:	83 83       	std	Z+3, r24	; 0x03
 2a8:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end>
 2ac:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x1>
 2b0:	89 2b       	or	r24, r25
 2b2:	21 f4       	brne	.+8      	; 0x2bc <fdevopen+0x54>
 2b4:	f0 93 7f 01 	sts	0x017F, r31	; 0x80017f <__data_end+0x1>
 2b8:	e0 93 7e 01 	sts	0x017E, r30	; 0x80017e <__data_end>
 2bc:	20 97       	sbiw	r28, 0x00	; 0
 2be:	c9 f0       	breq	.+50     	; 0x2f2 <fdevopen+0x8a>
 2c0:	d1 87       	std	Z+9, r29	; 0x09
 2c2:	c0 87       	std	Z+8, r28	; 0x08
 2c4:	83 81       	ldd	r24, Z+3	; 0x03
 2c6:	82 60       	ori	r24, 0x02	; 2
 2c8:	83 83       	std	Z+3, r24	; 0x03
 2ca:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end+0x2>
 2ce:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <__data_end+0x3>
 2d2:	89 2b       	or	r24, r25
 2d4:	71 f4       	brne	.+28     	; 0x2f2 <fdevopen+0x8a>
 2d6:	f0 93 81 01 	sts	0x0181, r31	; 0x800181 <__data_end+0x3>
 2da:	e0 93 80 01 	sts	0x0180, r30	; 0x800180 <__data_end+0x2>
 2de:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <__data_end+0x4>
 2e2:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <__data_end+0x5>
 2e6:	89 2b       	or	r24, r25
 2e8:	21 f4       	brne	.+8      	; 0x2f2 <fdevopen+0x8a>
 2ea:	f0 93 83 01 	sts	0x0183, r31	; 0x800183 <__data_end+0x5>
 2ee:	e0 93 82 01 	sts	0x0182, r30	; 0x800182 <__data_end+0x4>
 2f2:	cf 01       	movw	r24, r30
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	1f 91       	pop	r17
 2fa:	0f 91       	pop	r16
 2fc:	08 95       	ret

000002fe <printf>:
 2fe:	a0 e0       	ldi	r26, 0x00	; 0
 300:	b0 e0       	ldi	r27, 0x00	; 0
 302:	e5 e8       	ldi	r30, 0x85	; 133
 304:	f1 e0       	ldi	r31, 0x01	; 1
 306:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <__prologue_saves__+0x20>
 30a:	ae 01       	movw	r20, r28
 30c:	4b 5f       	subi	r20, 0xFB	; 251
 30e:	5f 4f       	sbci	r21, 0xFF	; 255
 310:	fa 01       	movw	r30, r20
 312:	61 91       	ld	r22, Z+
 314:	71 91       	ld	r23, Z+
 316:	af 01       	movw	r20, r30
 318:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end+0x2>
 31c:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <__data_end+0x3>
 320:	0e 94 c5 01 	call	0x38a	; 0x38a <vfprintf>
 324:	e2 e0       	ldi	r30, 0x02	; 2
 326:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__epilogue_restores__+0x20>

0000032a <puts>:
 32a:	0f 93       	push	r16
 32c:	1f 93       	push	r17
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <__data_end+0x2>
 336:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <__data_end+0x3>
 33a:	23 81       	ldd	r18, Z+3	; 0x03
 33c:	21 ff       	sbrs	r18, 1
 33e:	1b c0       	rjmp	.+54     	; 0x376 <puts+0x4c>
 340:	8c 01       	movw	r16, r24
 342:	d0 e0       	ldi	r29, 0x00	; 0
 344:	c0 e0       	ldi	r28, 0x00	; 0
 346:	f8 01       	movw	r30, r16
 348:	81 91       	ld	r24, Z+
 34a:	8f 01       	movw	r16, r30
 34c:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <__data_end+0x2>
 350:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <__data_end+0x3>
 354:	db 01       	movw	r26, r22
 356:	18 96       	adiw	r26, 0x08	; 8
 358:	ed 91       	ld	r30, X+
 35a:	fc 91       	ld	r31, X
 35c:	19 97       	sbiw	r26, 0x09	; 9
 35e:	88 23       	and	r24, r24
 360:	31 f0       	breq	.+12     	; 0x36e <puts+0x44>
 362:	09 95       	icall
 364:	89 2b       	or	r24, r25
 366:	79 f3       	breq	.-34     	; 0x346 <puts+0x1c>
 368:	df ef       	ldi	r29, 0xFF	; 255
 36a:	cf ef       	ldi	r28, 0xFF	; 255
 36c:	ec cf       	rjmp	.-40     	; 0x346 <puts+0x1c>
 36e:	8a e0       	ldi	r24, 0x0A	; 10
 370:	09 95       	icall
 372:	89 2b       	or	r24, r25
 374:	19 f0       	breq	.+6      	; 0x37c <puts+0x52>
 376:	8f ef       	ldi	r24, 0xFF	; 255
 378:	9f ef       	ldi	r25, 0xFF	; 255
 37a:	02 c0       	rjmp	.+4      	; 0x380 <puts+0x56>
 37c:	8d 2f       	mov	r24, r29
 37e:	9c 2f       	mov	r25, r28
 380:	df 91       	pop	r29
 382:	cf 91       	pop	r28
 384:	1f 91       	pop	r17
 386:	0f 91       	pop	r16
 388:	08 95       	ret

0000038a <vfprintf>:
 38a:	ab e0       	ldi	r26, 0x0B	; 11
 38c:	b0 e0       	ldi	r27, 0x00	; 0
 38e:	eb ec       	ldi	r30, 0xCB	; 203
 390:	f1 e0       	ldi	r31, 0x01	; 1
 392:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__prologue_saves__>
 396:	6c 01       	movw	r12, r24
 398:	7b 01       	movw	r14, r22
 39a:	8a 01       	movw	r16, r20
 39c:	fc 01       	movw	r30, r24
 39e:	17 82       	std	Z+7, r1	; 0x07
 3a0:	16 82       	std	Z+6, r1	; 0x06
 3a2:	83 81       	ldd	r24, Z+3	; 0x03
 3a4:	81 ff       	sbrs	r24, 1
 3a6:	cc c1       	rjmp	.+920    	; 0x740 <__stack+0x241>
 3a8:	ce 01       	movw	r24, r28
 3aa:	01 96       	adiw	r24, 0x01	; 1
 3ac:	3c 01       	movw	r6, r24
 3ae:	f6 01       	movw	r30, r12
 3b0:	93 81       	ldd	r25, Z+3	; 0x03
 3b2:	f7 01       	movw	r30, r14
 3b4:	93 fd       	sbrc	r25, 3
 3b6:	85 91       	lpm	r24, Z+
 3b8:	93 ff       	sbrs	r25, 3
 3ba:	81 91       	ld	r24, Z+
 3bc:	7f 01       	movw	r14, r30
 3be:	88 23       	and	r24, r24
 3c0:	09 f4       	brne	.+2      	; 0x3c4 <vfprintf+0x3a>
 3c2:	ba c1       	rjmp	.+884    	; 0x738 <__stack+0x239>
 3c4:	85 32       	cpi	r24, 0x25	; 37
 3c6:	39 f4       	brne	.+14     	; 0x3d6 <vfprintf+0x4c>
 3c8:	93 fd       	sbrc	r25, 3
 3ca:	85 91       	lpm	r24, Z+
 3cc:	93 ff       	sbrs	r25, 3
 3ce:	81 91       	ld	r24, Z+
 3d0:	7f 01       	movw	r14, r30
 3d2:	85 32       	cpi	r24, 0x25	; 37
 3d4:	29 f4       	brne	.+10     	; 0x3e0 <vfprintf+0x56>
 3d6:	b6 01       	movw	r22, r12
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 3de:	e7 cf       	rjmp	.-50     	; 0x3ae <vfprintf+0x24>
 3e0:	91 2c       	mov	r9, r1
 3e2:	21 2c       	mov	r2, r1
 3e4:	31 2c       	mov	r3, r1
 3e6:	ff e1       	ldi	r31, 0x1F	; 31
 3e8:	f3 15       	cp	r31, r3
 3ea:	d8 f0       	brcs	.+54     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 3ec:	8b 32       	cpi	r24, 0x2B	; 43
 3ee:	79 f0       	breq	.+30     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 3f0:	38 f4       	brcc	.+14     	; 0x400 <__DATA_REGION_LENGTH__>
 3f2:	80 32       	cpi	r24, 0x20	; 32
 3f4:	79 f0       	breq	.+30     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 3f6:	83 32       	cpi	r24, 0x23	; 35
 3f8:	a1 f4       	brne	.+40     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 3fa:	23 2d       	mov	r18, r3
 3fc:	20 61       	ori	r18, 0x10	; 16
 3fe:	1d c0       	rjmp	.+58     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 400:	8d 32       	cpi	r24, 0x2D	; 45
 402:	61 f0       	breq	.+24     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 404:	80 33       	cpi	r24, 0x30	; 48
 406:	69 f4       	brne	.+26     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 408:	23 2d       	mov	r18, r3
 40a:	21 60       	ori	r18, 0x01	; 1
 40c:	16 c0       	rjmp	.+44     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 40e:	83 2d       	mov	r24, r3
 410:	82 60       	ori	r24, 0x02	; 2
 412:	38 2e       	mov	r3, r24
 414:	e3 2d       	mov	r30, r3
 416:	e4 60       	ori	r30, 0x04	; 4
 418:	3e 2e       	mov	r3, r30
 41a:	2a c0       	rjmp	.+84     	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 41c:	f3 2d       	mov	r31, r3
 41e:	f8 60       	ori	r31, 0x08	; 8
 420:	1d c0       	rjmp	.+58     	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
 422:	37 fc       	sbrc	r3, 7
 424:	2d c0       	rjmp	.+90     	; 0x480 <__DATA_REGION_LENGTH__+0x80>
 426:	20 ed       	ldi	r18, 0xD0	; 208
 428:	28 0f       	add	r18, r24
 42a:	2a 30       	cpi	r18, 0x0A	; 10
 42c:	40 f0       	brcs	.+16     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 42e:	8e 32       	cpi	r24, 0x2E	; 46
 430:	b9 f4       	brne	.+46     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 432:	36 fc       	sbrc	r3, 6
 434:	81 c1       	rjmp	.+770    	; 0x738 <__stack+0x239>
 436:	23 2d       	mov	r18, r3
 438:	20 64       	ori	r18, 0x40	; 64
 43a:	32 2e       	mov	r3, r18
 43c:	19 c0       	rjmp	.+50     	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 43e:	36 fe       	sbrs	r3, 6
 440:	06 c0       	rjmp	.+12     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 442:	8a e0       	ldi	r24, 0x0A	; 10
 444:	98 9e       	mul	r9, r24
 446:	20 0d       	add	r18, r0
 448:	11 24       	eor	r1, r1
 44a:	92 2e       	mov	r9, r18
 44c:	11 c0       	rjmp	.+34     	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 44e:	ea e0       	ldi	r30, 0x0A	; 10
 450:	2e 9e       	mul	r2, r30
 452:	20 0d       	add	r18, r0
 454:	11 24       	eor	r1, r1
 456:	22 2e       	mov	r2, r18
 458:	f3 2d       	mov	r31, r3
 45a:	f0 62       	ori	r31, 0x20	; 32
 45c:	3f 2e       	mov	r3, r31
 45e:	08 c0       	rjmp	.+16     	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 460:	8c 36       	cpi	r24, 0x6C	; 108
 462:	21 f4       	brne	.+8      	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 464:	83 2d       	mov	r24, r3
 466:	80 68       	ori	r24, 0x80	; 128
 468:	38 2e       	mov	r3, r24
 46a:	02 c0       	rjmp	.+4      	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 46c:	88 36       	cpi	r24, 0x68	; 104
 46e:	41 f4       	brne	.+16     	; 0x480 <__DATA_REGION_LENGTH__+0x80>
 470:	f7 01       	movw	r30, r14
 472:	93 fd       	sbrc	r25, 3
 474:	85 91       	lpm	r24, Z+
 476:	93 ff       	sbrs	r25, 3
 478:	81 91       	ld	r24, Z+
 47a:	7f 01       	movw	r14, r30
 47c:	81 11       	cpse	r24, r1
 47e:	b3 cf       	rjmp	.-154    	; 0x3e6 <vfprintf+0x5c>
 480:	98 2f       	mov	r25, r24
 482:	9f 7d       	andi	r25, 0xDF	; 223
 484:	95 54       	subi	r25, 0x45	; 69
 486:	93 30       	cpi	r25, 0x03	; 3
 488:	28 f4       	brcc	.+10     	; 0x494 <__DATA_REGION_LENGTH__+0x94>
 48a:	0c 5f       	subi	r16, 0xFC	; 252
 48c:	1f 4f       	sbci	r17, 0xFF	; 255
 48e:	9f e3       	ldi	r25, 0x3F	; 63
 490:	99 83       	std	Y+1, r25	; 0x01
 492:	0d c0       	rjmp	.+26     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 494:	83 36       	cpi	r24, 0x63	; 99
 496:	31 f0       	breq	.+12     	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
 498:	83 37       	cpi	r24, 0x73	; 115
 49a:	71 f0       	breq	.+28     	; 0x4b8 <__DATA_REGION_LENGTH__+0xb8>
 49c:	83 35       	cpi	r24, 0x53	; 83
 49e:	09 f0       	breq	.+2      	; 0x4a2 <__DATA_REGION_LENGTH__+0xa2>
 4a0:	59 c0       	rjmp	.+178    	; 0x554 <__stack+0x55>
 4a2:	21 c0       	rjmp	.+66     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4a4:	f8 01       	movw	r30, r16
 4a6:	80 81       	ld	r24, Z
 4a8:	89 83       	std	Y+1, r24	; 0x01
 4aa:	0e 5f       	subi	r16, 0xFE	; 254
 4ac:	1f 4f       	sbci	r17, 0xFF	; 255
 4ae:	88 24       	eor	r8, r8
 4b0:	83 94       	inc	r8
 4b2:	91 2c       	mov	r9, r1
 4b4:	53 01       	movw	r10, r6
 4b6:	13 c0       	rjmp	.+38     	; 0x4de <__DATA_REGION_LENGTH__+0xde>
 4b8:	28 01       	movw	r4, r16
 4ba:	f2 e0       	ldi	r31, 0x02	; 2
 4bc:	4f 0e       	add	r4, r31
 4be:	51 1c       	adc	r5, r1
 4c0:	f8 01       	movw	r30, r16
 4c2:	a0 80       	ld	r10, Z
 4c4:	b1 80       	ldd	r11, Z+1	; 0x01
 4c6:	36 fe       	sbrs	r3, 6
 4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
 4ca:	69 2d       	mov	r22, r9
 4cc:	70 e0       	ldi	r23, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__DATA_REGION_LENGTH__+0xd4>
 4d0:	6f ef       	ldi	r22, 0xFF	; 255
 4d2:	7f ef       	ldi	r23, 0xFF	; 255
 4d4:	c5 01       	movw	r24, r10
 4d6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <strnlen>
 4da:	4c 01       	movw	r8, r24
 4dc:	82 01       	movw	r16, r4
 4de:	f3 2d       	mov	r31, r3
 4e0:	ff 77       	andi	r31, 0x7F	; 127
 4e2:	3f 2e       	mov	r3, r31
 4e4:	16 c0       	rjmp	.+44     	; 0x512 <__stack+0x13>
 4e6:	28 01       	movw	r4, r16
 4e8:	22 e0       	ldi	r18, 0x02	; 2
 4ea:	42 0e       	add	r4, r18
 4ec:	51 1c       	adc	r5, r1
 4ee:	f8 01       	movw	r30, r16
 4f0:	a0 80       	ld	r10, Z
 4f2:	b1 80       	ldd	r11, Z+1	; 0x01
 4f4:	36 fe       	sbrs	r3, 6
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4f8:	69 2d       	mov	r22, r9
 4fa:	70 e0       	ldi	r23, 0x00	; 0
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <__stack+0x3>
 4fe:	6f ef       	ldi	r22, 0xFF	; 255
 500:	7f ef       	ldi	r23, 0xFF	; 255
 502:	c5 01       	movw	r24, r10
 504:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <strnlen_P>
 508:	4c 01       	movw	r8, r24
 50a:	f3 2d       	mov	r31, r3
 50c:	f0 68       	ori	r31, 0x80	; 128
 50e:	3f 2e       	mov	r3, r31
 510:	82 01       	movw	r16, r4
 512:	33 fc       	sbrc	r3, 3
 514:	1b c0       	rjmp	.+54     	; 0x54c <__stack+0x4d>
 516:	82 2d       	mov	r24, r2
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	88 16       	cp	r8, r24
 51c:	99 06       	cpc	r9, r25
 51e:	b0 f4       	brcc	.+44     	; 0x54c <__stack+0x4d>
 520:	b6 01       	movw	r22, r12
 522:	80 e2       	ldi	r24, 0x20	; 32
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 52a:	2a 94       	dec	r2
 52c:	f4 cf       	rjmp	.-24     	; 0x516 <__stack+0x17>
 52e:	f5 01       	movw	r30, r10
 530:	37 fc       	sbrc	r3, 7
 532:	85 91       	lpm	r24, Z+
 534:	37 fe       	sbrs	r3, 7
 536:	81 91       	ld	r24, Z+
 538:	5f 01       	movw	r10, r30
 53a:	b6 01       	movw	r22, r12
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 542:	21 10       	cpse	r2, r1
 544:	2a 94       	dec	r2
 546:	21 e0       	ldi	r18, 0x01	; 1
 548:	82 1a       	sub	r8, r18
 54a:	91 08       	sbc	r9, r1
 54c:	81 14       	cp	r8, r1
 54e:	91 04       	cpc	r9, r1
 550:	71 f7       	brne	.-36     	; 0x52e <__stack+0x2f>
 552:	e8 c0       	rjmp	.+464    	; 0x724 <__stack+0x225>
 554:	84 36       	cpi	r24, 0x64	; 100
 556:	11 f0       	breq	.+4      	; 0x55c <__stack+0x5d>
 558:	89 36       	cpi	r24, 0x69	; 105
 55a:	41 f5       	brne	.+80     	; 0x5ac <__stack+0xad>
 55c:	f8 01       	movw	r30, r16
 55e:	37 fe       	sbrs	r3, 7
 560:	07 c0       	rjmp	.+14     	; 0x570 <__stack+0x71>
 562:	60 81       	ld	r22, Z
 564:	71 81       	ldd	r23, Z+1	; 0x01
 566:	82 81       	ldd	r24, Z+2	; 0x02
 568:	93 81       	ldd	r25, Z+3	; 0x03
 56a:	0c 5f       	subi	r16, 0xFC	; 252
 56c:	1f 4f       	sbci	r17, 0xFF	; 255
 56e:	08 c0       	rjmp	.+16     	; 0x580 <__stack+0x81>
 570:	60 81       	ld	r22, Z
 572:	71 81       	ldd	r23, Z+1	; 0x01
 574:	07 2e       	mov	r0, r23
 576:	00 0c       	add	r0, r0
 578:	88 0b       	sbc	r24, r24
 57a:	99 0b       	sbc	r25, r25
 57c:	0e 5f       	subi	r16, 0xFE	; 254
 57e:	1f 4f       	sbci	r17, 0xFF	; 255
 580:	f3 2d       	mov	r31, r3
 582:	ff 76       	andi	r31, 0x6F	; 111
 584:	3f 2e       	mov	r3, r31
 586:	97 ff       	sbrs	r25, 7
 588:	09 c0       	rjmp	.+18     	; 0x59c <__stack+0x9d>
 58a:	90 95       	com	r25
 58c:	80 95       	com	r24
 58e:	70 95       	com	r23
 590:	61 95       	neg	r22
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	f0 68       	ori	r31, 0x80	; 128
 59a:	3f 2e       	mov	r3, r31
 59c:	2a e0       	ldi	r18, 0x0A	; 10
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	a3 01       	movw	r20, r6
 5a2:	0e 94 3c 05 	call	0xa78	; 0xa78 <__ultoa_invert>
 5a6:	88 2e       	mov	r8, r24
 5a8:	86 18       	sub	r8, r6
 5aa:	45 c0       	rjmp	.+138    	; 0x636 <__stack+0x137>
 5ac:	85 37       	cpi	r24, 0x75	; 117
 5ae:	31 f4       	brne	.+12     	; 0x5bc <__stack+0xbd>
 5b0:	23 2d       	mov	r18, r3
 5b2:	2f 7e       	andi	r18, 0xEF	; 239
 5b4:	b2 2e       	mov	r11, r18
 5b6:	2a e0       	ldi	r18, 0x0A	; 10
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	25 c0       	rjmp	.+74     	; 0x606 <__stack+0x107>
 5bc:	93 2d       	mov	r25, r3
 5be:	99 7f       	andi	r25, 0xF9	; 249
 5c0:	b9 2e       	mov	r11, r25
 5c2:	8f 36       	cpi	r24, 0x6F	; 111
 5c4:	c1 f0       	breq	.+48     	; 0x5f6 <__stack+0xf7>
 5c6:	18 f4       	brcc	.+6      	; 0x5ce <__stack+0xcf>
 5c8:	88 35       	cpi	r24, 0x58	; 88
 5ca:	79 f0       	breq	.+30     	; 0x5ea <__stack+0xeb>
 5cc:	b5 c0       	rjmp	.+362    	; 0x738 <__stack+0x239>
 5ce:	80 37       	cpi	r24, 0x70	; 112
 5d0:	19 f0       	breq	.+6      	; 0x5d8 <__stack+0xd9>
 5d2:	88 37       	cpi	r24, 0x78	; 120
 5d4:	21 f0       	breq	.+8      	; 0x5de <__stack+0xdf>
 5d6:	b0 c0       	rjmp	.+352    	; 0x738 <__stack+0x239>
 5d8:	e9 2f       	mov	r30, r25
 5da:	e0 61       	ori	r30, 0x10	; 16
 5dc:	be 2e       	mov	r11, r30
 5de:	b4 fe       	sbrs	r11, 4
 5e0:	0d c0       	rjmp	.+26     	; 0x5fc <__stack+0xfd>
 5e2:	fb 2d       	mov	r31, r11
 5e4:	f4 60       	ori	r31, 0x04	; 4
 5e6:	bf 2e       	mov	r11, r31
 5e8:	09 c0       	rjmp	.+18     	; 0x5fc <__stack+0xfd>
 5ea:	34 fe       	sbrs	r3, 4
 5ec:	0a c0       	rjmp	.+20     	; 0x602 <__stack+0x103>
 5ee:	29 2f       	mov	r18, r25
 5f0:	26 60       	ori	r18, 0x06	; 6
 5f2:	b2 2e       	mov	r11, r18
 5f4:	06 c0       	rjmp	.+12     	; 0x602 <__stack+0x103>
 5f6:	28 e0       	ldi	r18, 0x08	; 8
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	05 c0       	rjmp	.+10     	; 0x606 <__stack+0x107>
 5fc:	20 e1       	ldi	r18, 0x10	; 16
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	02 c0       	rjmp	.+4      	; 0x606 <__stack+0x107>
 602:	20 e1       	ldi	r18, 0x10	; 16
 604:	32 e0       	ldi	r19, 0x02	; 2
 606:	f8 01       	movw	r30, r16
 608:	b7 fe       	sbrs	r11, 7
 60a:	07 c0       	rjmp	.+14     	; 0x61a <__stack+0x11b>
 60c:	60 81       	ld	r22, Z
 60e:	71 81       	ldd	r23, Z+1	; 0x01
 610:	82 81       	ldd	r24, Z+2	; 0x02
 612:	93 81       	ldd	r25, Z+3	; 0x03
 614:	0c 5f       	subi	r16, 0xFC	; 252
 616:	1f 4f       	sbci	r17, 0xFF	; 255
 618:	06 c0       	rjmp	.+12     	; 0x626 <__stack+0x127>
 61a:	60 81       	ld	r22, Z
 61c:	71 81       	ldd	r23, Z+1	; 0x01
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 5f       	subi	r16, 0xFE	; 254
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	a3 01       	movw	r20, r6
 628:	0e 94 3c 05 	call	0xa78	; 0xa78 <__ultoa_invert>
 62c:	88 2e       	mov	r8, r24
 62e:	86 18       	sub	r8, r6
 630:	fb 2d       	mov	r31, r11
 632:	ff 77       	andi	r31, 0x7F	; 127
 634:	3f 2e       	mov	r3, r31
 636:	36 fe       	sbrs	r3, 6
 638:	0d c0       	rjmp	.+26     	; 0x654 <__stack+0x155>
 63a:	23 2d       	mov	r18, r3
 63c:	2e 7f       	andi	r18, 0xFE	; 254
 63e:	a2 2e       	mov	r10, r18
 640:	89 14       	cp	r8, r9
 642:	58 f4       	brcc	.+22     	; 0x65a <__stack+0x15b>
 644:	34 fe       	sbrs	r3, 4
 646:	0b c0       	rjmp	.+22     	; 0x65e <__stack+0x15f>
 648:	32 fc       	sbrc	r3, 2
 64a:	09 c0       	rjmp	.+18     	; 0x65e <__stack+0x15f>
 64c:	83 2d       	mov	r24, r3
 64e:	8e 7e       	andi	r24, 0xEE	; 238
 650:	a8 2e       	mov	r10, r24
 652:	05 c0       	rjmp	.+10     	; 0x65e <__stack+0x15f>
 654:	b8 2c       	mov	r11, r8
 656:	a3 2c       	mov	r10, r3
 658:	03 c0       	rjmp	.+6      	; 0x660 <__stack+0x161>
 65a:	b8 2c       	mov	r11, r8
 65c:	01 c0       	rjmp	.+2      	; 0x660 <__stack+0x161>
 65e:	b9 2c       	mov	r11, r9
 660:	a4 fe       	sbrs	r10, 4
 662:	0f c0       	rjmp	.+30     	; 0x682 <__stack+0x183>
 664:	fe 01       	movw	r30, r28
 666:	e8 0d       	add	r30, r8
 668:	f1 1d       	adc	r31, r1
 66a:	80 81       	ld	r24, Z
 66c:	80 33       	cpi	r24, 0x30	; 48
 66e:	21 f4       	brne	.+8      	; 0x678 <__stack+0x179>
 670:	9a 2d       	mov	r25, r10
 672:	99 7e       	andi	r25, 0xE9	; 233
 674:	a9 2e       	mov	r10, r25
 676:	09 c0       	rjmp	.+18     	; 0x68a <__stack+0x18b>
 678:	a2 fe       	sbrs	r10, 2
 67a:	06 c0       	rjmp	.+12     	; 0x688 <__stack+0x189>
 67c:	b3 94       	inc	r11
 67e:	b3 94       	inc	r11
 680:	04 c0       	rjmp	.+8      	; 0x68a <__stack+0x18b>
 682:	8a 2d       	mov	r24, r10
 684:	86 78       	andi	r24, 0x86	; 134
 686:	09 f0       	breq	.+2      	; 0x68a <__stack+0x18b>
 688:	b3 94       	inc	r11
 68a:	a3 fc       	sbrc	r10, 3
 68c:	11 c0       	rjmp	.+34     	; 0x6b0 <__stack+0x1b1>
 68e:	a0 fe       	sbrs	r10, 0
 690:	06 c0       	rjmp	.+12     	; 0x69e <__stack+0x19f>
 692:	b2 14       	cp	r11, r2
 694:	88 f4       	brcc	.+34     	; 0x6b8 <__stack+0x1b9>
 696:	28 0c       	add	r2, r8
 698:	92 2c       	mov	r9, r2
 69a:	9b 18       	sub	r9, r11
 69c:	0e c0       	rjmp	.+28     	; 0x6ba <__stack+0x1bb>
 69e:	b2 14       	cp	r11, r2
 6a0:	60 f4       	brcc	.+24     	; 0x6ba <__stack+0x1bb>
 6a2:	b6 01       	movw	r22, r12
 6a4:	80 e2       	ldi	r24, 0x20	; 32
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 6ac:	b3 94       	inc	r11
 6ae:	f7 cf       	rjmp	.-18     	; 0x69e <__stack+0x19f>
 6b0:	b2 14       	cp	r11, r2
 6b2:	18 f4       	brcc	.+6      	; 0x6ba <__stack+0x1bb>
 6b4:	2b 18       	sub	r2, r11
 6b6:	02 c0       	rjmp	.+4      	; 0x6bc <__stack+0x1bd>
 6b8:	98 2c       	mov	r9, r8
 6ba:	21 2c       	mov	r2, r1
 6bc:	a4 fe       	sbrs	r10, 4
 6be:	10 c0       	rjmp	.+32     	; 0x6e0 <__stack+0x1e1>
 6c0:	b6 01       	movw	r22, r12
 6c2:	80 e3       	ldi	r24, 0x30	; 48
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 6ca:	a2 fe       	sbrs	r10, 2
 6cc:	17 c0       	rjmp	.+46     	; 0x6fc <__stack+0x1fd>
 6ce:	a1 fc       	sbrc	r10, 1
 6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <__stack+0x1d9>
 6d2:	88 e7       	ldi	r24, 0x78	; 120
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__stack+0x1dd>
 6d8:	88 e5       	ldi	r24, 0x58	; 88
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	b6 01       	movw	r22, r12
 6de:	0c c0       	rjmp	.+24     	; 0x6f8 <__stack+0x1f9>
 6e0:	8a 2d       	mov	r24, r10
 6e2:	86 78       	andi	r24, 0x86	; 134
 6e4:	59 f0       	breq	.+22     	; 0x6fc <__stack+0x1fd>
 6e6:	a1 fe       	sbrs	r10, 1
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <__stack+0x1ef>
 6ea:	8b e2       	ldi	r24, 0x2B	; 43
 6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <__stack+0x1f1>
 6ee:	80 e2       	ldi	r24, 0x20	; 32
 6f0:	a7 fc       	sbrc	r10, 7
 6f2:	8d e2       	ldi	r24, 0x2D	; 45
 6f4:	b6 01       	movw	r22, r12
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 6fc:	89 14       	cp	r8, r9
 6fe:	38 f4       	brcc	.+14     	; 0x70e <__stack+0x20f>
 700:	b6 01       	movw	r22, r12
 702:	80 e3       	ldi	r24, 0x30	; 48
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 70a:	9a 94       	dec	r9
 70c:	f7 cf       	rjmp	.-18     	; 0x6fc <__stack+0x1fd>
 70e:	8a 94       	dec	r8
 710:	f3 01       	movw	r30, r6
 712:	e8 0d       	add	r30, r8
 714:	f1 1d       	adc	r31, r1
 716:	80 81       	ld	r24, Z
 718:	b6 01       	movw	r22, r12
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 720:	81 10       	cpse	r8, r1
 722:	f5 cf       	rjmp	.-22     	; 0x70e <__stack+0x20f>
 724:	22 20       	and	r2, r2
 726:	09 f4       	brne	.+2      	; 0x72a <__stack+0x22b>
 728:	42 ce       	rjmp	.-892    	; 0x3ae <vfprintf+0x24>
 72a:	b6 01       	movw	r22, r12
 72c:	80 e2       	ldi	r24, 0x20	; 32
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 00 05 	call	0xa00	; 0xa00 <fputc>
 734:	2a 94       	dec	r2
 736:	f6 cf       	rjmp	.-20     	; 0x724 <__stack+0x225>
 738:	f6 01       	movw	r30, r12
 73a:	86 81       	ldd	r24, Z+6	; 0x06
 73c:	97 81       	ldd	r25, Z+7	; 0x07
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__stack+0x245>
 740:	8f ef       	ldi	r24, 0xFF	; 255
 742:	9f ef       	ldi	r25, 0xFF	; 255
 744:	2b 96       	adiw	r28, 0x0b	; 11
 746:	e2 e1       	ldi	r30, 0x12	; 18
 748:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__epilogue_restores__>

0000074c <calloc>:
 74c:	0f 93       	push	r16
 74e:	1f 93       	push	r17
 750:	cf 93       	push	r28
 752:	df 93       	push	r29
 754:	86 9f       	mul	r24, r22
 756:	80 01       	movw	r16, r0
 758:	87 9f       	mul	r24, r23
 75a:	10 0d       	add	r17, r0
 75c:	96 9f       	mul	r25, r22
 75e:	10 0d       	add	r17, r0
 760:	11 24       	eor	r1, r1
 762:	c8 01       	movw	r24, r16
 764:	0e 94 c2 03 	call	0x784	; 0x784 <malloc>
 768:	ec 01       	movw	r28, r24
 76a:	00 97       	sbiw	r24, 0x00	; 0
 76c:	29 f0       	breq	.+10     	; 0x778 <calloc+0x2c>
 76e:	a8 01       	movw	r20, r16
 770:	60 e0       	ldi	r22, 0x00	; 0
 772:	70 e0       	ldi	r23, 0x00	; 0
 774:	0e 94 ee 04 	call	0x9dc	; 0x9dc <memset>
 778:	ce 01       	movw	r24, r28
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	1f 91       	pop	r17
 780:	0f 91       	pop	r16
 782:	08 95       	ret

00000784 <malloc>:
 784:	0f 93       	push	r16
 786:	1f 93       	push	r17
 788:	cf 93       	push	r28
 78a:	df 93       	push	r29
 78c:	82 30       	cpi	r24, 0x02	; 2
 78e:	91 05       	cpc	r25, r1
 790:	10 f4       	brcc	.+4      	; 0x796 <malloc+0x12>
 792:	82 e0       	ldi	r24, 0x02	; 2
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <__flp>
 79a:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <__flp+0x1>
 79e:	20 e0       	ldi	r18, 0x00	; 0
 7a0:	30 e0       	ldi	r19, 0x00	; 0
 7a2:	a0 e0       	ldi	r26, 0x00	; 0
 7a4:	b0 e0       	ldi	r27, 0x00	; 0
 7a6:	30 97       	sbiw	r30, 0x00	; 0
 7a8:	19 f1       	breq	.+70     	; 0x7f0 <malloc+0x6c>
 7aa:	40 81       	ld	r20, Z
 7ac:	51 81       	ldd	r21, Z+1	; 0x01
 7ae:	02 81       	ldd	r16, Z+2	; 0x02
 7b0:	13 81       	ldd	r17, Z+3	; 0x03
 7b2:	48 17       	cp	r20, r24
 7b4:	59 07       	cpc	r21, r25
 7b6:	c8 f0       	brcs	.+50     	; 0x7ea <malloc+0x66>
 7b8:	84 17       	cp	r24, r20
 7ba:	95 07       	cpc	r25, r21
 7bc:	69 f4       	brne	.+26     	; 0x7d8 <malloc+0x54>
 7be:	10 97       	sbiw	r26, 0x00	; 0
 7c0:	31 f0       	breq	.+12     	; 0x7ce <malloc+0x4a>
 7c2:	12 96       	adiw	r26, 0x02	; 2
 7c4:	0c 93       	st	X, r16
 7c6:	12 97       	sbiw	r26, 0x02	; 2
 7c8:	13 96       	adiw	r26, 0x03	; 3
 7ca:	1c 93       	st	X, r17
 7cc:	27 c0       	rjmp	.+78     	; 0x81c <malloc+0x98>
 7ce:	00 93 86 01 	sts	0x0186, r16	; 0x800186 <__flp>
 7d2:	10 93 87 01 	sts	0x0187, r17	; 0x800187 <__flp+0x1>
 7d6:	22 c0       	rjmp	.+68     	; 0x81c <malloc+0x98>
 7d8:	21 15       	cp	r18, r1
 7da:	31 05       	cpc	r19, r1
 7dc:	19 f0       	breq	.+6      	; 0x7e4 <malloc+0x60>
 7de:	42 17       	cp	r20, r18
 7e0:	53 07       	cpc	r21, r19
 7e2:	18 f4       	brcc	.+6      	; 0x7ea <malloc+0x66>
 7e4:	9a 01       	movw	r18, r20
 7e6:	bd 01       	movw	r22, r26
 7e8:	ef 01       	movw	r28, r30
 7ea:	df 01       	movw	r26, r30
 7ec:	f8 01       	movw	r30, r16
 7ee:	db cf       	rjmp	.-74     	; 0x7a6 <malloc+0x22>
 7f0:	21 15       	cp	r18, r1
 7f2:	31 05       	cpc	r19, r1
 7f4:	f9 f0       	breq	.+62     	; 0x834 <malloc+0xb0>
 7f6:	28 1b       	sub	r18, r24
 7f8:	39 0b       	sbc	r19, r25
 7fa:	24 30       	cpi	r18, 0x04	; 4
 7fc:	31 05       	cpc	r19, r1
 7fe:	80 f4       	brcc	.+32     	; 0x820 <malloc+0x9c>
 800:	8a 81       	ldd	r24, Y+2	; 0x02
 802:	9b 81       	ldd	r25, Y+3	; 0x03
 804:	61 15       	cp	r22, r1
 806:	71 05       	cpc	r23, r1
 808:	21 f0       	breq	.+8      	; 0x812 <malloc+0x8e>
 80a:	fb 01       	movw	r30, r22
 80c:	93 83       	std	Z+3, r25	; 0x03
 80e:	82 83       	std	Z+2, r24	; 0x02
 810:	04 c0       	rjmp	.+8      	; 0x81a <malloc+0x96>
 812:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__flp+0x1>
 816:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__flp>
 81a:	fe 01       	movw	r30, r28
 81c:	32 96       	adiw	r30, 0x02	; 2
 81e:	44 c0       	rjmp	.+136    	; 0x8a8 <malloc+0x124>
 820:	fe 01       	movw	r30, r28
 822:	e2 0f       	add	r30, r18
 824:	f3 1f       	adc	r31, r19
 826:	81 93       	st	Z+, r24
 828:	91 93       	st	Z+, r25
 82a:	22 50       	subi	r18, 0x02	; 2
 82c:	31 09       	sbc	r19, r1
 82e:	39 83       	std	Y+1, r19	; 0x01
 830:	28 83       	st	Y, r18
 832:	3a c0       	rjmp	.+116    	; 0x8a8 <malloc+0x124>
 834:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <__brkval>
 838:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <__brkval+0x1>
 83c:	23 2b       	or	r18, r19
 83e:	41 f4       	brne	.+16     	; 0x850 <malloc+0xcc>
 840:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 844:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 848:	30 93 85 01 	sts	0x0185, r19	; 0x800185 <__brkval+0x1>
 84c:	20 93 84 01 	sts	0x0184, r18	; 0x800184 <__brkval>
 850:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 854:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 858:	21 15       	cp	r18, r1
 85a:	31 05       	cpc	r19, r1
 85c:	41 f4       	brne	.+16     	; 0x86e <malloc+0xea>
 85e:	2d b7       	in	r18, 0x3d	; 61
 860:	3e b7       	in	r19, 0x3e	; 62
 862:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 866:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 86a:	24 1b       	sub	r18, r20
 86c:	35 0b       	sbc	r19, r21
 86e:	e0 91 84 01 	lds	r30, 0x0184	; 0x800184 <__brkval>
 872:	f0 91 85 01 	lds	r31, 0x0185	; 0x800185 <__brkval+0x1>
 876:	e2 17       	cp	r30, r18
 878:	f3 07       	cpc	r31, r19
 87a:	a0 f4       	brcc	.+40     	; 0x8a4 <malloc+0x120>
 87c:	2e 1b       	sub	r18, r30
 87e:	3f 0b       	sbc	r19, r31
 880:	28 17       	cp	r18, r24
 882:	39 07       	cpc	r19, r25
 884:	78 f0       	brcs	.+30     	; 0x8a4 <malloc+0x120>
 886:	ac 01       	movw	r20, r24
 888:	4e 5f       	subi	r20, 0xFE	; 254
 88a:	5f 4f       	sbci	r21, 0xFF	; 255
 88c:	24 17       	cp	r18, r20
 88e:	35 07       	cpc	r19, r21
 890:	48 f0       	brcs	.+18     	; 0x8a4 <malloc+0x120>
 892:	4e 0f       	add	r20, r30
 894:	5f 1f       	adc	r21, r31
 896:	50 93 85 01 	sts	0x0185, r21	; 0x800185 <__brkval+0x1>
 89a:	40 93 84 01 	sts	0x0184, r20	; 0x800184 <__brkval>
 89e:	81 93       	st	Z+, r24
 8a0:	91 93       	st	Z+, r25
 8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <malloc+0x124>
 8a4:	e0 e0       	ldi	r30, 0x00	; 0
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	cf 01       	movw	r24, r30
 8aa:	df 91       	pop	r29
 8ac:	cf 91       	pop	r28
 8ae:	1f 91       	pop	r17
 8b0:	0f 91       	pop	r16
 8b2:	08 95       	ret

000008b4 <free>:
 8b4:	cf 93       	push	r28
 8b6:	df 93       	push	r29
 8b8:	00 97       	sbiw	r24, 0x00	; 0
 8ba:	09 f4       	brne	.+2      	; 0x8be <free+0xa>
 8bc:	81 c0       	rjmp	.+258    	; 0x9c0 <free+0x10c>
 8be:	fc 01       	movw	r30, r24
 8c0:	32 97       	sbiw	r30, 0x02	; 2
 8c2:	13 82       	std	Z+3, r1	; 0x03
 8c4:	12 82       	std	Z+2, r1	; 0x02
 8c6:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <__flp>
 8ca:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <__flp+0x1>
 8ce:	10 97       	sbiw	r26, 0x00	; 0
 8d0:	81 f4       	brne	.+32     	; 0x8f2 <free+0x3e>
 8d2:	20 81       	ld	r18, Z
 8d4:	31 81       	ldd	r19, Z+1	; 0x01
 8d6:	82 0f       	add	r24, r18
 8d8:	93 1f       	adc	r25, r19
 8da:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <__brkval>
 8de:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <__brkval+0x1>
 8e2:	28 17       	cp	r18, r24
 8e4:	39 07       	cpc	r19, r25
 8e6:	51 f5       	brne	.+84     	; 0x93c <free+0x88>
 8e8:	f0 93 85 01 	sts	0x0185, r31	; 0x800185 <__brkval+0x1>
 8ec:	e0 93 84 01 	sts	0x0184, r30	; 0x800184 <__brkval>
 8f0:	67 c0       	rjmp	.+206    	; 0x9c0 <free+0x10c>
 8f2:	ed 01       	movw	r28, r26
 8f4:	20 e0       	ldi	r18, 0x00	; 0
 8f6:	30 e0       	ldi	r19, 0x00	; 0
 8f8:	ce 17       	cp	r28, r30
 8fa:	df 07       	cpc	r29, r31
 8fc:	40 f4       	brcc	.+16     	; 0x90e <free+0x5a>
 8fe:	4a 81       	ldd	r20, Y+2	; 0x02
 900:	5b 81       	ldd	r21, Y+3	; 0x03
 902:	9e 01       	movw	r18, r28
 904:	41 15       	cp	r20, r1
 906:	51 05       	cpc	r21, r1
 908:	f1 f0       	breq	.+60     	; 0x946 <free+0x92>
 90a:	ea 01       	movw	r28, r20
 90c:	f5 cf       	rjmp	.-22     	; 0x8f8 <free+0x44>
 90e:	d3 83       	std	Z+3, r29	; 0x03
 910:	c2 83       	std	Z+2, r28	; 0x02
 912:	40 81       	ld	r20, Z
 914:	51 81       	ldd	r21, Z+1	; 0x01
 916:	84 0f       	add	r24, r20
 918:	95 1f       	adc	r25, r21
 91a:	c8 17       	cp	r28, r24
 91c:	d9 07       	cpc	r29, r25
 91e:	59 f4       	brne	.+22     	; 0x936 <free+0x82>
 920:	88 81       	ld	r24, Y
 922:	99 81       	ldd	r25, Y+1	; 0x01
 924:	84 0f       	add	r24, r20
 926:	95 1f       	adc	r25, r21
 928:	02 96       	adiw	r24, 0x02	; 2
 92a:	91 83       	std	Z+1, r25	; 0x01
 92c:	80 83       	st	Z, r24
 92e:	8a 81       	ldd	r24, Y+2	; 0x02
 930:	9b 81       	ldd	r25, Y+3	; 0x03
 932:	93 83       	std	Z+3, r25	; 0x03
 934:	82 83       	std	Z+2, r24	; 0x02
 936:	21 15       	cp	r18, r1
 938:	31 05       	cpc	r19, r1
 93a:	29 f4       	brne	.+10     	; 0x946 <free+0x92>
 93c:	f0 93 87 01 	sts	0x0187, r31	; 0x800187 <__flp+0x1>
 940:	e0 93 86 01 	sts	0x0186, r30	; 0x800186 <__flp>
 944:	3d c0       	rjmp	.+122    	; 0x9c0 <free+0x10c>
 946:	e9 01       	movw	r28, r18
 948:	fb 83       	std	Y+3, r31	; 0x03
 94a:	ea 83       	std	Y+2, r30	; 0x02
 94c:	49 91       	ld	r20, Y+
 94e:	59 91       	ld	r21, Y+
 950:	c4 0f       	add	r28, r20
 952:	d5 1f       	adc	r29, r21
 954:	ec 17       	cp	r30, r28
 956:	fd 07       	cpc	r31, r29
 958:	61 f4       	brne	.+24     	; 0x972 <free+0xbe>
 95a:	80 81       	ld	r24, Z
 95c:	91 81       	ldd	r25, Z+1	; 0x01
 95e:	84 0f       	add	r24, r20
 960:	95 1f       	adc	r25, r21
 962:	02 96       	adiw	r24, 0x02	; 2
 964:	e9 01       	movw	r28, r18
 966:	99 83       	std	Y+1, r25	; 0x01
 968:	88 83       	st	Y, r24
 96a:	82 81       	ldd	r24, Z+2	; 0x02
 96c:	93 81       	ldd	r25, Z+3	; 0x03
 96e:	9b 83       	std	Y+3, r25	; 0x03
 970:	8a 83       	std	Y+2, r24	; 0x02
 972:	e0 e0       	ldi	r30, 0x00	; 0
 974:	f0 e0       	ldi	r31, 0x00	; 0
 976:	12 96       	adiw	r26, 0x02	; 2
 978:	8d 91       	ld	r24, X+
 97a:	9c 91       	ld	r25, X
 97c:	13 97       	sbiw	r26, 0x03	; 3
 97e:	00 97       	sbiw	r24, 0x00	; 0
 980:	19 f0       	breq	.+6      	; 0x988 <free+0xd4>
 982:	fd 01       	movw	r30, r26
 984:	dc 01       	movw	r26, r24
 986:	f7 cf       	rjmp	.-18     	; 0x976 <free+0xc2>
 988:	8d 91       	ld	r24, X+
 98a:	9c 91       	ld	r25, X
 98c:	11 97       	sbiw	r26, 0x01	; 1
 98e:	9d 01       	movw	r18, r26
 990:	2e 5f       	subi	r18, 0xFE	; 254
 992:	3f 4f       	sbci	r19, 0xFF	; 255
 994:	82 0f       	add	r24, r18
 996:	93 1f       	adc	r25, r19
 998:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <__brkval>
 99c:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <__brkval+0x1>
 9a0:	28 17       	cp	r18, r24
 9a2:	39 07       	cpc	r19, r25
 9a4:	69 f4       	brne	.+26     	; 0x9c0 <free+0x10c>
 9a6:	30 97       	sbiw	r30, 0x00	; 0
 9a8:	29 f4       	brne	.+10     	; 0x9b4 <free+0x100>
 9aa:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <__flp+0x1>
 9ae:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <__flp>
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <free+0x104>
 9b4:	13 82       	std	Z+3, r1	; 0x03
 9b6:	12 82       	std	Z+2, r1	; 0x02
 9b8:	b0 93 85 01 	sts	0x0185, r27	; 0x800185 <__brkval+0x1>
 9bc:	a0 93 84 01 	sts	0x0184, r26	; 0x800184 <__brkval>
 9c0:	df 91       	pop	r29
 9c2:	cf 91       	pop	r28
 9c4:	08 95       	ret

000009c6 <strnlen_P>:
 9c6:	fc 01       	movw	r30, r24
 9c8:	05 90       	lpm	r0, Z+
 9ca:	61 50       	subi	r22, 0x01	; 1
 9cc:	70 40       	sbci	r23, 0x00	; 0
 9ce:	01 10       	cpse	r0, r1
 9d0:	d8 f7       	brcc	.-10     	; 0x9c8 <strnlen_P+0x2>
 9d2:	80 95       	com	r24
 9d4:	90 95       	com	r25
 9d6:	8e 0f       	add	r24, r30
 9d8:	9f 1f       	adc	r25, r31
 9da:	08 95       	ret

000009dc <memset>:
 9dc:	dc 01       	movw	r26, r24
 9de:	01 c0       	rjmp	.+2      	; 0x9e2 <memset+0x6>
 9e0:	6d 93       	st	X+, r22
 9e2:	41 50       	subi	r20, 0x01	; 1
 9e4:	50 40       	sbci	r21, 0x00	; 0
 9e6:	e0 f7       	brcc	.-8      	; 0x9e0 <memset+0x4>
 9e8:	08 95       	ret

000009ea <strnlen>:
 9ea:	fc 01       	movw	r30, r24
 9ec:	61 50       	subi	r22, 0x01	; 1
 9ee:	70 40       	sbci	r23, 0x00	; 0
 9f0:	01 90       	ld	r0, Z+
 9f2:	01 10       	cpse	r0, r1
 9f4:	d8 f7       	brcc	.-10     	; 0x9ec <strnlen+0x2>
 9f6:	80 95       	com	r24
 9f8:	90 95       	com	r25
 9fa:	8e 0f       	add	r24, r30
 9fc:	9f 1f       	adc	r25, r31
 9fe:	08 95       	ret

00000a00 <fputc>:
 a00:	0f 93       	push	r16
 a02:	1f 93       	push	r17
 a04:	cf 93       	push	r28
 a06:	df 93       	push	r29
 a08:	fb 01       	movw	r30, r22
 a0a:	23 81       	ldd	r18, Z+3	; 0x03
 a0c:	21 fd       	sbrc	r18, 1
 a0e:	03 c0       	rjmp	.+6      	; 0xa16 <fputc+0x16>
 a10:	8f ef       	ldi	r24, 0xFF	; 255
 a12:	9f ef       	ldi	r25, 0xFF	; 255
 a14:	2c c0       	rjmp	.+88     	; 0xa6e <fputc+0x6e>
 a16:	22 ff       	sbrs	r18, 2
 a18:	16 c0       	rjmp	.+44     	; 0xa46 <fputc+0x46>
 a1a:	46 81       	ldd	r20, Z+6	; 0x06
 a1c:	57 81       	ldd	r21, Z+7	; 0x07
 a1e:	24 81       	ldd	r18, Z+4	; 0x04
 a20:	35 81       	ldd	r19, Z+5	; 0x05
 a22:	42 17       	cp	r20, r18
 a24:	53 07       	cpc	r21, r19
 a26:	44 f4       	brge	.+16     	; 0xa38 <fputc+0x38>
 a28:	a0 81       	ld	r26, Z
 a2a:	b1 81       	ldd	r27, Z+1	; 0x01
 a2c:	9d 01       	movw	r18, r26
 a2e:	2f 5f       	subi	r18, 0xFF	; 255
 a30:	3f 4f       	sbci	r19, 0xFF	; 255
 a32:	31 83       	std	Z+1, r19	; 0x01
 a34:	20 83       	st	Z, r18
 a36:	8c 93       	st	X, r24
 a38:	26 81       	ldd	r18, Z+6	; 0x06
 a3a:	37 81       	ldd	r19, Z+7	; 0x07
 a3c:	2f 5f       	subi	r18, 0xFF	; 255
 a3e:	3f 4f       	sbci	r19, 0xFF	; 255
 a40:	37 83       	std	Z+7, r19	; 0x07
 a42:	26 83       	std	Z+6, r18	; 0x06
 a44:	14 c0       	rjmp	.+40     	; 0xa6e <fputc+0x6e>
 a46:	8b 01       	movw	r16, r22
 a48:	ec 01       	movw	r28, r24
 a4a:	fb 01       	movw	r30, r22
 a4c:	00 84       	ldd	r0, Z+8	; 0x08
 a4e:	f1 85       	ldd	r31, Z+9	; 0x09
 a50:	e0 2d       	mov	r30, r0
 a52:	09 95       	icall
 a54:	89 2b       	or	r24, r25
 a56:	e1 f6       	brne	.-72     	; 0xa10 <fputc+0x10>
 a58:	d8 01       	movw	r26, r16
 a5a:	16 96       	adiw	r26, 0x06	; 6
 a5c:	8d 91       	ld	r24, X+
 a5e:	9c 91       	ld	r25, X
 a60:	17 97       	sbiw	r26, 0x07	; 7
 a62:	01 96       	adiw	r24, 0x01	; 1
 a64:	17 96       	adiw	r26, 0x07	; 7
 a66:	9c 93       	st	X, r25
 a68:	8e 93       	st	-X, r24
 a6a:	16 97       	sbiw	r26, 0x06	; 6
 a6c:	ce 01       	movw	r24, r28
 a6e:	df 91       	pop	r29
 a70:	cf 91       	pop	r28
 a72:	1f 91       	pop	r17
 a74:	0f 91       	pop	r16
 a76:	08 95       	ret

00000a78 <__ultoa_invert>:
 a78:	fa 01       	movw	r30, r20
 a7a:	aa 27       	eor	r26, r26
 a7c:	28 30       	cpi	r18, 0x08	; 8
 a7e:	51 f1       	breq	.+84     	; 0xad4 <__ultoa_invert+0x5c>
 a80:	20 31       	cpi	r18, 0x10	; 16
 a82:	81 f1       	breq	.+96     	; 0xae4 <__ultoa_invert+0x6c>
 a84:	e8 94       	clt
 a86:	6f 93       	push	r22
 a88:	6e 7f       	andi	r22, 0xFE	; 254
 a8a:	6e 5f       	subi	r22, 0xFE	; 254
 a8c:	7f 4f       	sbci	r23, 0xFF	; 255
 a8e:	8f 4f       	sbci	r24, 0xFF	; 255
 a90:	9f 4f       	sbci	r25, 0xFF	; 255
 a92:	af 4f       	sbci	r26, 0xFF	; 255
 a94:	b1 e0       	ldi	r27, 0x01	; 1
 a96:	3e d0       	rcall	.+124    	; 0xb14 <__ultoa_invert+0x9c>
 a98:	b4 e0       	ldi	r27, 0x04	; 4
 a9a:	3c d0       	rcall	.+120    	; 0xb14 <__ultoa_invert+0x9c>
 a9c:	67 0f       	add	r22, r23
 a9e:	78 1f       	adc	r23, r24
 aa0:	89 1f       	adc	r24, r25
 aa2:	9a 1f       	adc	r25, r26
 aa4:	a1 1d       	adc	r26, r1
 aa6:	68 0f       	add	r22, r24
 aa8:	79 1f       	adc	r23, r25
 aaa:	8a 1f       	adc	r24, r26
 aac:	91 1d       	adc	r25, r1
 aae:	a1 1d       	adc	r26, r1
 ab0:	6a 0f       	add	r22, r26
 ab2:	71 1d       	adc	r23, r1
 ab4:	81 1d       	adc	r24, r1
 ab6:	91 1d       	adc	r25, r1
 ab8:	a1 1d       	adc	r26, r1
 aba:	20 d0       	rcall	.+64     	; 0xafc <__ultoa_invert+0x84>
 abc:	09 f4       	brne	.+2      	; 0xac0 <__ultoa_invert+0x48>
 abe:	68 94       	set
 ac0:	3f 91       	pop	r19
 ac2:	2a e0       	ldi	r18, 0x0A	; 10
 ac4:	26 9f       	mul	r18, r22
 ac6:	11 24       	eor	r1, r1
 ac8:	30 19       	sub	r19, r0
 aca:	30 5d       	subi	r19, 0xD0	; 208
 acc:	31 93       	st	Z+, r19
 ace:	de f6       	brtc	.-74     	; 0xa86 <__ultoa_invert+0xe>
 ad0:	cf 01       	movw	r24, r30
 ad2:	08 95       	ret
 ad4:	46 2f       	mov	r20, r22
 ad6:	47 70       	andi	r20, 0x07	; 7
 ad8:	40 5d       	subi	r20, 0xD0	; 208
 ada:	41 93       	st	Z+, r20
 adc:	b3 e0       	ldi	r27, 0x03	; 3
 ade:	0f d0       	rcall	.+30     	; 0xafe <__ultoa_invert+0x86>
 ae0:	c9 f7       	brne	.-14     	; 0xad4 <__ultoa_invert+0x5c>
 ae2:	f6 cf       	rjmp	.-20     	; 0xad0 <__ultoa_invert+0x58>
 ae4:	46 2f       	mov	r20, r22
 ae6:	4f 70       	andi	r20, 0x0F	; 15
 ae8:	40 5d       	subi	r20, 0xD0	; 208
 aea:	4a 33       	cpi	r20, 0x3A	; 58
 aec:	18 f0       	brcs	.+6      	; 0xaf4 <__ultoa_invert+0x7c>
 aee:	49 5d       	subi	r20, 0xD9	; 217
 af0:	31 fd       	sbrc	r19, 1
 af2:	40 52       	subi	r20, 0x20	; 32
 af4:	41 93       	st	Z+, r20
 af6:	02 d0       	rcall	.+4      	; 0xafc <__ultoa_invert+0x84>
 af8:	a9 f7       	brne	.-22     	; 0xae4 <__ultoa_invert+0x6c>
 afa:	ea cf       	rjmp	.-44     	; 0xad0 <__ultoa_invert+0x58>
 afc:	b4 e0       	ldi	r27, 0x04	; 4
 afe:	a6 95       	lsr	r26
 b00:	97 95       	ror	r25
 b02:	87 95       	ror	r24
 b04:	77 95       	ror	r23
 b06:	67 95       	ror	r22
 b08:	ba 95       	dec	r27
 b0a:	c9 f7       	brne	.-14     	; 0xafe <__ultoa_invert+0x86>
 b0c:	00 97       	sbiw	r24, 0x00	; 0
 b0e:	61 05       	cpc	r22, r1
 b10:	71 05       	cpc	r23, r1
 b12:	08 95       	ret
 b14:	9b 01       	movw	r18, r22
 b16:	ac 01       	movw	r20, r24
 b18:	0a 2e       	mov	r0, r26
 b1a:	06 94       	lsr	r0
 b1c:	57 95       	ror	r21
 b1e:	47 95       	ror	r20
 b20:	37 95       	ror	r19
 b22:	27 95       	ror	r18
 b24:	ba 95       	dec	r27
 b26:	c9 f7       	brne	.-14     	; 0xb1a <__ultoa_invert+0xa2>
 b28:	62 0f       	add	r22, r18
 b2a:	73 1f       	adc	r23, r19
 b2c:	84 1f       	adc	r24, r20
 b2e:	95 1f       	adc	r25, r21
 b30:	a0 1d       	adc	r26, r0
 b32:	08 95       	ret

00000b34 <__divmodsi4>:
 b34:	05 2e       	mov	r0, r21
 b36:	97 fb       	bst	r25, 7
 b38:	1e f4       	brtc	.+6      	; 0xb40 <__divmodsi4+0xc>
 b3a:	00 94       	com	r0
 b3c:	0e 94 b1 05 	call	0xb62	; 0xb62 <__negsi2>
 b40:	57 fd       	sbrc	r21, 7
 b42:	07 d0       	rcall	.+14     	; 0xb52 <__divmodsi4_neg2>
 b44:	0e 94 03 06 	call	0xc06	; 0xc06 <__udivmodsi4>
 b48:	07 fc       	sbrc	r0, 7
 b4a:	03 d0       	rcall	.+6      	; 0xb52 <__divmodsi4_neg2>
 b4c:	4e f4       	brtc	.+18     	; 0xb60 <__divmodsi4_exit>
 b4e:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__negsi2>

00000b52 <__divmodsi4_neg2>:
 b52:	50 95       	com	r21
 b54:	40 95       	com	r20
 b56:	30 95       	com	r19
 b58:	21 95       	neg	r18
 b5a:	3f 4f       	sbci	r19, 0xFF	; 255
 b5c:	4f 4f       	sbci	r20, 0xFF	; 255
 b5e:	5f 4f       	sbci	r21, 0xFF	; 255

00000b60 <__divmodsi4_exit>:
 b60:	08 95       	ret

00000b62 <__negsi2>:
 b62:	90 95       	com	r25
 b64:	80 95       	com	r24
 b66:	70 95       	com	r23
 b68:	61 95       	neg	r22
 b6a:	7f 4f       	sbci	r23, 0xFF	; 255
 b6c:	8f 4f       	sbci	r24, 0xFF	; 255
 b6e:	9f 4f       	sbci	r25, 0xFF	; 255
 b70:	08 95       	ret

00000b72 <__muluhisi3>:
 b72:	0e 94 25 06 	call	0xc4a	; 0xc4a <__umulhisi3>
 b76:	a5 9f       	mul	r26, r21
 b78:	90 0d       	add	r25, r0
 b7a:	b4 9f       	mul	r27, r20
 b7c:	90 0d       	add	r25, r0
 b7e:	a4 9f       	mul	r26, r20
 b80:	80 0d       	add	r24, r0
 b82:	91 1d       	adc	r25, r1
 b84:	11 24       	eor	r1, r1
 b86:	08 95       	ret

00000b88 <__mulshisi3>:
 b88:	b7 ff       	sbrs	r27, 7
 b8a:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__muluhisi3>

00000b8e <__mulohisi3>:
 b8e:	0e 94 b9 05 	call	0xb72	; 0xb72 <__muluhisi3>
 b92:	82 1b       	sub	r24, r18
 b94:	93 0b       	sbc	r25, r19
 b96:	08 95       	ret

00000b98 <__prologue_saves__>:
 b98:	2f 92       	push	r2
 b9a:	3f 92       	push	r3
 b9c:	4f 92       	push	r4
 b9e:	5f 92       	push	r5
 ba0:	6f 92       	push	r6
 ba2:	7f 92       	push	r7
 ba4:	8f 92       	push	r8
 ba6:	9f 92       	push	r9
 ba8:	af 92       	push	r10
 baa:	bf 92       	push	r11
 bac:	cf 92       	push	r12
 bae:	df 92       	push	r13
 bb0:	ef 92       	push	r14
 bb2:	ff 92       	push	r15
 bb4:	0f 93       	push	r16
 bb6:	1f 93       	push	r17
 bb8:	cf 93       	push	r28
 bba:	df 93       	push	r29
 bbc:	cd b7       	in	r28, 0x3d	; 61
 bbe:	de b7       	in	r29, 0x3e	; 62
 bc0:	ca 1b       	sub	r28, r26
 bc2:	db 0b       	sbc	r29, r27
 bc4:	0f b6       	in	r0, 0x3f	; 63
 bc6:	f8 94       	cli
 bc8:	de bf       	out	0x3e, r29	; 62
 bca:	0f be       	out	0x3f, r0	; 63
 bcc:	cd bf       	out	0x3d, r28	; 61
 bce:	09 94       	ijmp

00000bd0 <__epilogue_restores__>:
 bd0:	2a 88       	ldd	r2, Y+18	; 0x12
 bd2:	39 88       	ldd	r3, Y+17	; 0x11
 bd4:	48 88       	ldd	r4, Y+16	; 0x10
 bd6:	5f 84       	ldd	r5, Y+15	; 0x0f
 bd8:	6e 84       	ldd	r6, Y+14	; 0x0e
 bda:	7d 84       	ldd	r7, Y+13	; 0x0d
 bdc:	8c 84       	ldd	r8, Y+12	; 0x0c
 bde:	9b 84       	ldd	r9, Y+11	; 0x0b
 be0:	aa 84       	ldd	r10, Y+10	; 0x0a
 be2:	b9 84       	ldd	r11, Y+9	; 0x09
 be4:	c8 84       	ldd	r12, Y+8	; 0x08
 be6:	df 80       	ldd	r13, Y+7	; 0x07
 be8:	ee 80       	ldd	r14, Y+6	; 0x06
 bea:	fd 80       	ldd	r15, Y+5	; 0x05
 bec:	0c 81       	ldd	r16, Y+4	; 0x04
 bee:	1b 81       	ldd	r17, Y+3	; 0x03
 bf0:	aa 81       	ldd	r26, Y+2	; 0x02
 bf2:	b9 81       	ldd	r27, Y+1	; 0x01
 bf4:	ce 0f       	add	r28, r30
 bf6:	d1 1d       	adc	r29, r1
 bf8:	0f b6       	in	r0, 0x3f	; 63
 bfa:	f8 94       	cli
 bfc:	de bf       	out	0x3e, r29	; 62
 bfe:	0f be       	out	0x3f, r0	; 63
 c00:	cd bf       	out	0x3d, r28	; 61
 c02:	ed 01       	movw	r28, r26
 c04:	08 95       	ret

00000c06 <__udivmodsi4>:
 c06:	a1 e2       	ldi	r26, 0x21	; 33
 c08:	1a 2e       	mov	r1, r26
 c0a:	aa 1b       	sub	r26, r26
 c0c:	bb 1b       	sub	r27, r27
 c0e:	fd 01       	movw	r30, r26
 c10:	0d c0       	rjmp	.+26     	; 0xc2c <__udivmodsi4_ep>

00000c12 <__udivmodsi4_loop>:
 c12:	aa 1f       	adc	r26, r26
 c14:	bb 1f       	adc	r27, r27
 c16:	ee 1f       	adc	r30, r30
 c18:	ff 1f       	adc	r31, r31
 c1a:	a2 17       	cp	r26, r18
 c1c:	b3 07       	cpc	r27, r19
 c1e:	e4 07       	cpc	r30, r20
 c20:	f5 07       	cpc	r31, r21
 c22:	20 f0       	brcs	.+8      	; 0xc2c <__udivmodsi4_ep>
 c24:	a2 1b       	sub	r26, r18
 c26:	b3 0b       	sbc	r27, r19
 c28:	e4 0b       	sbc	r30, r20
 c2a:	f5 0b       	sbc	r31, r21

00000c2c <__udivmodsi4_ep>:
 c2c:	66 1f       	adc	r22, r22
 c2e:	77 1f       	adc	r23, r23
 c30:	88 1f       	adc	r24, r24
 c32:	99 1f       	adc	r25, r25
 c34:	1a 94       	dec	r1
 c36:	69 f7       	brne	.-38     	; 0xc12 <__udivmodsi4_loop>
 c38:	60 95       	com	r22
 c3a:	70 95       	com	r23
 c3c:	80 95       	com	r24
 c3e:	90 95       	com	r25
 c40:	9b 01       	movw	r18, r22
 c42:	ac 01       	movw	r20, r24
 c44:	bd 01       	movw	r22, r26
 c46:	cf 01       	movw	r24, r30
 c48:	08 95       	ret

00000c4a <__umulhisi3>:
 c4a:	a2 9f       	mul	r26, r18
 c4c:	b0 01       	movw	r22, r0
 c4e:	b3 9f       	mul	r27, r19
 c50:	c0 01       	movw	r24, r0
 c52:	a3 9f       	mul	r26, r19
 c54:	70 0d       	add	r23, r0
 c56:	81 1d       	adc	r24, r1
 c58:	11 24       	eor	r1, r1
 c5a:	91 1d       	adc	r25, r1
 c5c:	b2 9f       	mul	r27, r18
 c5e:	70 0d       	add	r23, r0
 c60:	81 1d       	adc	r24, r1
 c62:	11 24       	eor	r1, r1
 c64:	91 1d       	adc	r25, r1
 c66:	08 95       	ret

00000c68 <_exit>:
 c68:	f8 94       	cli

00000c6a <__stop_program>:
 c6a:	ff cf       	rjmp	.-2      	; 0xc6a <__stop_program>
