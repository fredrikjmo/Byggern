
xmem_setup.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000004e2  00000576  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  0000057c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d6c  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e5  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000060e  00000000  00000000  00001cf1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002300  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ab  00000000  00000000  00002434  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022d  00000000  00000000  000028df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00002b0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ee       	ldi	r30, 0xE2	; 226
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 6f 02 	jmp	0x4de	; 0x4de <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "ADCdriver.h"
#include "USARTdriver.h"

int main(void)
{
	USART_Init( MYUBRR );
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 b5 00 	call	0x16a	; 0x16a <USART_Init>
	
	xmem_init();
  b6:	0e 94 c2 00 	call	0x184	; 0x184 <xmem_init>
	adc_init();
  ba:	0e 94 c9 00 	call	0x192	; 0x192 <adc_init>
	oled_init();
  be:	0e 94 67 00 	call	0xce	; 0xce <oled_init>
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <main+0x14>

000000c4 <write_c>:
 */ 

#include "OLEDdriver.h"

void write_c( uint8_t data ){
	xmem_write ( data , BASE_ADDRESS );
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	70 e1       	ldi	r23, 0x10	; 16
  c8:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <xmem_write>
  cc:	08 95       	ret

000000ce <oled_init>:
}

void oled_init( void )
{
	write_c(0xAE); // display off
  ce:	8e ea       	ldi	r24, 0xAE	; 174
  d0:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xA1); //segment remap
  d4:	81 ea       	ldi	r24, 0xA1	; 161
  d6:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xDA); //common pads hardware: alternative
  da:	8a ed       	ldi	r24, 0xDA	; 218
  dc:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x12);
  e0:	82 e1       	ldi	r24, 0x12	; 18
  e2:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xC8); //common output scan direction:com63~com0
  e6:	88 ec       	ldi	r24, 0xC8	; 200
  e8:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xA8); //multiplex ration mode:63
  ec:	88 ea       	ldi	r24, 0xA8	; 168
  ee:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x3F);
  f2:	8f e3       	ldi	r24, 0x3F	; 63
  f4:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xD5); //display divide ratio/osc. freq. mode
  f8:	85 ed       	ldi	r24, 0xD5	; 213
  fa:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x80);
  fe:	80 e8       	ldi	r24, 0x80	; 128
 100:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x81); //contrast control
 104:	81 e8       	ldi	r24, 0x81	; 129
 106:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x50);
 10a:	80 e5       	ldi	r24, 0x50	; 80
 10c:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xD9); //set pre-charge period
 110:	89 ed       	ldi	r24, 0xD9	; 217
 112:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x21);
 116:	81 e2       	ldi	r24, 0x21	; 33
 118:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x20); //Set Memory Addressing Mode
 11c:	80 e2       	ldi	r24, 0x20	; 32
 11e:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x02);
 122:	82 e0       	ldi	r24, 0x02	; 2
 124:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xDB); //VCOM deselect level mode
 128:	8b ed       	ldi	r24, 0xDB	; 219
 12a:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x30);
 12e:	80 e3       	ldi	r24, 0x30	; 48
 130:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xAD); //master configuration
 134:	8d ea       	ldi	r24, 0xAD	; 173
 136:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0x00);
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xA4); //out follows RAM content
 140:	84 ea       	ldi	r24, 0xA4	; 164
 142:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xA6); //set normal display
 146:	86 ea       	ldi	r24, 0xA6	; 166
 148:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xAF); // display on
 14c:	8f ea       	ldi	r24, 0xAF	; 175
 14e:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
	write_c(0xA7); //inverse dipslay 
 152:	87 ea       	ldi	r24, 0xA7	; 167
 154:	0e 94 62 00 	call	0xc4	; 0xc4 <write_c>
 158:	08 95       	ret

0000015a <USART_Transmit>:
 15a:	5d 9b       	sbis	0x0b, 5	; 11
 15c:	fe cf       	rjmp	.-4      	; 0x15a <USART_Transmit>
 15e:	8c b9       	out	0x0c, r24	; 12
 160:	08 95       	ret

00000162 <USART_Receive>:
 162:	5f 9b       	sbis	0x0b, 7	; 11
 164:	fe cf       	rjmp	.-4      	; 0x162 <USART_Receive>
 166:	8c b1       	in	r24, 0x0c	; 12
 168:	08 95       	ret

0000016a <USART_Init>:
 16a:	90 bd       	out	0x20, r25	; 32
 16c:	89 b9       	out	0x09, r24	; 9
 16e:	88 e1       	ldi	r24, 0x18	; 24
 170:	8a b9       	out	0x0a, r24	; 10
 172:	8e e8       	ldi	r24, 0x8E	; 142
 174:	80 bd       	out	0x20, r24	; 32
 176:	61 eb       	ldi	r22, 0xB1	; 177
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	8d ea       	ldi	r24, 0xAD	; 173
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <fdevopen>
 182:	08 95       	ret

00000184 <xmem_init>:
 */ 

#include "XMEMdriver.h"

void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
 184:	85 b7       	in	r24, 0x35	; 53
 186:	80 68       	ori	r24, 0x80	; 128
 188:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // mask unused bits
 18a:	80 b7       	in	r24, 0x30	; 48
 18c:	80 62       	ori	r24, 0x20	; 32
 18e:	80 bf       	out	0x30, r24	; 48
 190:	08 95       	ret

00000192 <adc_init>:
}

void adc_init ( void ){

	DDRD |= (1<<DDD5); // Set Data Direction PD5 to Write (output)
 192:	81 b3       	in	r24, 0x11	; 17
 194:	80 62       	ori	r24, 0x20	; 32
 196:	81 bb       	out	0x11, r24	; 17
	DDRD |= (0<<DDD4); // Set Data Direction PD4 to Read (input). Used for BUSY from ADC
 198:	81 b3       	in	r24, 0x11	; 17
 19a:	81 bb       	out	0x11, r24	; 17
	
	TCCR1B |= (1<<WGM12 | 0<<WGM13); // Set CTC mode
 19c:	8e b5       	in	r24, 0x2e	; 46
 19e:	88 60       	ori	r24, 0x08	; 8
 1a0:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (0<<WGM10 | 0<<WGM11); // Set CTC mode
 1a2:	8f b5       	in	r24, 0x2f	; 47
 1a4:	8f bd       	out	0x2f, r24	; 47
	
	TCCR1B |= (1<<CS10 | 0<<CS11 | 0<<CS12); //Clk frequency equal to system clock
 1a6:	8e b5       	in	r24, 0x2e	; 46
 1a8:	81 60       	ori	r24, 0x01	; 1
 1aa:	8e bd       	out	0x2e, r24	; 46

	TCCR1A |= (0<<COM1A1 | 1<<COM1A0); // Set 0C1A to toggle on match
 1ac:	8f b5       	in	r24, 0x2f	; 47
 1ae:	80 64       	ori	r24, 0x40	; 64
 1b0:	8f bd       	out	0x2f, r24	; 47
	
	OCR1A = 0x0; // Set compare to 0. Timer reset on compare equal, will always stay at 0, toggle every cycle (?)
 1b2:	1b bc       	out	0x2b, r1	; 43
 1b4:	1a bc       	out	0x2a, r1	; 42
 1b6:	08 95       	ret

000001b8 <xmem_write>:

}

void xmem_write ( uint8_t data , uint16_t addr ){
	volatile char * ext_mem = ( char *) BASE_ADDRESS ;
	ext_mem [ addr ]= data ;
 1b8:	fb 01       	movw	r30, r22
 1ba:	f0 5f       	subi	r31, 0xF0	; 240
 1bc:	80 83       	st	Z, r24
 1be:	08 95       	ret

000001c0 <fdevopen>:
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	00 97       	sbiw	r24, 0x00	; 0
 1ca:	31 f4       	brne	.+12     	; 0x1d8 <fdevopen+0x18>
 1cc:	61 15       	cp	r22, r1
 1ce:	71 05       	cpc	r23, r1
 1d0:	19 f4       	brne	.+6      	; 0x1d8 <fdevopen+0x18>
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	3a c0       	rjmp	.+116    	; 0x24c <__EEPROM_REGION_LENGTH__+0x4c>
 1d8:	8b 01       	movw	r16, r22
 1da:	ec 01       	movw	r28, r24
 1dc:	6e e0       	ldi	r22, 0x0E	; 14
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 2b 01 	call	0x256	; 0x256 <calloc>
 1e8:	fc 01       	movw	r30, r24
 1ea:	89 2b       	or	r24, r25
 1ec:	91 f3       	breq	.-28     	; 0x1d2 <fdevopen+0x12>
 1ee:	80 e8       	ldi	r24, 0x80	; 128
 1f0:	83 83       	std	Z+3, r24	; 0x03
 1f2:	01 15       	cp	r16, r1
 1f4:	11 05       	cpc	r17, r1
 1f6:	71 f0       	breq	.+28     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 1f8:	13 87       	std	Z+11, r17	; 0x0b
 1fa:	02 87       	std	Z+10, r16	; 0x0a
 1fc:	81 e8       	ldi	r24, 0x81	; 129
 1fe:	83 83       	std	Z+3, r24	; 0x03
 200:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 204:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 208:	89 2b       	or	r24, r25
 20a:	21 f4       	brne	.+8      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 20c:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 210:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 214:	20 97       	sbiw	r28, 0x00	; 0
 216:	c9 f0       	breq	.+50     	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 218:	d1 87       	std	Z+9, r29	; 0x09
 21a:	c0 87       	std	Z+8, r28	; 0x08
 21c:	83 81       	ldd	r24, Z+3	; 0x03
 21e:	82 60       	ori	r24, 0x02	; 2
 220:	83 83       	std	Z+3, r24	; 0x03
 222:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
 226:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x3>
 22a:	89 2b       	or	r24, r25
 22c:	71 f4       	brne	.+28     	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 22e:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__data_end+0x3>
 232:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__data_end+0x2>
 236:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end+0x4>
 23a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x5>
 23e:	89 2b       	or	r24, r25
 240:	21 f4       	brne	.+8      	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 242:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__data_end+0x5>
 246:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__data_end+0x4>
 24a:	cf 01       	movw	r24, r30
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	08 95       	ret

00000256 <calloc>:
 256:	0f 93       	push	r16
 258:	1f 93       	push	r17
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
 25e:	86 9f       	mul	r24, r22
 260:	80 01       	movw	r16, r0
 262:	87 9f       	mul	r24, r23
 264:	10 0d       	add	r17, r0
 266:	96 9f       	mul	r25, r22
 268:	10 0d       	add	r17, r0
 26a:	11 24       	eor	r1, r1
 26c:	c8 01       	movw	r24, r16
 26e:	0e 94 47 01 	call	0x28e	; 0x28e <malloc>
 272:	ec 01       	movw	r28, r24
 274:	00 97       	sbiw	r24, 0x00	; 0
 276:	29 f0       	breq	.+10     	; 0x282 <calloc+0x2c>
 278:	a8 01       	movw	r20, r16
 27a:	60 e0       	ldi	r22, 0x00	; 0
 27c:	70 e0       	ldi	r23, 0x00	; 0
 27e:	0e 94 68 02 	call	0x4d0	; 0x4d0 <memset>
 282:	ce 01       	movw	r24, r28
 284:	df 91       	pop	r29
 286:	cf 91       	pop	r28
 288:	1f 91       	pop	r17
 28a:	0f 91       	pop	r16
 28c:	08 95       	ret

0000028e <malloc>:
 28e:	0f 93       	push	r16
 290:	1f 93       	push	r17
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	82 30       	cpi	r24, 0x02	; 2
 298:	91 05       	cpc	r25, r1
 29a:	10 f4       	brcc	.+4      	; 0x2a0 <malloc+0x12>
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <__flp>
 2a4:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <__flp+0x1>
 2a8:	20 e0       	ldi	r18, 0x00	; 0
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	a0 e0       	ldi	r26, 0x00	; 0
 2ae:	b0 e0       	ldi	r27, 0x00	; 0
 2b0:	30 97       	sbiw	r30, 0x00	; 0
 2b2:	19 f1       	breq	.+70     	; 0x2fa <malloc+0x6c>
 2b4:	40 81       	ld	r20, Z
 2b6:	51 81       	ldd	r21, Z+1	; 0x01
 2b8:	02 81       	ldd	r16, Z+2	; 0x02
 2ba:	13 81       	ldd	r17, Z+3	; 0x03
 2bc:	48 17       	cp	r20, r24
 2be:	59 07       	cpc	r21, r25
 2c0:	c8 f0       	brcs	.+50     	; 0x2f4 <malloc+0x66>
 2c2:	84 17       	cp	r24, r20
 2c4:	95 07       	cpc	r25, r21
 2c6:	69 f4       	brne	.+26     	; 0x2e2 <malloc+0x54>
 2c8:	10 97       	sbiw	r26, 0x00	; 0
 2ca:	31 f0       	breq	.+12     	; 0x2d8 <malloc+0x4a>
 2cc:	12 96       	adiw	r26, 0x02	; 2
 2ce:	0c 93       	st	X, r16
 2d0:	12 97       	sbiw	r26, 0x02	; 2
 2d2:	13 96       	adiw	r26, 0x03	; 3
 2d4:	1c 93       	st	X, r17
 2d6:	27 c0       	rjmp	.+78     	; 0x326 <malloc+0x98>
 2d8:	00 93 0e 01 	sts	0x010E, r16	; 0x80010e <__flp>
 2dc:	10 93 0f 01 	sts	0x010F, r17	; 0x80010f <__flp+0x1>
 2e0:	22 c0       	rjmp	.+68     	; 0x326 <malloc+0x98>
 2e2:	21 15       	cp	r18, r1
 2e4:	31 05       	cpc	r19, r1
 2e6:	19 f0       	breq	.+6      	; 0x2ee <malloc+0x60>
 2e8:	42 17       	cp	r20, r18
 2ea:	53 07       	cpc	r21, r19
 2ec:	18 f4       	brcc	.+6      	; 0x2f4 <malloc+0x66>
 2ee:	9a 01       	movw	r18, r20
 2f0:	bd 01       	movw	r22, r26
 2f2:	ef 01       	movw	r28, r30
 2f4:	df 01       	movw	r26, r30
 2f6:	f8 01       	movw	r30, r16
 2f8:	db cf       	rjmp	.-74     	; 0x2b0 <malloc+0x22>
 2fa:	21 15       	cp	r18, r1
 2fc:	31 05       	cpc	r19, r1
 2fe:	f9 f0       	breq	.+62     	; 0x33e <malloc+0xb0>
 300:	28 1b       	sub	r18, r24
 302:	39 0b       	sbc	r19, r25
 304:	24 30       	cpi	r18, 0x04	; 4
 306:	31 05       	cpc	r19, r1
 308:	80 f4       	brcc	.+32     	; 0x32a <malloc+0x9c>
 30a:	8a 81       	ldd	r24, Y+2	; 0x02
 30c:	9b 81       	ldd	r25, Y+3	; 0x03
 30e:	61 15       	cp	r22, r1
 310:	71 05       	cpc	r23, r1
 312:	21 f0       	breq	.+8      	; 0x31c <malloc+0x8e>
 314:	fb 01       	movw	r30, r22
 316:	93 83       	std	Z+3, r25	; 0x03
 318:	82 83       	std	Z+2, r24	; 0x02
 31a:	04 c0       	rjmp	.+8      	; 0x324 <malloc+0x96>
 31c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__flp+0x1>
 320:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__flp>
 324:	fe 01       	movw	r30, r28
 326:	32 96       	adiw	r30, 0x02	; 2
 328:	44 c0       	rjmp	.+136    	; 0x3b2 <malloc+0x124>
 32a:	fe 01       	movw	r30, r28
 32c:	e2 0f       	add	r30, r18
 32e:	f3 1f       	adc	r31, r19
 330:	81 93       	st	Z+, r24
 332:	91 93       	st	Z+, r25
 334:	22 50       	subi	r18, 0x02	; 2
 336:	31 09       	sbc	r19, r1
 338:	39 83       	std	Y+1, r19	; 0x01
 33a:	28 83       	st	Y, r18
 33c:	3a c0       	rjmp	.+116    	; 0x3b2 <malloc+0x124>
 33e:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 342:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 346:	23 2b       	or	r18, r19
 348:	41 f4       	brne	.+16     	; 0x35a <malloc+0xcc>
 34a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 34e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 352:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <__brkval+0x1>
 356:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <__brkval>
 35a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 35e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 362:	21 15       	cp	r18, r1
 364:	31 05       	cpc	r19, r1
 366:	41 f4       	brne	.+16     	; 0x378 <malloc+0xea>
 368:	2d b7       	in	r18, 0x3d	; 61
 36a:	3e b7       	in	r19, 0x3e	; 62
 36c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 370:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 374:	24 1b       	sub	r18, r20
 376:	35 0b       	sbc	r19, r21
 378:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__brkval>
 37c:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__brkval+0x1>
 380:	e2 17       	cp	r30, r18
 382:	f3 07       	cpc	r31, r19
 384:	a0 f4       	brcc	.+40     	; 0x3ae <malloc+0x120>
 386:	2e 1b       	sub	r18, r30
 388:	3f 0b       	sbc	r19, r31
 38a:	28 17       	cp	r18, r24
 38c:	39 07       	cpc	r19, r25
 38e:	78 f0       	brcs	.+30     	; 0x3ae <malloc+0x120>
 390:	ac 01       	movw	r20, r24
 392:	4e 5f       	subi	r20, 0xFE	; 254
 394:	5f 4f       	sbci	r21, 0xFF	; 255
 396:	24 17       	cp	r18, r20
 398:	35 07       	cpc	r19, r21
 39a:	48 f0       	brcs	.+18     	; 0x3ae <malloc+0x120>
 39c:	4e 0f       	add	r20, r30
 39e:	5f 1f       	adc	r21, r31
 3a0:	50 93 0d 01 	sts	0x010D, r21	; 0x80010d <__brkval+0x1>
 3a4:	40 93 0c 01 	sts	0x010C, r20	; 0x80010c <__brkval>
 3a8:	81 93       	st	Z+, r24
 3aa:	91 93       	st	Z+, r25
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <malloc+0x124>
 3ae:	e0 e0       	ldi	r30, 0x00	; 0
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	cf 01       	movw	r24, r30
 3b4:	df 91       	pop	r29
 3b6:	cf 91       	pop	r28
 3b8:	1f 91       	pop	r17
 3ba:	0f 91       	pop	r16
 3bc:	08 95       	ret

000003be <free>:
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	00 97       	sbiw	r24, 0x00	; 0
 3c4:	09 f4       	brne	.+2      	; 0x3c8 <free+0xa>
 3c6:	81 c0       	rjmp	.+258    	; 0x4ca <__DATA_REGION_LENGTH__+0xca>
 3c8:	fc 01       	movw	r30, r24
 3ca:	32 97       	sbiw	r30, 0x02	; 2
 3cc:	13 82       	std	Z+3, r1	; 0x03
 3ce:	12 82       	std	Z+2, r1	; 0x02
 3d0:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <__flp>
 3d4:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <__flp+0x1>
 3d8:	10 97       	sbiw	r26, 0x00	; 0
 3da:	81 f4       	brne	.+32     	; 0x3fc <free+0x3e>
 3dc:	20 81       	ld	r18, Z
 3de:	31 81       	ldd	r19, Z+1	; 0x01
 3e0:	82 0f       	add	r24, r18
 3e2:	93 1f       	adc	r25, r19
 3e4:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 3e8:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 3ec:	28 17       	cp	r18, r24
 3ee:	39 07       	cpc	r19, r25
 3f0:	51 f5       	brne	.+84     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 3f2:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__brkval+0x1>
 3f6:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__brkval>
 3fa:	67 c0       	rjmp	.+206    	; 0x4ca <__DATA_REGION_LENGTH__+0xca>
 3fc:	ed 01       	movw	r28, r26
 3fe:	20 e0       	ldi	r18, 0x00	; 0
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	ce 17       	cp	r28, r30
 404:	df 07       	cpc	r29, r31
 406:	40 f4       	brcc	.+16     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 408:	4a 81       	ldd	r20, Y+2	; 0x02
 40a:	5b 81       	ldd	r21, Y+3	; 0x03
 40c:	9e 01       	movw	r18, r28
 40e:	41 15       	cp	r20, r1
 410:	51 05       	cpc	r21, r1
 412:	f1 f0       	breq	.+60     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 414:	ea 01       	movw	r28, r20
 416:	f5 cf       	rjmp	.-22     	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 418:	d3 83       	std	Z+3, r29	; 0x03
 41a:	c2 83       	std	Z+2, r28	; 0x02
 41c:	40 81       	ld	r20, Z
 41e:	51 81       	ldd	r21, Z+1	; 0x01
 420:	84 0f       	add	r24, r20
 422:	95 1f       	adc	r25, r21
 424:	c8 17       	cp	r28, r24
 426:	d9 07       	cpc	r29, r25
 428:	59 f4       	brne	.+22     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 42a:	88 81       	ld	r24, Y
 42c:	99 81       	ldd	r25, Y+1	; 0x01
 42e:	84 0f       	add	r24, r20
 430:	95 1f       	adc	r25, r21
 432:	02 96       	adiw	r24, 0x02	; 2
 434:	91 83       	std	Z+1, r25	; 0x01
 436:	80 83       	st	Z, r24
 438:	8a 81       	ldd	r24, Y+2	; 0x02
 43a:	9b 81       	ldd	r25, Y+3	; 0x03
 43c:	93 83       	std	Z+3, r25	; 0x03
 43e:	82 83       	std	Z+2, r24	; 0x02
 440:	21 15       	cp	r18, r1
 442:	31 05       	cpc	r19, r1
 444:	29 f4       	brne	.+10     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 446:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__flp+0x1>
 44a:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__flp>
 44e:	3d c0       	rjmp	.+122    	; 0x4ca <__DATA_REGION_LENGTH__+0xca>
 450:	e9 01       	movw	r28, r18
 452:	fb 83       	std	Y+3, r31	; 0x03
 454:	ea 83       	std	Y+2, r30	; 0x02
 456:	49 91       	ld	r20, Y+
 458:	59 91       	ld	r21, Y+
 45a:	c4 0f       	add	r28, r20
 45c:	d5 1f       	adc	r29, r21
 45e:	ec 17       	cp	r30, r28
 460:	fd 07       	cpc	r31, r29
 462:	61 f4       	brne	.+24     	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 464:	80 81       	ld	r24, Z
 466:	91 81       	ldd	r25, Z+1	; 0x01
 468:	84 0f       	add	r24, r20
 46a:	95 1f       	adc	r25, r21
 46c:	02 96       	adiw	r24, 0x02	; 2
 46e:	e9 01       	movw	r28, r18
 470:	99 83       	std	Y+1, r25	; 0x01
 472:	88 83       	st	Y, r24
 474:	82 81       	ldd	r24, Z+2	; 0x02
 476:	93 81       	ldd	r25, Z+3	; 0x03
 478:	9b 83       	std	Y+3, r25	; 0x03
 47a:	8a 83       	std	Y+2, r24	; 0x02
 47c:	e0 e0       	ldi	r30, 0x00	; 0
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	12 96       	adiw	r26, 0x02	; 2
 482:	8d 91       	ld	r24, X+
 484:	9c 91       	ld	r25, X
 486:	13 97       	sbiw	r26, 0x03	; 3
 488:	00 97       	sbiw	r24, 0x00	; 0
 48a:	19 f0       	breq	.+6      	; 0x492 <__DATA_REGION_LENGTH__+0x92>
 48c:	fd 01       	movw	r30, r26
 48e:	dc 01       	movw	r26, r24
 490:	f7 cf       	rjmp	.-18     	; 0x480 <__DATA_REGION_LENGTH__+0x80>
 492:	8d 91       	ld	r24, X+
 494:	9c 91       	ld	r25, X
 496:	11 97       	sbiw	r26, 0x01	; 1
 498:	9d 01       	movw	r18, r26
 49a:	2e 5f       	subi	r18, 0xFE	; 254
 49c:	3f 4f       	sbci	r19, 0xFF	; 255
 49e:	82 0f       	add	r24, r18
 4a0:	93 1f       	adc	r25, r19
 4a2:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 4a6:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 4aa:	28 17       	cp	r18, r24
 4ac:	39 07       	cpc	r19, r25
 4ae:	69 f4       	brne	.+26     	; 0x4ca <__DATA_REGION_LENGTH__+0xca>
 4b0:	30 97       	sbiw	r30, 0x00	; 0
 4b2:	29 f4       	brne	.+10     	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
 4b4:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp+0x1>
 4b8:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__flp>
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <__DATA_REGION_LENGTH__+0xc2>
 4be:	13 82       	std	Z+3, r1	; 0x03
 4c0:	12 82       	std	Z+2, r1	; 0x02
 4c2:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__brkval+0x1>
 4c6:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__brkval>
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	08 95       	ret

000004d0 <memset>:
 4d0:	dc 01       	movw	r26, r24
 4d2:	01 c0       	rjmp	.+2      	; 0x4d6 <memset+0x6>
 4d4:	6d 93       	st	X+, r22
 4d6:	41 50       	subi	r20, 0x01	; 1
 4d8:	50 40       	sbci	r21, 0x00	; 0
 4da:	e0 f7       	brcc	.-8      	; 0x4d4 <memset+0x4>
 4dc:	08 95       	ret

000004de <_exit>:
 4de:	f8 94       	cli

000004e0 <__stop_program>:
 4e0:	ff cf       	rjmp	.-2      	; 0x4e0 <__stop_program>
