
Node 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00000f10  00000fa4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  008001aa  008001aa  0000104e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000104e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000010ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  000010e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b02  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef0  00000000  00000000  00002de2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001033  00000000  00000000  00003cd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000043c  00000000  00000000  00004d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008be  00000000  00000000  00005144  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a29  00000000  00000000  00005a02  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000642b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e1       	ldi	r30, 0x10	; 16
  84:	ff e0       	ldi	r31, 0x0F	; 15
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 3a       	cpi	r26, 0xAA	; 170
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa ea       	ldi	r26, 0xAA	; 170
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a9 3b       	cpi	r26, 0xB9	; 185
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 de 01 	call	0x3bc	; 0x3bc <main>
  a6:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_sample>:
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x1247>
  b4:	08 95       	ret

000000b6 <adc_read>:
  b6:	cf 93       	push	r28
  b8:	c8 2f       	mov	r28, r24
  ba:	0e 94 57 00 	call	0xae	; 0xae <adc_sample>
  be:	84 9b       	sbis	0x10, 4	; 16
  c0:	fe cf       	rjmp	.-4      	; 0xbe <adc_read+0x8>
  c2:	e0 e0       	ldi	r30, 0x00	; 0
  c4:	f4 e1       	ldi	r31, 0x14	; 20
  c6:	90 81       	ld	r25, Z
  c8:	30 81       	ld	r19, Z
  ca:	80 81       	ld	r24, Z
  cc:	20 81       	ld	r18, Z
  ce:	c1 30       	cpi	r28, 0x01	; 1
  d0:	39 f0       	breq	.+14     	; 0xe0 <adc_read+0x2a>
  d2:	50 f0       	brcs	.+20     	; 0xe8 <adc_read+0x32>
  d4:	c2 30       	cpi	r28, 0x02	; 2
  d6:	49 f0       	breq	.+18     	; 0xea <adc_read+0x34>
  d8:	c3 30       	cpi	r28, 0x03	; 3
  da:	21 f0       	breq	.+8      	; 0xe4 <adc_read+0x2e>
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	05 c0       	rjmp	.+10     	; 0xea <adc_read+0x34>
  e0:	83 2f       	mov	r24, r19
  e2:	03 c0       	rjmp	.+6      	; 0xea <adc_read+0x34>
  e4:	82 2f       	mov	r24, r18
  e6:	01 c0       	rjmp	.+2      	; 0xea <adc_read+0x34>
  e8:	89 2f       	mov	r24, r25
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <adc_calibrate>:
  ee:	cf 93       	push	r28
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	0e 94 5b 00 	call	0xb6	; 0xb6 <adc_read>
  f6:	c8 2f       	mov	r28, r24
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	0e 94 5b 00 	call	0xb6	; 0xb6 <adc_read>
  fe:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <m_middle_x_value>
 102:	91 11       	cpse	r25, r1
 104:	02 c0       	rjmp	.+4      	; 0x10a <adc_calibrate+0x1c>
 106:	c0 93 ac 01 	sts	0x01AC, r28	; 0x8001ac <m_middle_x_value>
 10a:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__data_end>
 10e:	91 11       	cpse	r25, r1
 110:	02 c0       	rjmp	.+4      	; 0x116 <adc_calibrate+0x28>
 112:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
 116:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <m_max_x_value>
 11a:	9c 17       	cp	r25, r28
 11c:	10 f4       	brcc	.+4      	; 0x122 <adc_calibrate+0x34>
 11e:	c0 93 ad 01 	sts	0x01AD, r28	; 0x8001ad <m_max_x_value>
 122:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <m_min_x_value>
 126:	c9 17       	cp	r28, r25
 128:	10 f4       	brcc	.+4      	; 0x12e <adc_calibrate+0x40>
 12a:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <m_min_x_value>
 12e:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <m_max_y_value>
 132:	98 17       	cp	r25, r24
 134:	10 f4       	brcc	.+4      	; 0x13a <adc_calibrate+0x4c>
 136:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <m_max_y_value>
 13a:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <m_min_y_value>
 13e:	89 17       	cp	r24, r25
 140:	10 f4       	brcc	.+4      	; 0x146 <adc_calibrate+0x58>
 142:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <m_min_y_value>
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <adc_pos_read>:
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	0e 94 5b 00 	call	0xb6	; 0xb6 <adc_read>
 154:	c8 2f       	mov	r28, r24
 156:	d0 e0       	ldi	r29, 0x00	; 0
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	0e 94 5b 00 	call	0xb6	; 0xb6 <adc_read>
 15e:	28 2f       	mov	r18, r24
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	40 91 ac 01 	lds	r20, 0x01AC	; 0x8001ac <m_middle_x_value>
 166:	50 e0       	ldi	r21, 0x00	; 0
 168:	4c 17       	cp	r20, r28
 16a:	5d 07       	cpc	r21, r29
 16c:	94 f0       	brlt	.+36     	; 0x192 <adc_pos_read+0x48>
 16e:	c4 1b       	sub	r28, r20
 170:	d5 0b       	sbc	r29, r21
 172:	64 e6       	ldi	r22, 0x64	; 100
 174:	6c 9f       	mul	r22, r28
 176:	c0 01       	movw	r24, r0
 178:	6d 9f       	mul	r22, r29
 17a:	90 0d       	add	r25, r0
 17c:	11 24       	eor	r1, r1
 17e:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <m_min_x_value>
 182:	fa 01       	movw	r30, r20
 184:	e6 1b       	sub	r30, r22
 186:	f1 09       	sbc	r31, r1
 188:	bf 01       	movw	r22, r30
 18a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__divmodhi4>
 18e:	e6 2f       	mov	r30, r22
 190:	10 c0       	rjmp	.+32     	; 0x1b2 <adc_pos_read+0x68>
 192:	c4 1b       	sub	r28, r20
 194:	d5 0b       	sbc	r29, r21
 196:	64 e6       	ldi	r22, 0x64	; 100
 198:	6c 9f       	mul	r22, r28
 19a:	c0 01       	movw	r24, r0
 19c:	6d 9f       	mul	r22, r29
 19e:	90 0d       	add	r25, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	60 91 ad 01 	lds	r22, 0x01AD	; 0x8001ad <m_max_x_value>
 1a6:	70 e0       	ldi	r23, 0x00	; 0
 1a8:	64 1b       	sub	r22, r20
 1aa:	75 0b       	sbc	r23, r21
 1ac:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__divmodhi4>
 1b0:	e6 2f       	mov	r30, r22
 1b2:	40 91 aa 01 	lds	r20, 0x01AA	; 0x8001aa <__data_end>
 1b6:	50 e0       	ldi	r21, 0x00	; 0
 1b8:	42 17       	cp	r20, r18
 1ba:	53 07       	cpc	r21, r19
 1bc:	8c f0       	brlt	.+34     	; 0x1e0 <adc_pos_read+0x96>
 1be:	24 1b       	sub	r18, r20
 1c0:	35 0b       	sbc	r19, r21
 1c2:	64 e6       	ldi	r22, 0x64	; 100
 1c4:	62 9f       	mul	r22, r18
 1c6:	c0 01       	movw	r24, r0
 1c8:	63 9f       	mul	r22, r19
 1ca:	90 0d       	add	r25, r0
 1cc:	11 24       	eor	r1, r1
 1ce:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <m_min_y_value>
 1d2:	ba 01       	movw	r22, r20
 1d4:	62 1b       	sub	r22, r18
 1d6:	71 09       	sbc	r23, r1
 1d8:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__divmodhi4>
 1dc:	96 2f       	mov	r25, r22
 1de:	10 c0       	rjmp	.+32     	; 0x200 <__EEPROM_REGION_LENGTH__>
 1e0:	24 1b       	sub	r18, r20
 1e2:	35 0b       	sbc	r19, r21
 1e4:	64 e6       	ldi	r22, 0x64	; 100
 1e6:	62 9f       	mul	r22, r18
 1e8:	c0 01       	movw	r24, r0
 1ea:	63 9f       	mul	r22, r19
 1ec:	90 0d       	add	r25, r0
 1ee:	11 24       	eor	r1, r1
 1f0:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <m_max_y_value>
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	64 1b       	sub	r22, r20
 1f8:	75 0b       	sbc	r23, r21
 1fa:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__divmodhi4>
 1fe:	96 2f       	mov	r25, r22
 200:	8e 2f       	mov	r24, r30
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <adc_direction_read>:
 208:	0e 94 a5 00 	call	0x14a	; 0x14a <adc_pos_read>
 20c:	29 2f       	mov	r18, r25
 20e:	48 2f       	mov	r20, r24
 210:	94 e0       	ldi	r25, 0x04	; 4
 212:	98 0f       	add	r25, r24
 214:	99 30       	cpi	r25, 0x09	; 9
 216:	20 f4       	brcc	.+8      	; 0x220 <adc_direction_read+0x18>
 218:	94 e0       	ldi	r25, 0x04	; 4
 21a:	92 0f       	add	r25, r18
 21c:	99 30       	cpi	r25, 0x09	; 9
 21e:	e0 f0       	brcs	.+56     	; 0x258 <adc_direction_read+0x50>
 220:	08 2e       	mov	r0, r24
 222:	00 0c       	add	r0, r0
 224:	99 0b       	sbc	r25, r25
 226:	99 23       	and	r25, r25
 228:	1c f4       	brge	.+6      	; 0x230 <adc_direction_read+0x28>
 22a:	91 95       	neg	r25
 22c:	81 95       	neg	r24
 22e:	91 09       	sbc	r25, r1
 230:	52 2f       	mov	r21, r18
 232:	02 2e       	mov	r0, r18
 234:	00 0c       	add	r0, r0
 236:	33 0b       	sbc	r19, r19
 238:	33 23       	and	r19, r19
 23a:	1c f4       	brge	.+6      	; 0x242 <adc_direction_read+0x3a>
 23c:	31 95       	neg	r19
 23e:	21 95       	neg	r18
 240:	31 09       	sbc	r19, r1
 242:	82 17       	cp	r24, r18
 244:	93 07       	cpc	r25, r19
 246:	24 f4       	brge	.+8      	; 0x250 <adc_direction_read+0x48>
 248:	55 23       	and	r21, r21
 24a:	44 f4       	brge	.+16     	; 0x25c <adc_direction_read+0x54>
 24c:	83 e0       	ldi	r24, 0x03	; 3
 24e:	08 95       	ret
 250:	44 23       	and	r20, r20
 252:	34 f4       	brge	.+12     	; 0x260 <adc_direction_read+0x58>
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	08 95       	ret
 258:	84 e0       	ldi	r24, 0x04	; 4
 25a:	08 95       	ret
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	08 95       	ret
 260:	80 e0       	ldi	r24, 0x00	; 0
 262:	08 95       	ret

00000264 <adc_pos_right_slider>:
 264:	83 e0       	ldi	r24, 0x03	; 3
 266:	0e 94 5b 00 	call	0xb6	; 0xb6 <adc_read>
 26a:	24 e6       	ldi	r18, 0x64	; 100
 26c:	82 9f       	mul	r24, r18
 26e:	c0 01       	movw	r24, r0
 270:	11 24       	eor	r1, r1
 272:	6f ef       	ldi	r22, 0xFF	; 255
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__divmodhi4>
 27a:	86 2f       	mov	r24, r22
 27c:	08 95       	ret

0000027e <button_right_read>:
 27e:	86 b3       	in	r24, 0x16	; 22
 280:	81 70       	andi	r24, 0x01	; 1
 282:	08 95       	ret

00000284 <CAN_transmit>:
 284:	0f 93       	push	r16
 286:	1f 93       	push	r17
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	16 2f       	mov	r17, r22
 28e:	d4 2f       	mov	r29, r20
 290:	c2 2f       	mov	r28, r18
 292:	68 2f       	mov	r22, r24
 294:	82 e3       	ldi	r24, 0x32	; 50
 296:	0e 94 0d 02 	call	0x41a	; 0x41a <MCP2515_write>
 29a:	61 2f       	mov	r22, r17
 29c:	81 e3       	ldi	r24, 0x31	; 49
 29e:	0e 94 0d 02 	call	0x41a	; 0x41a <MCP2515_write>
 2a2:	63 e0       	ldi	r22, 0x03	; 3
 2a4:	85 e3       	ldi	r24, 0x35	; 53
 2a6:	0e 94 0d 02 	call	0x41a	; 0x41a <MCP2515_write>
 2aa:	6d 2f       	mov	r22, r29
 2ac:	86 e3       	ldi	r24, 0x36	; 54
 2ae:	0e 94 0d 02 	call	0x41a	; 0x41a <MCP2515_write>
 2b2:	6c 2f       	mov	r22, r28
 2b4:	87 e3       	ldi	r24, 0x37	; 55
 2b6:	0e 94 0d 02 	call	0x41a	; 0x41a <MCP2515_write>
 2ba:	60 2f       	mov	r22, r16
 2bc:	88 e3       	ldi	r24, 0x38	; 56
 2be:	0e 94 0d 02 	call	0x41a	; 0x41a <MCP2515_write>
 2c2:	81 e8       	ldi	r24, 0x81	; 129
 2c4:	0e 94 23 02 	call	0x446	; 0x446 <MCP2515_request_to_send>
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	1f 91       	pop	r17
 2ce:	0f 91       	pop	r16
 2d0:	08 95       	ret

000002d2 <CAN_receive>:
 2d2:	81 e6       	ldi	r24, 0x61	; 97
 2d4:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
 2d8:	82 e6       	ldi	r24, 0x62	; 98
 2da:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
 2de:	85 e6       	ldi	r24, 0x65	; 101
 2e0:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
 2e4:	86 e6       	ldi	r24, 0x66	; 102
 2e6:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
 2ea:	08 95       	ret

000002ec <interface_send_MFB_data_to_CAN>:
	uint8_t PWM_percentage = (posistion_percentage.x_axis + 100)/2;

	CAN_transmit(0xFF, 0x0F, PWM_percentage, 0x0, 0x0);
	
}
void interface_send_MFB_data_to_CAN (void){
 2ec:	0f 93       	push	r16
 2ee:	1f 93       	push	r17
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
	
	pos_p joystick_posistion_percentage = adc_pos_read();
 2f4:	0e 94 a5 00 	call	0x14a	; 0x14a <adc_pos_read>
	uint8_t joystick_PWM_percentage = (joystick_posistion_percentage.x_axis + 100)/2;
 2f8:	08 2e       	mov	r0, r24
 2fa:	00 0c       	add	r0, r0
 2fc:	99 0b       	sbc	r25, r25
 2fe:	8c 59       	subi	r24, 0x9C	; 156
 300:	9f 4f       	sbci	r25, 0xFF	; 255
 302:	ac 01       	movw	r20, r24
 304:	12 f4       	brpl	.+4      	; 0x30a <interface_send_MFB_data_to_CAN+0x1e>
 306:	4f 5f       	subi	r20, 0xFF	; 255
 308:	5f 4f       	sbci	r21, 0xFF	; 255
 30a:	ea 01       	movw	r28, r20
 30c:	d5 95       	asr	r29
 30e:	c7 95       	ror	r28
	
	uint8_t right_slider_posistion_percentage = adc_pos_right_slider();
 310:	0e 94 32 01 	call	0x264	; 0x264 <adc_pos_right_slider>
 314:	18 2f       	mov	r17, r24
	
	uint8_t right_button_val = button_right_read();
 316:	0e 94 3f 01 	call	0x27e	; 0x27e <button_right_read>
 31a:	08 2f       	mov	r16, r24
	printf("PWM: %d \n\r",joystick_PWM_percentage);
 31c:	ce 01       	movw	r24, r28
 31e:	99 27       	eor	r25, r25
 320:	9f 93       	push	r25
 322:	8f 93       	push	r24
 324:	88 e0       	ldi	r24, 0x08	; 8
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	9f 93       	push	r25
 32a:	8f 93       	push	r24
 32c:	0e 94 64 03 	call	0x6c8	; 0x6c8 <printf>
	CAN_transmit(0xFF, 0x0F, joystick_PWM_percentage, right_slider_posistion_percentage, right_button_val);
 330:	21 2f       	mov	r18, r17
 332:	4c 2f       	mov	r20, r28
 334:	6f e0       	ldi	r22, 0x0F	; 15
 336:	8f ef       	ldi	r24, 0xFF	; 255
 338:	0e 94 42 01 	call	0x284	; 0x284 <CAN_transmit>
}
 33c:	0f 90       	pop	r0
 33e:	0f 90       	pop	r0
 340:	0f 90       	pop	r0
 342:	0f 90       	pop	r0
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	1f 91       	pop	r17
 34a:	0f 91       	pop	r16
 34c:	08 95       	ret

0000034e <__vector_1>:
uint8_t MCP_val_read;


// Interrupt vector for INT0
ISR(INT0_vect)
{
 34e:	1f 92       	push	r1
 350:	0f 92       	push	r0
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	0f 92       	push	r0
 356:	11 24       	eor	r1, r1
 358:	2f 93       	push	r18
 35a:	3f 93       	push	r19
 35c:	4f 93       	push	r20
 35e:	5f 93       	push	r21
 360:	6f 93       	push	r22
 362:	7f 93       	push	r23
 364:	8f 93       	push	r24
 366:	9f 93       	push	r25
 368:	af 93       	push	r26
 36a:	bf 93       	push	r27
 36c:	ef 93       	push	r30
 36e:	ff 93       	push	r31
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	1f 92       	push	r1
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
	//printf("___in ISR___ \n\r");
	// user code here
	
	
	volatile uint8_t interrupt_value;
	interrupt_value = MCP2515_read( MCP_CANINTF );
 37a:	8c e2       	ldi	r24, 0x2C	; 44
 37c:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
 380:	89 83       	std	Y+1, r24	; 0x01
	
	MCP2515_bit_modify(MCP_CANINTF, interrupt_value, 0x00);
 382:	69 81       	ldd	r22, Y+1	; 0x01
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	8c e2       	ldi	r24, 0x2C	; 44
 388:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	
	//printf("Interrupt value: %d \n\r", interrupt_value);
	
	MCP_val_read = CAN_receive();
 38c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <CAN_receive>
 390:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <MCP_val_read>

}
 394:	0f 90       	pop	r0
 396:	df 91       	pop	r29
 398:	cf 91       	pop	r28
 39a:	ff 91       	pop	r31
 39c:	ef 91       	pop	r30
 39e:	bf 91       	pop	r27
 3a0:	af 91       	pop	r26
 3a2:	9f 91       	pop	r25
 3a4:	8f 91       	pop	r24
 3a6:	7f 91       	pop	r23
 3a8:	6f 91       	pop	r22
 3aa:	5f 91       	pop	r21
 3ac:	4f 91       	pop	r20
 3ae:	3f 91       	pop	r19
 3b0:	2f 91       	pop	r18
 3b2:	0f 90       	pop	r0
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	0f 90       	pop	r0
 3b8:	1f 90       	pop	r1
 3ba:	18 95       	reti

000003bc <main>:


int main(void)
{	
	xmem_init();
 3bc:	0e 94 d7 02 	call	0x5ae	; 0x5ae <xmem_init>
	adc_init();
 3c0:	0e 94 de 02 	call	0x5bc	; 0x5bc <adc_init>
	USART_Init(MYUBRR);
 3c4:	8f e1       	ldi	r24, 0x1F	; 31
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 ca 02 	call	0x594	; 0x594 <USART_Init>
	
	MCP2515_init();
 3cc:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_init>
	//OLED_clear_screen();
	//mainmenu();
	
	//SPI_MasterInit();
	
	MCP2515_set_mode(MODE_NORMAL);
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	0e 94 48 02 	call	0x490	; 0x490 <MCP2515_set_mode>
	
	
	while(1)
	{	
		uint8_t joy = adc_direction_read();
 3d6:	0e 94 04 01 	call	0x208	; 0x208 <adc_direction_read>

		adc_calibrate();
 3da:	0e 94 77 00 	call	0xee	; 0xee <adc_calibrate>
		
		interface_send_MFB_data_to_CAN();
 3de:	0e 94 76 01 	call	0x2ec	; 0x2ec <interface_send_MFB_data_to_CAN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e2:	2f ef       	ldi	r18, 0xFF	; 255
 3e4:	8f ef       	ldi	r24, 0xFF	; 255
 3e6:	92 e0       	ldi	r25, 0x02	; 2
 3e8:	21 50       	subi	r18, 0x01	; 1
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	90 40       	sbci	r25, 0x00	; 0
 3ee:	e1 f7       	brne	.-8      	; 0x3e8 <main+0x2c>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <main+0x36>
 3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <main+0x38>
 3f4:	f0 cf       	rjmp	.-32     	; 0x3d6 <main+0x1a>

000003f6 <MCP2515_read>:




uint8_t MCP2515_read(uint8_t address)
{
 3f6:	cf 93       	push	r28
 3f8:	c8 2f       	mov	r28, r24
	uint8_t result ;
	
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
 3fa:	88 b3       	in	r24, 0x18	; 24
 3fc:	8f 7e       	andi	r24, 0xEF	; 239
 3fe:	88 bb       	out	0x18, r24	; 24
	
	SPI_write( MCP_READ ); // Send read instruction
 400:	83 e0       	ldi	r24, 0x03	; 3
 402:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	SPI_write( address ); // Send address
 406:	8c 2f       	mov	r24, r28
 408:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	result = SPI_read() ; // Read result
 40c:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_read>
	
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
 410:	98 b3       	in	r25, 0x18	; 24
 412:	90 61       	ori	r25, 0x10	; 16
 414:	98 bb       	out	0x18, r25	; 24
	
	return result ;
	
	
}
 416:	cf 91       	pop	r28
 418:	08 95       	ret

0000041a <MCP2515_write>:


void MCP2515_write(uint8_t address, uint8_t data)
{
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	d8 2f       	mov	r29, r24
 420:	c6 2f       	mov	r28, r22
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
 422:	88 b3       	in	r24, 0x18	; 24
 424:	8f 7e       	andi	r24, 0xEF	; 239
 426:	88 bb       	out	0x18, r24	; 24
	
	SPI_write( MCP_WRITE ); // Send write instruction
 428:	82 e0       	ldi	r24, 0x02	; 2
 42a:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	SPI_write(address);		// Send address
 42e:	8d 2f       	mov	r24, r29
 430:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	SPI_write(data);		// Send data
 434:	8c 2f       	mov	r24, r28
 436:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
 43a:	88 b3       	in	r24, 0x18	; 24
 43c:	80 61       	ori	r24, 0x10	; 16
 43e:	88 bb       	out	0x18, r24	; 24
	
	
}
 440:	df 91       	pop	r29
 442:	cf 91       	pop	r28
 444:	08 95       	ret

00000446 <MCP2515_request_to_send>:

void MCP2515_request_to_send(uint8_t MCP_RTS_N)
{
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
 446:	98 b3       	in	r25, 0x18	; 24
 448:	9f 7e       	andi	r25, 0xEF	; 239
 44a:	98 bb       	out	0x18, r25	; 24
	
	SPI_write(MCP_RTS_N);   //Send RTS - instruction
 44c:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
 450:	88 b3       	in	r24, 0x18	; 24
 452:	80 61       	ori	r24, 0x10	; 16
 454:	88 bb       	out	0x18, r24	; 24
 456:	08 95       	ret

00000458 <MCP2515_bit_modify>:
	
}

void MCP2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data)
{
 458:	1f 93       	push	r17
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	18 2f       	mov	r17, r24
 460:	d6 2f       	mov	r29, r22
 462:	c4 2f       	mov	r28, r20
	
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
 464:	88 b3       	in	r24, 0x18	; 24
 466:	8f 7e       	andi	r24, 0xEF	; 239
 468:	88 bb       	out	0x18, r24	; 24
	
	SPI_write(MCP_BITMOD);   //Send bit modify - instruction
 46a:	85 e0       	ldi	r24, 0x05	; 5
 46c:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	SPI_write(address);		 //Send Address Byte
 470:	81 2f       	mov	r24, r17
 472:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	SPI_write(mask);		 //Send Mask Byte
 476:	8d 2f       	mov	r24, r29
 478:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	SPI_write(data);		 //Send Data Byte
 47c:	8c 2f       	mov	r24, r28
 47e:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
	
	
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
 482:	88 b3       	in	r24, 0x18	; 24
 484:	80 61       	ori	r24, 0x10	; 16
 486:	88 bb       	out	0x18, r24	; 24
	
	
}
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	1f 91       	pop	r17
 48e:	08 95       	ret

00000490 <MCP2515_set_mode>:
	
	return 0;
}

uint8_t MCP2515_set_mode(uint8_t mode)
{
 490:	cf 93       	push	r28
 492:	c8 2f       	mov	r28, r24
	uint8_t value = 0;
	
	MCP2515_bit_modify(MCP_CANCTRL,MODE_MASK,mode);
 494:	48 2f       	mov	r20, r24
 496:	60 ee       	ldi	r22, 0xE0	; 224
 498:	8f e0       	ldi	r24, 0x0F	; 15
 49a:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	
	value = MCP2515_read ( MCP_CANSTAT );
 49e:	8e e0       	ldi	r24, 0x0E	; 14
 4a0:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
	if (( value & MODE_MASK ) != mode ) {
 4a4:	80 7e       	andi	r24, 0xE0	; 224
 4a6:	8c 17       	cp	r24, r28
 4a8:	51 f0       	breq	.+20     	; 0x4be <MCP2515_set_mode+0x2e>
		printf (" mcp2515 is not changed to desired mode !\n\r");
 4aa:	83 e1       	ldi	r24, 0x13	; 19
 4ac:	91 e0       	ldi	r25, 0x01	; 1
 4ae:	9f 93       	push	r25
 4b0:	8f 93       	push	r24
 4b2:	0e 94 64 03 	call	0x6c8	; 0x6c8 <printf>
		return 1;
 4b6:	0f 90       	pop	r0
 4b8:	0f 90       	pop	r0
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	09 c0       	rjmp	.+18     	; 0x4d0 <MCP2515_set_mode+0x40>
		
	}
	
	printf("MCP successfully changed mode\n\r");
 4be:	8f e3       	ldi	r24, 0x3F	; 63
 4c0:	91 e0       	ldi	r25, 0x01	; 1
 4c2:	9f 93       	push	r25
 4c4:	8f 93       	push	r24
 4c6:	0e 94 64 03 	call	0x6c8	; 0x6c8 <printf>
	
	return 0;
 4ca:	0f 90       	pop	r0
 4cc:	0f 90       	pop	r0
 4ce:	80 e0       	ldi	r24, 0x00	; 0
	
}
 4d0:	cf 91       	pop	r28
 4d2:	08 95       	ret

000004d4 <MCP2515_reset>:
}


void MCP2515_reset(void)
{
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
 4d4:	88 b3       	in	r24, 0x18	; 24
 4d6:	8f 7e       	andi	r24, 0xEF	; 239
 4d8:	88 bb       	out	0x18, r24	; 24
		
	SPI_write(MCP_RESET);   //Send Reset - instruction
 4da:	80 ec       	ldi	r24, 0xC0	; 192
 4dc:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
		
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
 4e0:	88 b3       	in	r24, 0x18	; 24
 4e2:	80 61       	ori	r24, 0x10	; 16
 4e4:	88 bb       	out	0x18, r24	; 24
 4e6:	08 95       	ret

000004e8 <MCP2515_init>:
#include <stdio.h>


uint8_t  MCP2515_init(void)
{	
	sei(); // Set Global Interrupt Enable bit
 4e8:	78 94       	sei
	GICR |= ( 1 << INT0 ); // Set external interrupt request 0 Enable	
 4ea:	8b b7       	in	r24, 0x3b	; 59
 4ec:	80 64       	ori	r24, 0x40	; 64
 4ee:	8b bf       	out	0x3b, r24	; 59
	
	uint8_t value = 0;
	SPI_MasterInit (); // Initialize SPI
 4f0:	0e 94 af 02 	call	0x55e	; 0x55e <SPI_MasterInit>
	MCP2515_reset (); // Send reset - command
 4f4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <MCP2515_reset>
	
	// Self - test
	value = MCP2515_read ( MCP_CANSTAT );
 4f8:	8e e0       	ldi	r24, 0x0E	; 14
 4fa:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <MCP2515_read>
	
	if (( value & MODE_MASK ) != MODE_CONFIG ) {
 4fe:	80 7e       	andi	r24, 0xE0	; 224
 500:	80 38       	cpi	r24, 0x80	; 128
 502:	51 f0       	breq	.+20     	; 0x518 <__stack+0x19>
		printf (" MCP2515 is NOT in configuration mode after reset !\n\r");
 504:	8f e5       	ldi	r24, 0x5F	; 95
 506:	91 e0       	ldi	r25, 0x01	; 1
 508:	9f 93       	push	r25
 50a:	8f 93       	push	r24
 50c:	0e 94 64 03 	call	0x6c8	; 0x6c8 <printf>
		return 1;
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	08 95       	ret
		
	}
	printf("MCP in Config-mode\n\r");
 518:	85 e9       	ldi	r24, 0x95	; 149
 51a:	91 e0       	ldi	r25, 0x01	; 1
 51c:	9f 93       	push	r25
 51e:	8f 93       	push	r24
 520:	0e 94 64 03 	call	0x6c8	; 0x6c8 <printf>
	//MCK = 16 MHz
		
	//TQ length = 2/MCK = 125 ns
	
	//set length of SJW to 2*TQ and BRP to 2 => TQ = 250 ns
	MCP2515_bit_modify(MCP_CNF1,0b11111111,0x41);
 524:	41 e4       	ldi	r20, 0x41	; 65
 526:	6f ef       	ldi	r22, 0xFF	; 255
 528:	8a e2       	ldi	r24, 0x2A	; 42
 52a:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	
	//set length of phase 1 segment to 6*TQ and PROPSEG to 3 TQ
	MCP2515_bit_modify(MCP_CNF2,0b11111111,0x6A);
 52e:	4a e6       	ldi	r20, 0x6A	; 106
 530:	6f ef       	ldi	r22, 0xFF	; 255
 532:	89 e2       	ldi	r24, 0x29	; 41
 534:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	
	//set length of propagation segment to 2*TQ
	MCP2515_bit_modify(MCP_CNF3,0b00000111,0x02);
 538:	42 e0       	ldi	r20, 0x02	; 2
 53a:	67 e0       	ldi	r22, 0x07	; 7
 53c:	88 e2       	ldi	r24, 0x28	; 40
 53e:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	//Phase2 length determined by phase 1 
	
	//Enabling interrupts
	
	//set all TX-interrupt 
	MCP2515_bit_modify(MCP_CANINTE, MCP_TX_MASK, MCP_TX_INT);
 542:	4c e1       	ldi	r20, 0x1C	; 28
 544:	64 e5       	ldi	r22, 0x54	; 84
 546:	8b e2       	ldi	r24, 0x2B	; 43
 548:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	//set all RX-interrupts
	MCP2515_bit_modify(MCP_CANINTE, MCP_RX_INT, MCP_RX_INT);
 54c:	43 e0       	ldi	r20, 0x03	; 3
 54e:	63 e0       	ldi	r22, 0x03	; 3
 550:	8b e2       	ldi	r24, 0x2B	; 43
 552:	0e 94 2c 02 	call	0x458	; 0x458 <MCP2515_bit_modify>
	
	
	
	return 0;
 556:	0f 90       	pop	r0
 558:	0f 90       	pop	r0
 55a:	80 e0       	ldi	r24, 0x00	; 0
}
 55c:	08 95       	ret

0000055e <SPI_MasterInit>:
 55e:	87 b3       	in	r24, 0x17	; 23
 560:	80 6b       	ori	r24, 0xB0	; 176
 562:	87 bb       	out	0x17, r24	; 23
 564:	8d b1       	in	r24, 0x0d	; 13
 566:	81 65       	ori	r24, 0x51	; 81
 568:	8d b9       	out	0x0d, r24	; 13
 56a:	87 b3       	in	r24, 0x17	; 23
 56c:	8f 7b       	andi	r24, 0xBF	; 191
 56e:	87 bb       	out	0x17, r24	; 23
 570:	08 95       	ret

00000572 <SPI_write>:
 572:	8f b9       	out	0x0f, r24	; 15
 574:	77 9b       	sbis	0x0e, 7	; 14
 576:	fe cf       	rjmp	.-4      	; 0x574 <SPI_write+0x2>
 578:	08 95       	ret

0000057a <SPI_read>:
 57a:	8f e0       	ldi	r24, 0x0F	; 15
 57c:	0e 94 b9 02 	call	0x572	; 0x572 <SPI_write>
 580:	8f b1       	in	r24, 0x0f	; 15
 582:	08 95       	ret

00000584 <USART_Transmit>:
 584:	5d 9b       	sbis	0x0b, 5	; 11
 586:	fe cf       	rjmp	.-4      	; 0x584 <USART_Transmit>
 588:	8c b9       	out	0x0c, r24	; 12
 58a:	08 95       	ret

0000058c <USART_Receive>:
 58c:	5f 9b       	sbis	0x0b, 7	; 11
 58e:	fe cf       	rjmp	.-4      	; 0x58c <USART_Receive>
 590:	8c b1       	in	r24, 0x0c	; 12
 592:	08 95       	ret

00000594 <USART_Init>:
 594:	90 bd       	out	0x20, r25	; 32
 596:	89 b9       	out	0x09, r24	; 9
 598:	88 e1       	ldi	r24, 0x18	; 24
 59a:	8a b9       	out	0x0a, r24	; 10
 59c:	8e e8       	ldi	r24, 0x8E	; 142
 59e:	80 bd       	out	0x20, r24	; 32
 5a0:	66 ec       	ldi	r22, 0xC6	; 198
 5a2:	72 e0       	ldi	r23, 0x02	; 2
 5a4:	82 ec       	ldi	r24, 0xC2	; 194
 5a6:	92 e0       	ldi	r25, 0x02	; 2
 5a8:	0e 94 19 03 	call	0x632	; 0x632 <fdevopen>
 5ac:	08 95       	ret

000005ae <xmem_init>:
 5ae:	85 b7       	in	r24, 0x35	; 53
 5b0:	80 68       	ori	r24, 0x80	; 128
 5b2:	85 bf       	out	0x35, r24	; 53
 5b4:	80 b7       	in	r24, 0x30	; 48
 5b6:	80 62       	ori	r24, 0x20	; 32
 5b8:	80 bf       	out	0x30, r24	; 48
 5ba:	08 95       	ret

000005bc <adc_init>:
 5bc:	81 b3       	in	r24, 0x11	; 17
 5be:	80 62       	ori	r24, 0x20	; 32
 5c0:	81 bb       	out	0x11, r24	; 17
 5c2:	81 b3       	in	r24, 0x11	; 17
 5c4:	81 bb       	out	0x11, r24	; 17
 5c6:	8e b5       	in	r24, 0x2e	; 46
 5c8:	88 60       	ori	r24, 0x08	; 8
 5ca:	8e bd       	out	0x2e, r24	; 46
 5cc:	8f b5       	in	r24, 0x2f	; 47
 5ce:	8f bd       	out	0x2f, r24	; 47
 5d0:	8e b5       	in	r24, 0x2e	; 46
 5d2:	81 60       	ori	r24, 0x01	; 1
 5d4:	8e bd       	out	0x2e, r24	; 46
 5d6:	8f b5       	in	r24, 0x2f	; 47
 5d8:	80 64       	ori	r24, 0x40	; 64
 5da:	8f bd       	out	0x2f, r24	; 47
 5dc:	1b bc       	out	0x2b, r1	; 43
 5de:	1a bc       	out	0x2a, r1	; 42
 5e0:	08 95       	ret

000005e2 <__divmodhi4>:
 5e2:	97 fb       	bst	r25, 7
 5e4:	07 2e       	mov	r0, r23
 5e6:	16 f4       	brtc	.+4      	; 0x5ec <__divmodhi4+0xa>
 5e8:	00 94       	com	r0
 5ea:	07 d0       	rcall	.+14     	; 0x5fa <__divmodhi4_neg1>
 5ec:	77 fd       	sbrc	r23, 7
 5ee:	09 d0       	rcall	.+18     	; 0x602 <__divmodhi4_neg2>
 5f0:	0e 94 05 03 	call	0x60a	; 0x60a <__udivmodhi4>
 5f4:	07 fc       	sbrc	r0, 7
 5f6:	05 d0       	rcall	.+10     	; 0x602 <__divmodhi4_neg2>
 5f8:	3e f4       	brtc	.+14     	; 0x608 <__divmodhi4_exit>

000005fa <__divmodhi4_neg1>:
 5fa:	90 95       	com	r25
 5fc:	81 95       	neg	r24
 5fe:	9f 4f       	sbci	r25, 0xFF	; 255
 600:	08 95       	ret

00000602 <__divmodhi4_neg2>:
 602:	70 95       	com	r23
 604:	61 95       	neg	r22
 606:	7f 4f       	sbci	r23, 0xFF	; 255

00000608 <__divmodhi4_exit>:
 608:	08 95       	ret

0000060a <__udivmodhi4>:
 60a:	aa 1b       	sub	r26, r26
 60c:	bb 1b       	sub	r27, r27
 60e:	51 e1       	ldi	r21, 0x11	; 17
 610:	07 c0       	rjmp	.+14     	; 0x620 <__udivmodhi4_ep>

00000612 <__udivmodhi4_loop>:
 612:	aa 1f       	adc	r26, r26
 614:	bb 1f       	adc	r27, r27
 616:	a6 17       	cp	r26, r22
 618:	b7 07       	cpc	r27, r23
 61a:	10 f0       	brcs	.+4      	; 0x620 <__udivmodhi4_ep>
 61c:	a6 1b       	sub	r26, r22
 61e:	b7 0b       	sbc	r27, r23

00000620 <__udivmodhi4_ep>:
 620:	88 1f       	adc	r24, r24
 622:	99 1f       	adc	r25, r25
 624:	5a 95       	dec	r21
 626:	a9 f7       	brne	.-22     	; 0x612 <__udivmodhi4_loop>
 628:	80 95       	com	r24
 62a:	90 95       	com	r25
 62c:	bc 01       	movw	r22, r24
 62e:	cd 01       	movw	r24, r26
 630:	08 95       	ret

00000632 <fdevopen>:
 632:	0f 93       	push	r16
 634:	1f 93       	push	r17
 636:	cf 93       	push	r28
 638:	df 93       	push	r29
 63a:	00 97       	sbiw	r24, 0x00	; 0
 63c:	31 f4       	brne	.+12     	; 0x64a <fdevopen+0x18>
 63e:	61 15       	cp	r22, r1
 640:	71 05       	cpc	r23, r1
 642:	19 f4       	brne	.+6      	; 0x64a <fdevopen+0x18>
 644:	80 e0       	ldi	r24, 0x00	; 0
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	3a c0       	rjmp	.+116    	; 0x6be <fdevopen+0x8c>
 64a:	8b 01       	movw	r16, r22
 64c:	ec 01       	movw	r28, r24
 64e:	6e e0       	ldi	r22, 0x0E	; 14
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 5b 05 	call	0xab6	; 0xab6 <calloc>
 65a:	fc 01       	movw	r30, r24
 65c:	89 2b       	or	r24, r25
 65e:	91 f3       	breq	.-28     	; 0x644 <fdevopen+0x12>
 660:	80 e8       	ldi	r24, 0x80	; 128
 662:	83 83       	std	Z+3, r24	; 0x03
 664:	01 15       	cp	r16, r1
 666:	11 05       	cpc	r17, r1
 668:	71 f0       	breq	.+28     	; 0x686 <fdevopen+0x54>
 66a:	13 87       	std	Z+11, r17	; 0x0b
 66c:	02 87       	std	Z+10, r16	; 0x0a
 66e:	81 e8       	ldi	r24, 0x81	; 129
 670:	83 83       	std	Z+3, r24	; 0x03
 672:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <__iob>
 676:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <__iob+0x1>
 67a:	89 2b       	or	r24, r25
 67c:	21 f4       	brne	.+8      	; 0x686 <fdevopen+0x54>
 67e:	f0 93 b0 01 	sts	0x01B0, r31	; 0x8001b0 <__iob+0x1>
 682:	e0 93 af 01 	sts	0x01AF, r30	; 0x8001af <__iob>
 686:	20 97       	sbiw	r28, 0x00	; 0
 688:	c9 f0       	breq	.+50     	; 0x6bc <fdevopen+0x8a>
 68a:	d1 87       	std	Z+9, r29	; 0x09
 68c:	c0 87       	std	Z+8, r28	; 0x08
 68e:	83 81       	ldd	r24, Z+3	; 0x03
 690:	82 60       	ori	r24, 0x02	; 2
 692:	83 83       	std	Z+3, r24	; 0x03
 694:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <__iob+0x2>
 698:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <__iob+0x3>
 69c:	89 2b       	or	r24, r25
 69e:	71 f4       	brne	.+28     	; 0x6bc <fdevopen+0x8a>
 6a0:	f0 93 b2 01 	sts	0x01B2, r31	; 0x8001b2 <__iob+0x3>
 6a4:	e0 93 b1 01 	sts	0x01B1, r30	; 0x8001b1 <__iob+0x2>
 6a8:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <__iob+0x4>
 6ac:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <__iob+0x5>
 6b0:	89 2b       	or	r24, r25
 6b2:	21 f4       	brne	.+8      	; 0x6bc <fdevopen+0x8a>
 6b4:	f0 93 b4 01 	sts	0x01B4, r31	; 0x8001b4 <__iob+0x5>
 6b8:	e0 93 b3 01 	sts	0x01B3, r30	; 0x8001b3 <__iob+0x4>
 6bc:	cf 01       	movw	r24, r30
 6be:	df 91       	pop	r29
 6c0:	cf 91       	pop	r28
 6c2:	1f 91       	pop	r17
 6c4:	0f 91       	pop	r16
 6c6:	08 95       	ret

000006c8 <printf>:
 6c8:	a0 e0       	ldi	r26, 0x00	; 0
 6ca:	b0 e0       	ldi	r27, 0x00	; 0
 6cc:	ea e6       	ldi	r30, 0x6A	; 106
 6ce:	f3 e0       	ldi	r31, 0x03	; 3
 6d0:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__prologue_saves__+0x20>
 6d4:	ae 01       	movw	r20, r28
 6d6:	4b 5f       	subi	r20, 0xFB	; 251
 6d8:	5f 4f       	sbci	r21, 0xFF	; 255
 6da:	fa 01       	movw	r30, r20
 6dc:	61 91       	ld	r22, Z+
 6de:	71 91       	ld	r23, Z+
 6e0:	af 01       	movw	r20, r30
 6e2:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <__iob+0x2>
 6e6:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <__iob+0x3>
 6ea:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <vfprintf>
 6ee:	e2 e0       	ldi	r30, 0x02	; 2
 6f0:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__epilogue_restores__+0x20>

000006f4 <vfprintf>:
 6f4:	ab e0       	ldi	r26, 0x0B	; 11
 6f6:	b0 e0       	ldi	r27, 0x00	; 0
 6f8:	e0 e8       	ldi	r30, 0x80	; 128
 6fa:	f3 e0       	ldi	r31, 0x03	; 3
 6fc:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__prologue_saves__>
 700:	6c 01       	movw	r12, r24
 702:	7b 01       	movw	r14, r22
 704:	8a 01       	movw	r16, r20
 706:	fc 01       	movw	r30, r24
 708:	17 82       	std	Z+7, r1	; 0x07
 70a:	16 82       	std	Z+6, r1	; 0x06
 70c:	83 81       	ldd	r24, Z+3	; 0x03
 70e:	81 ff       	sbrs	r24, 1
 710:	cc c1       	rjmp	.+920    	; 0xaaa <vfprintf+0x3b6>
 712:	ce 01       	movw	r24, r28
 714:	01 96       	adiw	r24, 0x01	; 1
 716:	3c 01       	movw	r6, r24
 718:	f6 01       	movw	r30, r12
 71a:	93 81       	ldd	r25, Z+3	; 0x03
 71c:	f7 01       	movw	r30, r14
 71e:	93 fd       	sbrc	r25, 3
 720:	85 91       	lpm	r24, Z+
 722:	93 ff       	sbrs	r25, 3
 724:	81 91       	ld	r24, Z+
 726:	7f 01       	movw	r14, r30
 728:	88 23       	and	r24, r24
 72a:	09 f4       	brne	.+2      	; 0x72e <vfprintf+0x3a>
 72c:	ba c1       	rjmp	.+884    	; 0xaa2 <vfprintf+0x3ae>
 72e:	85 32       	cpi	r24, 0x25	; 37
 730:	39 f4       	brne	.+14     	; 0x740 <vfprintf+0x4c>
 732:	93 fd       	sbrc	r25, 3
 734:	85 91       	lpm	r24, Z+
 736:	93 ff       	sbrs	r25, 3
 738:	81 91       	ld	r24, Z+
 73a:	7f 01       	movw	r14, r30
 73c:	85 32       	cpi	r24, 0x25	; 37
 73e:	29 f4       	brne	.+10     	; 0x74a <vfprintf+0x56>
 740:	b6 01       	movw	r22, r12
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 748:	e7 cf       	rjmp	.-50     	; 0x718 <vfprintf+0x24>
 74a:	91 2c       	mov	r9, r1
 74c:	21 2c       	mov	r2, r1
 74e:	31 2c       	mov	r3, r1
 750:	ff e1       	ldi	r31, 0x1F	; 31
 752:	f3 15       	cp	r31, r3
 754:	d8 f0       	brcs	.+54     	; 0x78c <vfprintf+0x98>
 756:	8b 32       	cpi	r24, 0x2B	; 43
 758:	79 f0       	breq	.+30     	; 0x778 <vfprintf+0x84>
 75a:	38 f4       	brcc	.+14     	; 0x76a <vfprintf+0x76>
 75c:	80 32       	cpi	r24, 0x20	; 32
 75e:	79 f0       	breq	.+30     	; 0x77e <vfprintf+0x8a>
 760:	83 32       	cpi	r24, 0x23	; 35
 762:	a1 f4       	brne	.+40     	; 0x78c <vfprintf+0x98>
 764:	23 2d       	mov	r18, r3
 766:	20 61       	ori	r18, 0x10	; 16
 768:	1d c0       	rjmp	.+58     	; 0x7a4 <vfprintf+0xb0>
 76a:	8d 32       	cpi	r24, 0x2D	; 45
 76c:	61 f0       	breq	.+24     	; 0x786 <vfprintf+0x92>
 76e:	80 33       	cpi	r24, 0x30	; 48
 770:	69 f4       	brne	.+26     	; 0x78c <vfprintf+0x98>
 772:	23 2d       	mov	r18, r3
 774:	21 60       	ori	r18, 0x01	; 1
 776:	16 c0       	rjmp	.+44     	; 0x7a4 <vfprintf+0xb0>
 778:	83 2d       	mov	r24, r3
 77a:	82 60       	ori	r24, 0x02	; 2
 77c:	38 2e       	mov	r3, r24
 77e:	e3 2d       	mov	r30, r3
 780:	e4 60       	ori	r30, 0x04	; 4
 782:	3e 2e       	mov	r3, r30
 784:	2a c0       	rjmp	.+84     	; 0x7da <vfprintf+0xe6>
 786:	f3 2d       	mov	r31, r3
 788:	f8 60       	ori	r31, 0x08	; 8
 78a:	1d c0       	rjmp	.+58     	; 0x7c6 <vfprintf+0xd2>
 78c:	37 fc       	sbrc	r3, 7
 78e:	2d c0       	rjmp	.+90     	; 0x7ea <vfprintf+0xf6>
 790:	20 ed       	ldi	r18, 0xD0	; 208
 792:	28 0f       	add	r18, r24
 794:	2a 30       	cpi	r18, 0x0A	; 10
 796:	40 f0       	brcs	.+16     	; 0x7a8 <vfprintf+0xb4>
 798:	8e 32       	cpi	r24, 0x2E	; 46
 79a:	b9 f4       	brne	.+46     	; 0x7ca <vfprintf+0xd6>
 79c:	36 fc       	sbrc	r3, 6
 79e:	81 c1       	rjmp	.+770    	; 0xaa2 <vfprintf+0x3ae>
 7a0:	23 2d       	mov	r18, r3
 7a2:	20 64       	ori	r18, 0x40	; 64
 7a4:	32 2e       	mov	r3, r18
 7a6:	19 c0       	rjmp	.+50     	; 0x7da <vfprintf+0xe6>
 7a8:	36 fe       	sbrs	r3, 6
 7aa:	06 c0       	rjmp	.+12     	; 0x7b8 <vfprintf+0xc4>
 7ac:	8a e0       	ldi	r24, 0x0A	; 10
 7ae:	98 9e       	mul	r9, r24
 7b0:	20 0d       	add	r18, r0
 7b2:	11 24       	eor	r1, r1
 7b4:	92 2e       	mov	r9, r18
 7b6:	11 c0       	rjmp	.+34     	; 0x7da <vfprintf+0xe6>
 7b8:	ea e0       	ldi	r30, 0x0A	; 10
 7ba:	2e 9e       	mul	r2, r30
 7bc:	20 0d       	add	r18, r0
 7be:	11 24       	eor	r1, r1
 7c0:	22 2e       	mov	r2, r18
 7c2:	f3 2d       	mov	r31, r3
 7c4:	f0 62       	ori	r31, 0x20	; 32
 7c6:	3f 2e       	mov	r3, r31
 7c8:	08 c0       	rjmp	.+16     	; 0x7da <vfprintf+0xe6>
 7ca:	8c 36       	cpi	r24, 0x6C	; 108
 7cc:	21 f4       	brne	.+8      	; 0x7d6 <vfprintf+0xe2>
 7ce:	83 2d       	mov	r24, r3
 7d0:	80 68       	ori	r24, 0x80	; 128
 7d2:	38 2e       	mov	r3, r24
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0xe6>
 7d6:	88 36       	cpi	r24, 0x68	; 104
 7d8:	41 f4       	brne	.+16     	; 0x7ea <vfprintf+0xf6>
 7da:	f7 01       	movw	r30, r14
 7dc:	93 fd       	sbrc	r25, 3
 7de:	85 91       	lpm	r24, Z+
 7e0:	93 ff       	sbrs	r25, 3
 7e2:	81 91       	ld	r24, Z+
 7e4:	7f 01       	movw	r14, r30
 7e6:	81 11       	cpse	r24, r1
 7e8:	b3 cf       	rjmp	.-154    	; 0x750 <vfprintf+0x5c>
 7ea:	98 2f       	mov	r25, r24
 7ec:	9f 7d       	andi	r25, 0xDF	; 223
 7ee:	95 54       	subi	r25, 0x45	; 69
 7f0:	93 30       	cpi	r25, 0x03	; 3
 7f2:	28 f4       	brcc	.+10     	; 0x7fe <vfprintf+0x10a>
 7f4:	0c 5f       	subi	r16, 0xFC	; 252
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	9f e3       	ldi	r25, 0x3F	; 63
 7fa:	99 83       	std	Y+1, r25	; 0x01
 7fc:	0d c0       	rjmp	.+26     	; 0x818 <vfprintf+0x124>
 7fe:	83 36       	cpi	r24, 0x63	; 99
 800:	31 f0       	breq	.+12     	; 0x80e <vfprintf+0x11a>
 802:	83 37       	cpi	r24, 0x73	; 115
 804:	71 f0       	breq	.+28     	; 0x822 <vfprintf+0x12e>
 806:	83 35       	cpi	r24, 0x53	; 83
 808:	09 f0       	breq	.+2      	; 0x80c <vfprintf+0x118>
 80a:	59 c0       	rjmp	.+178    	; 0x8be <vfprintf+0x1ca>
 80c:	21 c0       	rjmp	.+66     	; 0x850 <vfprintf+0x15c>
 80e:	f8 01       	movw	r30, r16
 810:	80 81       	ld	r24, Z
 812:	89 83       	std	Y+1, r24	; 0x01
 814:	0e 5f       	subi	r16, 0xFE	; 254
 816:	1f 4f       	sbci	r17, 0xFF	; 255
 818:	88 24       	eor	r8, r8
 81a:	83 94       	inc	r8
 81c:	91 2c       	mov	r9, r1
 81e:	53 01       	movw	r10, r6
 820:	13 c0       	rjmp	.+38     	; 0x848 <vfprintf+0x154>
 822:	28 01       	movw	r4, r16
 824:	f2 e0       	ldi	r31, 0x02	; 2
 826:	4f 0e       	add	r4, r31
 828:	51 1c       	adc	r5, r1
 82a:	f8 01       	movw	r30, r16
 82c:	a0 80       	ld	r10, Z
 82e:	b1 80       	ldd	r11, Z+1	; 0x01
 830:	36 fe       	sbrs	r3, 6
 832:	03 c0       	rjmp	.+6      	; 0x83a <vfprintf+0x146>
 834:	69 2d       	mov	r22, r9
 836:	70 e0       	ldi	r23, 0x00	; 0
 838:	02 c0       	rjmp	.+4      	; 0x83e <vfprintf+0x14a>
 83a:	6f ef       	ldi	r22, 0xFF	; 255
 83c:	7f ef       	ldi	r23, 0xFF	; 255
 83e:	c5 01       	movw	r24, r10
 840:	0e 94 aa 06 	call	0xd54	; 0xd54 <strnlen>
 844:	4c 01       	movw	r8, r24
 846:	82 01       	movw	r16, r4
 848:	f3 2d       	mov	r31, r3
 84a:	ff 77       	andi	r31, 0x7F	; 127
 84c:	3f 2e       	mov	r3, r31
 84e:	16 c0       	rjmp	.+44     	; 0x87c <vfprintf+0x188>
 850:	28 01       	movw	r4, r16
 852:	22 e0       	ldi	r18, 0x02	; 2
 854:	42 0e       	add	r4, r18
 856:	51 1c       	adc	r5, r1
 858:	f8 01       	movw	r30, r16
 85a:	a0 80       	ld	r10, Z
 85c:	b1 80       	ldd	r11, Z+1	; 0x01
 85e:	36 fe       	sbrs	r3, 6
 860:	03 c0       	rjmp	.+6      	; 0x868 <vfprintf+0x174>
 862:	69 2d       	mov	r22, r9
 864:	70 e0       	ldi	r23, 0x00	; 0
 866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0x178>
 868:	6f ef       	ldi	r22, 0xFF	; 255
 86a:	7f ef       	ldi	r23, 0xFF	; 255
 86c:	c5 01       	movw	r24, r10
 86e:	0e 94 98 06 	call	0xd30	; 0xd30 <strnlen_P>
 872:	4c 01       	movw	r8, r24
 874:	f3 2d       	mov	r31, r3
 876:	f0 68       	ori	r31, 0x80	; 128
 878:	3f 2e       	mov	r3, r31
 87a:	82 01       	movw	r16, r4
 87c:	33 fc       	sbrc	r3, 3
 87e:	1b c0       	rjmp	.+54     	; 0x8b6 <vfprintf+0x1c2>
 880:	82 2d       	mov	r24, r2
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	88 16       	cp	r8, r24
 886:	99 06       	cpc	r9, r25
 888:	b0 f4       	brcc	.+44     	; 0x8b6 <vfprintf+0x1c2>
 88a:	b6 01       	movw	r22, r12
 88c:	80 e2       	ldi	r24, 0x20	; 32
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 894:	2a 94       	dec	r2
 896:	f4 cf       	rjmp	.-24     	; 0x880 <vfprintf+0x18c>
 898:	f5 01       	movw	r30, r10
 89a:	37 fc       	sbrc	r3, 7
 89c:	85 91       	lpm	r24, Z+
 89e:	37 fe       	sbrs	r3, 7
 8a0:	81 91       	ld	r24, Z+
 8a2:	5f 01       	movw	r10, r30
 8a4:	b6 01       	movw	r22, r12
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 8ac:	21 10       	cpse	r2, r1
 8ae:	2a 94       	dec	r2
 8b0:	21 e0       	ldi	r18, 0x01	; 1
 8b2:	82 1a       	sub	r8, r18
 8b4:	91 08       	sbc	r9, r1
 8b6:	81 14       	cp	r8, r1
 8b8:	91 04       	cpc	r9, r1
 8ba:	71 f7       	brne	.-36     	; 0x898 <vfprintf+0x1a4>
 8bc:	e8 c0       	rjmp	.+464    	; 0xa8e <vfprintf+0x39a>
 8be:	84 36       	cpi	r24, 0x64	; 100
 8c0:	11 f0       	breq	.+4      	; 0x8c6 <vfprintf+0x1d2>
 8c2:	89 36       	cpi	r24, 0x69	; 105
 8c4:	41 f5       	brne	.+80     	; 0x916 <vfprintf+0x222>
 8c6:	f8 01       	movw	r30, r16
 8c8:	37 fe       	sbrs	r3, 7
 8ca:	07 c0       	rjmp	.+14     	; 0x8da <vfprintf+0x1e6>
 8cc:	60 81       	ld	r22, Z
 8ce:	71 81       	ldd	r23, Z+1	; 0x01
 8d0:	82 81       	ldd	r24, Z+2	; 0x02
 8d2:	93 81       	ldd	r25, Z+3	; 0x03
 8d4:	0c 5f       	subi	r16, 0xFC	; 252
 8d6:	1f 4f       	sbci	r17, 0xFF	; 255
 8d8:	08 c0       	rjmp	.+16     	; 0x8ea <vfprintf+0x1f6>
 8da:	60 81       	ld	r22, Z
 8dc:	71 81       	ldd	r23, Z+1	; 0x01
 8de:	07 2e       	mov	r0, r23
 8e0:	00 0c       	add	r0, r0
 8e2:	88 0b       	sbc	r24, r24
 8e4:	99 0b       	sbc	r25, r25
 8e6:	0e 5f       	subi	r16, 0xFE	; 254
 8e8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ea:	f3 2d       	mov	r31, r3
 8ec:	ff 76       	andi	r31, 0x6F	; 111
 8ee:	3f 2e       	mov	r3, r31
 8f0:	97 ff       	sbrs	r25, 7
 8f2:	09 c0       	rjmp	.+18     	; 0x906 <vfprintf+0x212>
 8f4:	90 95       	com	r25
 8f6:	80 95       	com	r24
 8f8:	70 95       	com	r23
 8fa:	61 95       	neg	r22
 8fc:	7f 4f       	sbci	r23, 0xFF	; 255
 8fe:	8f 4f       	sbci	r24, 0xFF	; 255
 900:	9f 4f       	sbci	r25, 0xFF	; 255
 902:	f0 68       	ori	r31, 0x80	; 128
 904:	3f 2e       	mov	r3, r31
 906:	2a e0       	ldi	r18, 0x0A	; 10
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	a3 01       	movw	r20, r6
 90c:	0e 94 f1 06 	call	0xde2	; 0xde2 <__ultoa_invert>
 910:	88 2e       	mov	r8, r24
 912:	86 18       	sub	r8, r6
 914:	45 c0       	rjmp	.+138    	; 0x9a0 <vfprintf+0x2ac>
 916:	85 37       	cpi	r24, 0x75	; 117
 918:	31 f4       	brne	.+12     	; 0x926 <vfprintf+0x232>
 91a:	23 2d       	mov	r18, r3
 91c:	2f 7e       	andi	r18, 0xEF	; 239
 91e:	b2 2e       	mov	r11, r18
 920:	2a e0       	ldi	r18, 0x0A	; 10
 922:	30 e0       	ldi	r19, 0x00	; 0
 924:	25 c0       	rjmp	.+74     	; 0x970 <vfprintf+0x27c>
 926:	93 2d       	mov	r25, r3
 928:	99 7f       	andi	r25, 0xF9	; 249
 92a:	b9 2e       	mov	r11, r25
 92c:	8f 36       	cpi	r24, 0x6F	; 111
 92e:	c1 f0       	breq	.+48     	; 0x960 <vfprintf+0x26c>
 930:	18 f4       	brcc	.+6      	; 0x938 <vfprintf+0x244>
 932:	88 35       	cpi	r24, 0x58	; 88
 934:	79 f0       	breq	.+30     	; 0x954 <vfprintf+0x260>
 936:	b5 c0       	rjmp	.+362    	; 0xaa2 <vfprintf+0x3ae>
 938:	80 37       	cpi	r24, 0x70	; 112
 93a:	19 f0       	breq	.+6      	; 0x942 <vfprintf+0x24e>
 93c:	88 37       	cpi	r24, 0x78	; 120
 93e:	21 f0       	breq	.+8      	; 0x948 <vfprintf+0x254>
 940:	b0 c0       	rjmp	.+352    	; 0xaa2 <vfprintf+0x3ae>
 942:	e9 2f       	mov	r30, r25
 944:	e0 61       	ori	r30, 0x10	; 16
 946:	be 2e       	mov	r11, r30
 948:	b4 fe       	sbrs	r11, 4
 94a:	0d c0       	rjmp	.+26     	; 0x966 <vfprintf+0x272>
 94c:	fb 2d       	mov	r31, r11
 94e:	f4 60       	ori	r31, 0x04	; 4
 950:	bf 2e       	mov	r11, r31
 952:	09 c0       	rjmp	.+18     	; 0x966 <vfprintf+0x272>
 954:	34 fe       	sbrs	r3, 4
 956:	0a c0       	rjmp	.+20     	; 0x96c <vfprintf+0x278>
 958:	29 2f       	mov	r18, r25
 95a:	26 60       	ori	r18, 0x06	; 6
 95c:	b2 2e       	mov	r11, r18
 95e:	06 c0       	rjmp	.+12     	; 0x96c <vfprintf+0x278>
 960:	28 e0       	ldi	r18, 0x08	; 8
 962:	30 e0       	ldi	r19, 0x00	; 0
 964:	05 c0       	rjmp	.+10     	; 0x970 <vfprintf+0x27c>
 966:	20 e1       	ldi	r18, 0x10	; 16
 968:	30 e0       	ldi	r19, 0x00	; 0
 96a:	02 c0       	rjmp	.+4      	; 0x970 <vfprintf+0x27c>
 96c:	20 e1       	ldi	r18, 0x10	; 16
 96e:	32 e0       	ldi	r19, 0x02	; 2
 970:	f8 01       	movw	r30, r16
 972:	b7 fe       	sbrs	r11, 7
 974:	07 c0       	rjmp	.+14     	; 0x984 <vfprintf+0x290>
 976:	60 81       	ld	r22, Z
 978:	71 81       	ldd	r23, Z+1	; 0x01
 97a:	82 81       	ldd	r24, Z+2	; 0x02
 97c:	93 81       	ldd	r25, Z+3	; 0x03
 97e:	0c 5f       	subi	r16, 0xFC	; 252
 980:	1f 4f       	sbci	r17, 0xFF	; 255
 982:	06 c0       	rjmp	.+12     	; 0x990 <vfprintf+0x29c>
 984:	60 81       	ld	r22, Z
 986:	71 81       	ldd	r23, Z+1	; 0x01
 988:	80 e0       	ldi	r24, 0x00	; 0
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	0e 5f       	subi	r16, 0xFE	; 254
 98e:	1f 4f       	sbci	r17, 0xFF	; 255
 990:	a3 01       	movw	r20, r6
 992:	0e 94 f1 06 	call	0xde2	; 0xde2 <__ultoa_invert>
 996:	88 2e       	mov	r8, r24
 998:	86 18       	sub	r8, r6
 99a:	fb 2d       	mov	r31, r11
 99c:	ff 77       	andi	r31, 0x7F	; 127
 99e:	3f 2e       	mov	r3, r31
 9a0:	36 fe       	sbrs	r3, 6
 9a2:	0d c0       	rjmp	.+26     	; 0x9be <vfprintf+0x2ca>
 9a4:	23 2d       	mov	r18, r3
 9a6:	2e 7f       	andi	r18, 0xFE	; 254
 9a8:	a2 2e       	mov	r10, r18
 9aa:	89 14       	cp	r8, r9
 9ac:	58 f4       	brcc	.+22     	; 0x9c4 <vfprintf+0x2d0>
 9ae:	34 fe       	sbrs	r3, 4
 9b0:	0b c0       	rjmp	.+22     	; 0x9c8 <vfprintf+0x2d4>
 9b2:	32 fc       	sbrc	r3, 2
 9b4:	09 c0       	rjmp	.+18     	; 0x9c8 <vfprintf+0x2d4>
 9b6:	83 2d       	mov	r24, r3
 9b8:	8e 7e       	andi	r24, 0xEE	; 238
 9ba:	a8 2e       	mov	r10, r24
 9bc:	05 c0       	rjmp	.+10     	; 0x9c8 <vfprintf+0x2d4>
 9be:	b8 2c       	mov	r11, r8
 9c0:	a3 2c       	mov	r10, r3
 9c2:	03 c0       	rjmp	.+6      	; 0x9ca <vfprintf+0x2d6>
 9c4:	b8 2c       	mov	r11, r8
 9c6:	01 c0       	rjmp	.+2      	; 0x9ca <vfprintf+0x2d6>
 9c8:	b9 2c       	mov	r11, r9
 9ca:	a4 fe       	sbrs	r10, 4
 9cc:	0f c0       	rjmp	.+30     	; 0x9ec <vfprintf+0x2f8>
 9ce:	fe 01       	movw	r30, r28
 9d0:	e8 0d       	add	r30, r8
 9d2:	f1 1d       	adc	r31, r1
 9d4:	80 81       	ld	r24, Z
 9d6:	80 33       	cpi	r24, 0x30	; 48
 9d8:	21 f4       	brne	.+8      	; 0x9e2 <vfprintf+0x2ee>
 9da:	9a 2d       	mov	r25, r10
 9dc:	99 7e       	andi	r25, 0xE9	; 233
 9de:	a9 2e       	mov	r10, r25
 9e0:	09 c0       	rjmp	.+18     	; 0x9f4 <vfprintf+0x300>
 9e2:	a2 fe       	sbrs	r10, 2
 9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <vfprintf+0x2fe>
 9e6:	b3 94       	inc	r11
 9e8:	b3 94       	inc	r11
 9ea:	04 c0       	rjmp	.+8      	; 0x9f4 <vfprintf+0x300>
 9ec:	8a 2d       	mov	r24, r10
 9ee:	86 78       	andi	r24, 0x86	; 134
 9f0:	09 f0       	breq	.+2      	; 0x9f4 <vfprintf+0x300>
 9f2:	b3 94       	inc	r11
 9f4:	a3 fc       	sbrc	r10, 3
 9f6:	11 c0       	rjmp	.+34     	; 0xa1a <vfprintf+0x326>
 9f8:	a0 fe       	sbrs	r10, 0
 9fa:	06 c0       	rjmp	.+12     	; 0xa08 <vfprintf+0x314>
 9fc:	b2 14       	cp	r11, r2
 9fe:	88 f4       	brcc	.+34     	; 0xa22 <vfprintf+0x32e>
 a00:	28 0c       	add	r2, r8
 a02:	92 2c       	mov	r9, r2
 a04:	9b 18       	sub	r9, r11
 a06:	0e c0       	rjmp	.+28     	; 0xa24 <vfprintf+0x330>
 a08:	b2 14       	cp	r11, r2
 a0a:	60 f4       	brcc	.+24     	; 0xa24 <vfprintf+0x330>
 a0c:	b6 01       	movw	r22, r12
 a0e:	80 e2       	ldi	r24, 0x20	; 32
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 a16:	b3 94       	inc	r11
 a18:	f7 cf       	rjmp	.-18     	; 0xa08 <vfprintf+0x314>
 a1a:	b2 14       	cp	r11, r2
 a1c:	18 f4       	brcc	.+6      	; 0xa24 <vfprintf+0x330>
 a1e:	2b 18       	sub	r2, r11
 a20:	02 c0       	rjmp	.+4      	; 0xa26 <vfprintf+0x332>
 a22:	98 2c       	mov	r9, r8
 a24:	21 2c       	mov	r2, r1
 a26:	a4 fe       	sbrs	r10, 4
 a28:	10 c0       	rjmp	.+32     	; 0xa4a <vfprintf+0x356>
 a2a:	b6 01       	movw	r22, r12
 a2c:	80 e3       	ldi	r24, 0x30	; 48
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 a34:	a2 fe       	sbrs	r10, 2
 a36:	17 c0       	rjmp	.+46     	; 0xa66 <vfprintf+0x372>
 a38:	a1 fc       	sbrc	r10, 1
 a3a:	03 c0       	rjmp	.+6      	; 0xa42 <vfprintf+0x34e>
 a3c:	88 e7       	ldi	r24, 0x78	; 120
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	02 c0       	rjmp	.+4      	; 0xa46 <vfprintf+0x352>
 a42:	88 e5       	ldi	r24, 0x58	; 88
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	b6 01       	movw	r22, r12
 a48:	0c c0       	rjmp	.+24     	; 0xa62 <vfprintf+0x36e>
 a4a:	8a 2d       	mov	r24, r10
 a4c:	86 78       	andi	r24, 0x86	; 134
 a4e:	59 f0       	breq	.+22     	; 0xa66 <vfprintf+0x372>
 a50:	a1 fe       	sbrs	r10, 1
 a52:	02 c0       	rjmp	.+4      	; 0xa58 <vfprintf+0x364>
 a54:	8b e2       	ldi	r24, 0x2B	; 43
 a56:	01 c0       	rjmp	.+2      	; 0xa5a <vfprintf+0x366>
 a58:	80 e2       	ldi	r24, 0x20	; 32
 a5a:	a7 fc       	sbrc	r10, 7
 a5c:	8d e2       	ldi	r24, 0x2D	; 45
 a5e:	b6 01       	movw	r22, r12
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 a66:	89 14       	cp	r8, r9
 a68:	38 f4       	brcc	.+14     	; 0xa78 <vfprintf+0x384>
 a6a:	b6 01       	movw	r22, r12
 a6c:	80 e3       	ldi	r24, 0x30	; 48
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 a74:	9a 94       	dec	r9
 a76:	f7 cf       	rjmp	.-18     	; 0xa66 <vfprintf+0x372>
 a78:	8a 94       	dec	r8
 a7a:	f3 01       	movw	r30, r6
 a7c:	e8 0d       	add	r30, r8
 a7e:	f1 1d       	adc	r31, r1
 a80:	80 81       	ld	r24, Z
 a82:	b6 01       	movw	r22, r12
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 a8a:	81 10       	cpse	r8, r1
 a8c:	f5 cf       	rjmp	.-22     	; 0xa78 <vfprintf+0x384>
 a8e:	22 20       	and	r2, r2
 a90:	09 f4       	brne	.+2      	; 0xa94 <vfprintf+0x3a0>
 a92:	42 ce       	rjmp	.-892    	; 0x718 <vfprintf+0x24>
 a94:	b6 01       	movw	r22, r12
 a96:	80 e2       	ldi	r24, 0x20	; 32
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <fputc>
 a9e:	2a 94       	dec	r2
 aa0:	f6 cf       	rjmp	.-20     	; 0xa8e <vfprintf+0x39a>
 aa2:	f6 01       	movw	r30, r12
 aa4:	86 81       	ldd	r24, Z+6	; 0x06
 aa6:	97 81       	ldd	r25, Z+7	; 0x07
 aa8:	02 c0       	rjmp	.+4      	; 0xaae <vfprintf+0x3ba>
 aaa:	8f ef       	ldi	r24, 0xFF	; 255
 aac:	9f ef       	ldi	r25, 0xFF	; 255
 aae:	2b 96       	adiw	r28, 0x0b	; 11
 ab0:	e2 e1       	ldi	r30, 0x12	; 18
 ab2:	0c 94 6b 07 	jmp	0xed6	; 0xed6 <__epilogue_restores__>

00000ab6 <calloc>:
 ab6:	0f 93       	push	r16
 ab8:	1f 93       	push	r17
 aba:	cf 93       	push	r28
 abc:	df 93       	push	r29
 abe:	86 9f       	mul	r24, r22
 ac0:	80 01       	movw	r16, r0
 ac2:	87 9f       	mul	r24, r23
 ac4:	10 0d       	add	r17, r0
 ac6:	96 9f       	mul	r25, r22
 ac8:	10 0d       	add	r17, r0
 aca:	11 24       	eor	r1, r1
 acc:	c8 01       	movw	r24, r16
 ace:	0e 94 77 05 	call	0xaee	; 0xaee <malloc>
 ad2:	ec 01       	movw	r28, r24
 ad4:	00 97       	sbiw	r24, 0x00	; 0
 ad6:	29 f0       	breq	.+10     	; 0xae2 <calloc+0x2c>
 ad8:	a8 01       	movw	r20, r16
 ada:	60 e0       	ldi	r22, 0x00	; 0
 adc:	70 e0       	ldi	r23, 0x00	; 0
 ade:	0e 94 a3 06 	call	0xd46	; 0xd46 <memset>
 ae2:	ce 01       	movw	r24, r28
 ae4:	df 91       	pop	r29
 ae6:	cf 91       	pop	r28
 ae8:	1f 91       	pop	r17
 aea:	0f 91       	pop	r16
 aec:	08 95       	ret

00000aee <malloc>:
 aee:	0f 93       	push	r16
 af0:	1f 93       	push	r17
 af2:	cf 93       	push	r28
 af4:	df 93       	push	r29
 af6:	82 30       	cpi	r24, 0x02	; 2
 af8:	91 05       	cpc	r25, r1
 afa:	10 f4       	brcc	.+4      	; 0xb00 <malloc+0x12>
 afc:	82 e0       	ldi	r24, 0x02	; 2
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <__flp>
 b04:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <__flp+0x1>
 b08:	20 e0       	ldi	r18, 0x00	; 0
 b0a:	30 e0       	ldi	r19, 0x00	; 0
 b0c:	a0 e0       	ldi	r26, 0x00	; 0
 b0e:	b0 e0       	ldi	r27, 0x00	; 0
 b10:	30 97       	sbiw	r30, 0x00	; 0
 b12:	19 f1       	breq	.+70     	; 0xb5a <malloc+0x6c>
 b14:	40 81       	ld	r20, Z
 b16:	51 81       	ldd	r21, Z+1	; 0x01
 b18:	02 81       	ldd	r16, Z+2	; 0x02
 b1a:	13 81       	ldd	r17, Z+3	; 0x03
 b1c:	48 17       	cp	r20, r24
 b1e:	59 07       	cpc	r21, r25
 b20:	c8 f0       	brcs	.+50     	; 0xb54 <malloc+0x66>
 b22:	84 17       	cp	r24, r20
 b24:	95 07       	cpc	r25, r21
 b26:	69 f4       	brne	.+26     	; 0xb42 <malloc+0x54>
 b28:	10 97       	sbiw	r26, 0x00	; 0
 b2a:	31 f0       	breq	.+12     	; 0xb38 <malloc+0x4a>
 b2c:	12 96       	adiw	r26, 0x02	; 2
 b2e:	0c 93       	st	X, r16
 b30:	12 97       	sbiw	r26, 0x02	; 2
 b32:	13 96       	adiw	r26, 0x03	; 3
 b34:	1c 93       	st	X, r17
 b36:	27 c0       	rjmp	.+78     	; 0xb86 <malloc+0x98>
 b38:	00 93 b7 01 	sts	0x01B7, r16	; 0x8001b7 <__flp>
 b3c:	10 93 b8 01 	sts	0x01B8, r17	; 0x8001b8 <__flp+0x1>
 b40:	22 c0       	rjmp	.+68     	; 0xb86 <malloc+0x98>
 b42:	21 15       	cp	r18, r1
 b44:	31 05       	cpc	r19, r1
 b46:	19 f0       	breq	.+6      	; 0xb4e <malloc+0x60>
 b48:	42 17       	cp	r20, r18
 b4a:	53 07       	cpc	r21, r19
 b4c:	18 f4       	brcc	.+6      	; 0xb54 <malloc+0x66>
 b4e:	9a 01       	movw	r18, r20
 b50:	bd 01       	movw	r22, r26
 b52:	ef 01       	movw	r28, r30
 b54:	df 01       	movw	r26, r30
 b56:	f8 01       	movw	r30, r16
 b58:	db cf       	rjmp	.-74     	; 0xb10 <malloc+0x22>
 b5a:	21 15       	cp	r18, r1
 b5c:	31 05       	cpc	r19, r1
 b5e:	f9 f0       	breq	.+62     	; 0xb9e <malloc+0xb0>
 b60:	28 1b       	sub	r18, r24
 b62:	39 0b       	sbc	r19, r25
 b64:	24 30       	cpi	r18, 0x04	; 4
 b66:	31 05       	cpc	r19, r1
 b68:	80 f4       	brcc	.+32     	; 0xb8a <malloc+0x9c>
 b6a:	8a 81       	ldd	r24, Y+2	; 0x02
 b6c:	9b 81       	ldd	r25, Y+3	; 0x03
 b6e:	61 15       	cp	r22, r1
 b70:	71 05       	cpc	r23, r1
 b72:	21 f0       	breq	.+8      	; 0xb7c <malloc+0x8e>
 b74:	fb 01       	movw	r30, r22
 b76:	93 83       	std	Z+3, r25	; 0x03
 b78:	82 83       	std	Z+2, r24	; 0x02
 b7a:	04 c0       	rjmp	.+8      	; 0xb84 <malloc+0x96>
 b7c:	90 93 b8 01 	sts	0x01B8, r25	; 0x8001b8 <__flp+0x1>
 b80:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <__flp>
 b84:	fe 01       	movw	r30, r28
 b86:	32 96       	adiw	r30, 0x02	; 2
 b88:	44 c0       	rjmp	.+136    	; 0xc12 <malloc+0x124>
 b8a:	fe 01       	movw	r30, r28
 b8c:	e2 0f       	add	r30, r18
 b8e:	f3 1f       	adc	r31, r19
 b90:	81 93       	st	Z+, r24
 b92:	91 93       	st	Z+, r25
 b94:	22 50       	subi	r18, 0x02	; 2
 b96:	31 09       	sbc	r19, r1
 b98:	39 83       	std	Y+1, r19	; 0x01
 b9a:	28 83       	st	Y, r18
 b9c:	3a c0       	rjmp	.+116    	; 0xc12 <malloc+0x124>
 b9e:	20 91 b5 01 	lds	r18, 0x01B5	; 0x8001b5 <__brkval>
 ba2:	30 91 b6 01 	lds	r19, 0x01B6	; 0x8001b6 <__brkval+0x1>
 ba6:	23 2b       	or	r18, r19
 ba8:	41 f4       	brne	.+16     	; 0xbba <malloc+0xcc>
 baa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 bae:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 bb2:	30 93 b6 01 	sts	0x01B6, r19	; 0x8001b6 <__brkval+0x1>
 bb6:	20 93 b5 01 	sts	0x01B5, r18	; 0x8001b5 <__brkval>
 bba:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 bbe:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 bc2:	21 15       	cp	r18, r1
 bc4:	31 05       	cpc	r19, r1
 bc6:	41 f4       	brne	.+16     	; 0xbd8 <malloc+0xea>
 bc8:	2d b7       	in	r18, 0x3d	; 61
 bca:	3e b7       	in	r19, 0x3e	; 62
 bcc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 bd0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 bd4:	24 1b       	sub	r18, r20
 bd6:	35 0b       	sbc	r19, r21
 bd8:	e0 91 b5 01 	lds	r30, 0x01B5	; 0x8001b5 <__brkval>
 bdc:	f0 91 b6 01 	lds	r31, 0x01B6	; 0x8001b6 <__brkval+0x1>
 be0:	e2 17       	cp	r30, r18
 be2:	f3 07       	cpc	r31, r19
 be4:	a0 f4       	brcc	.+40     	; 0xc0e <malloc+0x120>
 be6:	2e 1b       	sub	r18, r30
 be8:	3f 0b       	sbc	r19, r31
 bea:	28 17       	cp	r18, r24
 bec:	39 07       	cpc	r19, r25
 bee:	78 f0       	brcs	.+30     	; 0xc0e <malloc+0x120>
 bf0:	ac 01       	movw	r20, r24
 bf2:	4e 5f       	subi	r20, 0xFE	; 254
 bf4:	5f 4f       	sbci	r21, 0xFF	; 255
 bf6:	24 17       	cp	r18, r20
 bf8:	35 07       	cpc	r19, r21
 bfa:	48 f0       	brcs	.+18     	; 0xc0e <malloc+0x120>
 bfc:	4e 0f       	add	r20, r30
 bfe:	5f 1f       	adc	r21, r31
 c00:	50 93 b6 01 	sts	0x01B6, r21	; 0x8001b6 <__brkval+0x1>
 c04:	40 93 b5 01 	sts	0x01B5, r20	; 0x8001b5 <__brkval>
 c08:	81 93       	st	Z+, r24
 c0a:	91 93       	st	Z+, r25
 c0c:	02 c0       	rjmp	.+4      	; 0xc12 <malloc+0x124>
 c0e:	e0 e0       	ldi	r30, 0x00	; 0
 c10:	f0 e0       	ldi	r31, 0x00	; 0
 c12:	cf 01       	movw	r24, r30
 c14:	df 91       	pop	r29
 c16:	cf 91       	pop	r28
 c18:	1f 91       	pop	r17
 c1a:	0f 91       	pop	r16
 c1c:	08 95       	ret

00000c1e <free>:
 c1e:	cf 93       	push	r28
 c20:	df 93       	push	r29
 c22:	00 97       	sbiw	r24, 0x00	; 0
 c24:	09 f4       	brne	.+2      	; 0xc28 <free+0xa>
 c26:	81 c0       	rjmp	.+258    	; 0xd2a <free+0x10c>
 c28:	fc 01       	movw	r30, r24
 c2a:	32 97       	sbiw	r30, 0x02	; 2
 c2c:	13 82       	std	Z+3, r1	; 0x03
 c2e:	12 82       	std	Z+2, r1	; 0x02
 c30:	a0 91 b7 01 	lds	r26, 0x01B7	; 0x8001b7 <__flp>
 c34:	b0 91 b8 01 	lds	r27, 0x01B8	; 0x8001b8 <__flp+0x1>
 c38:	10 97       	sbiw	r26, 0x00	; 0
 c3a:	81 f4       	brne	.+32     	; 0xc5c <free+0x3e>
 c3c:	20 81       	ld	r18, Z
 c3e:	31 81       	ldd	r19, Z+1	; 0x01
 c40:	82 0f       	add	r24, r18
 c42:	93 1f       	adc	r25, r19
 c44:	20 91 b5 01 	lds	r18, 0x01B5	; 0x8001b5 <__brkval>
 c48:	30 91 b6 01 	lds	r19, 0x01B6	; 0x8001b6 <__brkval+0x1>
 c4c:	28 17       	cp	r18, r24
 c4e:	39 07       	cpc	r19, r25
 c50:	51 f5       	brne	.+84     	; 0xca6 <free+0x88>
 c52:	f0 93 b6 01 	sts	0x01B6, r31	; 0x8001b6 <__brkval+0x1>
 c56:	e0 93 b5 01 	sts	0x01B5, r30	; 0x8001b5 <__brkval>
 c5a:	67 c0       	rjmp	.+206    	; 0xd2a <free+0x10c>
 c5c:	ed 01       	movw	r28, r26
 c5e:	20 e0       	ldi	r18, 0x00	; 0
 c60:	30 e0       	ldi	r19, 0x00	; 0
 c62:	ce 17       	cp	r28, r30
 c64:	df 07       	cpc	r29, r31
 c66:	40 f4       	brcc	.+16     	; 0xc78 <free+0x5a>
 c68:	4a 81       	ldd	r20, Y+2	; 0x02
 c6a:	5b 81       	ldd	r21, Y+3	; 0x03
 c6c:	9e 01       	movw	r18, r28
 c6e:	41 15       	cp	r20, r1
 c70:	51 05       	cpc	r21, r1
 c72:	f1 f0       	breq	.+60     	; 0xcb0 <free+0x92>
 c74:	ea 01       	movw	r28, r20
 c76:	f5 cf       	rjmp	.-22     	; 0xc62 <free+0x44>
 c78:	d3 83       	std	Z+3, r29	; 0x03
 c7a:	c2 83       	std	Z+2, r28	; 0x02
 c7c:	40 81       	ld	r20, Z
 c7e:	51 81       	ldd	r21, Z+1	; 0x01
 c80:	84 0f       	add	r24, r20
 c82:	95 1f       	adc	r25, r21
 c84:	c8 17       	cp	r28, r24
 c86:	d9 07       	cpc	r29, r25
 c88:	59 f4       	brne	.+22     	; 0xca0 <free+0x82>
 c8a:	88 81       	ld	r24, Y
 c8c:	99 81       	ldd	r25, Y+1	; 0x01
 c8e:	84 0f       	add	r24, r20
 c90:	95 1f       	adc	r25, r21
 c92:	02 96       	adiw	r24, 0x02	; 2
 c94:	91 83       	std	Z+1, r25	; 0x01
 c96:	80 83       	st	Z, r24
 c98:	8a 81       	ldd	r24, Y+2	; 0x02
 c9a:	9b 81       	ldd	r25, Y+3	; 0x03
 c9c:	93 83       	std	Z+3, r25	; 0x03
 c9e:	82 83       	std	Z+2, r24	; 0x02
 ca0:	21 15       	cp	r18, r1
 ca2:	31 05       	cpc	r19, r1
 ca4:	29 f4       	brne	.+10     	; 0xcb0 <free+0x92>
 ca6:	f0 93 b8 01 	sts	0x01B8, r31	; 0x8001b8 <__flp+0x1>
 caa:	e0 93 b7 01 	sts	0x01B7, r30	; 0x8001b7 <__flp>
 cae:	3d c0       	rjmp	.+122    	; 0xd2a <free+0x10c>
 cb0:	e9 01       	movw	r28, r18
 cb2:	fb 83       	std	Y+3, r31	; 0x03
 cb4:	ea 83       	std	Y+2, r30	; 0x02
 cb6:	49 91       	ld	r20, Y+
 cb8:	59 91       	ld	r21, Y+
 cba:	c4 0f       	add	r28, r20
 cbc:	d5 1f       	adc	r29, r21
 cbe:	ec 17       	cp	r30, r28
 cc0:	fd 07       	cpc	r31, r29
 cc2:	61 f4       	brne	.+24     	; 0xcdc <free+0xbe>
 cc4:	80 81       	ld	r24, Z
 cc6:	91 81       	ldd	r25, Z+1	; 0x01
 cc8:	84 0f       	add	r24, r20
 cca:	95 1f       	adc	r25, r21
 ccc:	02 96       	adiw	r24, 0x02	; 2
 cce:	e9 01       	movw	r28, r18
 cd0:	99 83       	std	Y+1, r25	; 0x01
 cd2:	88 83       	st	Y, r24
 cd4:	82 81       	ldd	r24, Z+2	; 0x02
 cd6:	93 81       	ldd	r25, Z+3	; 0x03
 cd8:	9b 83       	std	Y+3, r25	; 0x03
 cda:	8a 83       	std	Y+2, r24	; 0x02
 cdc:	e0 e0       	ldi	r30, 0x00	; 0
 cde:	f0 e0       	ldi	r31, 0x00	; 0
 ce0:	12 96       	adiw	r26, 0x02	; 2
 ce2:	8d 91       	ld	r24, X+
 ce4:	9c 91       	ld	r25, X
 ce6:	13 97       	sbiw	r26, 0x03	; 3
 ce8:	00 97       	sbiw	r24, 0x00	; 0
 cea:	19 f0       	breq	.+6      	; 0xcf2 <free+0xd4>
 cec:	fd 01       	movw	r30, r26
 cee:	dc 01       	movw	r26, r24
 cf0:	f7 cf       	rjmp	.-18     	; 0xce0 <free+0xc2>
 cf2:	8d 91       	ld	r24, X+
 cf4:	9c 91       	ld	r25, X
 cf6:	11 97       	sbiw	r26, 0x01	; 1
 cf8:	9d 01       	movw	r18, r26
 cfa:	2e 5f       	subi	r18, 0xFE	; 254
 cfc:	3f 4f       	sbci	r19, 0xFF	; 255
 cfe:	82 0f       	add	r24, r18
 d00:	93 1f       	adc	r25, r19
 d02:	20 91 b5 01 	lds	r18, 0x01B5	; 0x8001b5 <__brkval>
 d06:	30 91 b6 01 	lds	r19, 0x01B6	; 0x8001b6 <__brkval+0x1>
 d0a:	28 17       	cp	r18, r24
 d0c:	39 07       	cpc	r19, r25
 d0e:	69 f4       	brne	.+26     	; 0xd2a <free+0x10c>
 d10:	30 97       	sbiw	r30, 0x00	; 0
 d12:	29 f4       	brne	.+10     	; 0xd1e <free+0x100>
 d14:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <__flp+0x1>
 d18:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <__flp>
 d1c:	02 c0       	rjmp	.+4      	; 0xd22 <free+0x104>
 d1e:	13 82       	std	Z+3, r1	; 0x03
 d20:	12 82       	std	Z+2, r1	; 0x02
 d22:	b0 93 b6 01 	sts	0x01B6, r27	; 0x8001b6 <__brkval+0x1>
 d26:	a0 93 b5 01 	sts	0x01B5, r26	; 0x8001b5 <__brkval>
 d2a:	df 91       	pop	r29
 d2c:	cf 91       	pop	r28
 d2e:	08 95       	ret

00000d30 <strnlen_P>:
 d30:	fc 01       	movw	r30, r24
 d32:	05 90       	lpm	r0, Z+
 d34:	61 50       	subi	r22, 0x01	; 1
 d36:	70 40       	sbci	r23, 0x00	; 0
 d38:	01 10       	cpse	r0, r1
 d3a:	d8 f7       	brcc	.-10     	; 0xd32 <strnlen_P+0x2>
 d3c:	80 95       	com	r24
 d3e:	90 95       	com	r25
 d40:	8e 0f       	add	r24, r30
 d42:	9f 1f       	adc	r25, r31
 d44:	08 95       	ret

00000d46 <memset>:
 d46:	dc 01       	movw	r26, r24
 d48:	01 c0       	rjmp	.+2      	; 0xd4c <memset+0x6>
 d4a:	6d 93       	st	X+, r22
 d4c:	41 50       	subi	r20, 0x01	; 1
 d4e:	50 40       	sbci	r21, 0x00	; 0
 d50:	e0 f7       	brcc	.-8      	; 0xd4a <memset+0x4>
 d52:	08 95       	ret

00000d54 <strnlen>:
 d54:	fc 01       	movw	r30, r24
 d56:	61 50       	subi	r22, 0x01	; 1
 d58:	70 40       	sbci	r23, 0x00	; 0
 d5a:	01 90       	ld	r0, Z+
 d5c:	01 10       	cpse	r0, r1
 d5e:	d8 f7       	brcc	.-10     	; 0xd56 <strnlen+0x2>
 d60:	80 95       	com	r24
 d62:	90 95       	com	r25
 d64:	8e 0f       	add	r24, r30
 d66:	9f 1f       	adc	r25, r31
 d68:	08 95       	ret

00000d6a <fputc>:
 d6a:	0f 93       	push	r16
 d6c:	1f 93       	push	r17
 d6e:	cf 93       	push	r28
 d70:	df 93       	push	r29
 d72:	fb 01       	movw	r30, r22
 d74:	23 81       	ldd	r18, Z+3	; 0x03
 d76:	21 fd       	sbrc	r18, 1
 d78:	03 c0       	rjmp	.+6      	; 0xd80 <fputc+0x16>
 d7a:	8f ef       	ldi	r24, 0xFF	; 255
 d7c:	9f ef       	ldi	r25, 0xFF	; 255
 d7e:	2c c0       	rjmp	.+88     	; 0xdd8 <fputc+0x6e>
 d80:	22 ff       	sbrs	r18, 2
 d82:	16 c0       	rjmp	.+44     	; 0xdb0 <fputc+0x46>
 d84:	46 81       	ldd	r20, Z+6	; 0x06
 d86:	57 81       	ldd	r21, Z+7	; 0x07
 d88:	24 81       	ldd	r18, Z+4	; 0x04
 d8a:	35 81       	ldd	r19, Z+5	; 0x05
 d8c:	42 17       	cp	r20, r18
 d8e:	53 07       	cpc	r21, r19
 d90:	44 f4       	brge	.+16     	; 0xda2 <fputc+0x38>
 d92:	a0 81       	ld	r26, Z
 d94:	b1 81       	ldd	r27, Z+1	; 0x01
 d96:	9d 01       	movw	r18, r26
 d98:	2f 5f       	subi	r18, 0xFF	; 255
 d9a:	3f 4f       	sbci	r19, 0xFF	; 255
 d9c:	31 83       	std	Z+1, r19	; 0x01
 d9e:	20 83       	st	Z, r18
 da0:	8c 93       	st	X, r24
 da2:	26 81       	ldd	r18, Z+6	; 0x06
 da4:	37 81       	ldd	r19, Z+7	; 0x07
 da6:	2f 5f       	subi	r18, 0xFF	; 255
 da8:	3f 4f       	sbci	r19, 0xFF	; 255
 daa:	37 83       	std	Z+7, r19	; 0x07
 dac:	26 83       	std	Z+6, r18	; 0x06
 dae:	14 c0       	rjmp	.+40     	; 0xdd8 <fputc+0x6e>
 db0:	8b 01       	movw	r16, r22
 db2:	ec 01       	movw	r28, r24
 db4:	fb 01       	movw	r30, r22
 db6:	00 84       	ldd	r0, Z+8	; 0x08
 db8:	f1 85       	ldd	r31, Z+9	; 0x09
 dba:	e0 2d       	mov	r30, r0
 dbc:	09 95       	icall
 dbe:	89 2b       	or	r24, r25
 dc0:	e1 f6       	brne	.-72     	; 0xd7a <fputc+0x10>
 dc2:	d8 01       	movw	r26, r16
 dc4:	16 96       	adiw	r26, 0x06	; 6
 dc6:	8d 91       	ld	r24, X+
 dc8:	9c 91       	ld	r25, X
 dca:	17 97       	sbiw	r26, 0x07	; 7
 dcc:	01 96       	adiw	r24, 0x01	; 1
 dce:	17 96       	adiw	r26, 0x07	; 7
 dd0:	9c 93       	st	X, r25
 dd2:	8e 93       	st	-X, r24
 dd4:	16 97       	sbiw	r26, 0x06	; 6
 dd6:	ce 01       	movw	r24, r28
 dd8:	df 91       	pop	r29
 dda:	cf 91       	pop	r28
 ddc:	1f 91       	pop	r17
 dde:	0f 91       	pop	r16
 de0:	08 95       	ret

00000de2 <__ultoa_invert>:
 de2:	fa 01       	movw	r30, r20
 de4:	aa 27       	eor	r26, r26
 de6:	28 30       	cpi	r18, 0x08	; 8
 de8:	51 f1       	breq	.+84     	; 0xe3e <__ultoa_invert+0x5c>
 dea:	20 31       	cpi	r18, 0x10	; 16
 dec:	81 f1       	breq	.+96     	; 0xe4e <__ultoa_invert+0x6c>
 dee:	e8 94       	clt
 df0:	6f 93       	push	r22
 df2:	6e 7f       	andi	r22, 0xFE	; 254
 df4:	6e 5f       	subi	r22, 0xFE	; 254
 df6:	7f 4f       	sbci	r23, 0xFF	; 255
 df8:	8f 4f       	sbci	r24, 0xFF	; 255
 dfa:	9f 4f       	sbci	r25, 0xFF	; 255
 dfc:	af 4f       	sbci	r26, 0xFF	; 255
 dfe:	b1 e0       	ldi	r27, 0x01	; 1
 e00:	3e d0       	rcall	.+124    	; 0xe7e <__ultoa_invert+0x9c>
 e02:	b4 e0       	ldi	r27, 0x04	; 4
 e04:	3c d0       	rcall	.+120    	; 0xe7e <__ultoa_invert+0x9c>
 e06:	67 0f       	add	r22, r23
 e08:	78 1f       	adc	r23, r24
 e0a:	89 1f       	adc	r24, r25
 e0c:	9a 1f       	adc	r25, r26
 e0e:	a1 1d       	adc	r26, r1
 e10:	68 0f       	add	r22, r24
 e12:	79 1f       	adc	r23, r25
 e14:	8a 1f       	adc	r24, r26
 e16:	91 1d       	adc	r25, r1
 e18:	a1 1d       	adc	r26, r1
 e1a:	6a 0f       	add	r22, r26
 e1c:	71 1d       	adc	r23, r1
 e1e:	81 1d       	adc	r24, r1
 e20:	91 1d       	adc	r25, r1
 e22:	a1 1d       	adc	r26, r1
 e24:	20 d0       	rcall	.+64     	; 0xe66 <__ultoa_invert+0x84>
 e26:	09 f4       	brne	.+2      	; 0xe2a <__ultoa_invert+0x48>
 e28:	68 94       	set
 e2a:	3f 91       	pop	r19
 e2c:	2a e0       	ldi	r18, 0x0A	; 10
 e2e:	26 9f       	mul	r18, r22
 e30:	11 24       	eor	r1, r1
 e32:	30 19       	sub	r19, r0
 e34:	30 5d       	subi	r19, 0xD0	; 208
 e36:	31 93       	st	Z+, r19
 e38:	de f6       	brtc	.-74     	; 0xdf0 <__ultoa_invert+0xe>
 e3a:	cf 01       	movw	r24, r30
 e3c:	08 95       	ret
 e3e:	46 2f       	mov	r20, r22
 e40:	47 70       	andi	r20, 0x07	; 7
 e42:	40 5d       	subi	r20, 0xD0	; 208
 e44:	41 93       	st	Z+, r20
 e46:	b3 e0       	ldi	r27, 0x03	; 3
 e48:	0f d0       	rcall	.+30     	; 0xe68 <__ultoa_invert+0x86>
 e4a:	c9 f7       	brne	.-14     	; 0xe3e <__ultoa_invert+0x5c>
 e4c:	f6 cf       	rjmp	.-20     	; 0xe3a <__ultoa_invert+0x58>
 e4e:	46 2f       	mov	r20, r22
 e50:	4f 70       	andi	r20, 0x0F	; 15
 e52:	40 5d       	subi	r20, 0xD0	; 208
 e54:	4a 33       	cpi	r20, 0x3A	; 58
 e56:	18 f0       	brcs	.+6      	; 0xe5e <__ultoa_invert+0x7c>
 e58:	49 5d       	subi	r20, 0xD9	; 217
 e5a:	31 fd       	sbrc	r19, 1
 e5c:	40 52       	subi	r20, 0x20	; 32
 e5e:	41 93       	st	Z+, r20
 e60:	02 d0       	rcall	.+4      	; 0xe66 <__ultoa_invert+0x84>
 e62:	a9 f7       	brne	.-22     	; 0xe4e <__ultoa_invert+0x6c>
 e64:	ea cf       	rjmp	.-44     	; 0xe3a <__ultoa_invert+0x58>
 e66:	b4 e0       	ldi	r27, 0x04	; 4
 e68:	a6 95       	lsr	r26
 e6a:	97 95       	ror	r25
 e6c:	87 95       	ror	r24
 e6e:	77 95       	ror	r23
 e70:	67 95       	ror	r22
 e72:	ba 95       	dec	r27
 e74:	c9 f7       	brne	.-14     	; 0xe68 <__ultoa_invert+0x86>
 e76:	00 97       	sbiw	r24, 0x00	; 0
 e78:	61 05       	cpc	r22, r1
 e7a:	71 05       	cpc	r23, r1
 e7c:	08 95       	ret
 e7e:	9b 01       	movw	r18, r22
 e80:	ac 01       	movw	r20, r24
 e82:	0a 2e       	mov	r0, r26
 e84:	06 94       	lsr	r0
 e86:	57 95       	ror	r21
 e88:	47 95       	ror	r20
 e8a:	37 95       	ror	r19
 e8c:	27 95       	ror	r18
 e8e:	ba 95       	dec	r27
 e90:	c9 f7       	brne	.-14     	; 0xe84 <__ultoa_invert+0xa2>
 e92:	62 0f       	add	r22, r18
 e94:	73 1f       	adc	r23, r19
 e96:	84 1f       	adc	r24, r20
 e98:	95 1f       	adc	r25, r21
 e9a:	a0 1d       	adc	r26, r0
 e9c:	08 95       	ret

00000e9e <__prologue_saves__>:
 e9e:	2f 92       	push	r2
 ea0:	3f 92       	push	r3
 ea2:	4f 92       	push	r4
 ea4:	5f 92       	push	r5
 ea6:	6f 92       	push	r6
 ea8:	7f 92       	push	r7
 eaa:	8f 92       	push	r8
 eac:	9f 92       	push	r9
 eae:	af 92       	push	r10
 eb0:	bf 92       	push	r11
 eb2:	cf 92       	push	r12
 eb4:	df 92       	push	r13
 eb6:	ef 92       	push	r14
 eb8:	ff 92       	push	r15
 eba:	0f 93       	push	r16
 ebc:	1f 93       	push	r17
 ebe:	cf 93       	push	r28
 ec0:	df 93       	push	r29
 ec2:	cd b7       	in	r28, 0x3d	; 61
 ec4:	de b7       	in	r29, 0x3e	; 62
 ec6:	ca 1b       	sub	r28, r26
 ec8:	db 0b       	sbc	r29, r27
 eca:	0f b6       	in	r0, 0x3f	; 63
 ecc:	f8 94       	cli
 ece:	de bf       	out	0x3e, r29	; 62
 ed0:	0f be       	out	0x3f, r0	; 63
 ed2:	cd bf       	out	0x3d, r28	; 61
 ed4:	09 94       	ijmp

00000ed6 <__epilogue_restores__>:
 ed6:	2a 88       	ldd	r2, Y+18	; 0x12
 ed8:	39 88       	ldd	r3, Y+17	; 0x11
 eda:	48 88       	ldd	r4, Y+16	; 0x10
 edc:	5f 84       	ldd	r5, Y+15	; 0x0f
 ede:	6e 84       	ldd	r6, Y+14	; 0x0e
 ee0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ee2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ee4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ee6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ee8:	b9 84       	ldd	r11, Y+9	; 0x09
 eea:	c8 84       	ldd	r12, Y+8	; 0x08
 eec:	df 80       	ldd	r13, Y+7	; 0x07
 eee:	ee 80       	ldd	r14, Y+6	; 0x06
 ef0:	fd 80       	ldd	r15, Y+5	; 0x05
 ef2:	0c 81       	ldd	r16, Y+4	; 0x04
 ef4:	1b 81       	ldd	r17, Y+3	; 0x03
 ef6:	aa 81       	ldd	r26, Y+2	; 0x02
 ef8:	b9 81       	ldd	r27, Y+1	; 0x01
 efa:	ce 0f       	add	r28, r30
 efc:	d1 1d       	adc	r29, r1
 efe:	0f b6       	in	r0, 0x3f	; 63
 f00:	f8 94       	cli
 f02:	de bf       	out	0x3e, r29	; 62
 f04:	0f be       	out	0x3f, r0	; 63
 f06:	cd bf       	out	0x3d, r28	; 61
 f08:	ed 01       	movw	r28, r26
 f0a:	08 95       	ret

00000f0c <_exit>:
 f0c:	f8 94       	cli

00000f0e <__stop_program>:
 f0e:	ff cf       	rjmp	.-2      	; 0xf0e <__stop_program>
