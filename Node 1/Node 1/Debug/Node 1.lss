
Node 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  0000151a  000015ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000151a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  0080019e  0080019e  0000164c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  000016e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002806  00000000  00000000  00001974  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011b3  00000000  00000000  0000417a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000159b  00000000  00000000  0000532d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000060c  00000000  00000000  000068c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a9c  00000000  00000000  00006ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001086  00000000  00000000  00007970  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  000089f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <OLED_clear_area+0x1e>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ea e1       	ldi	r30, 0x1A	; 26
     37c:	f5 e1       	ldi	r31, 0x15	; 21
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	ae 39       	cpi	r26, 0x9E	; 158
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	ae e9       	ldi	r26, 0x9E	; 158
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a7 3b       	cpi	r26, 0xB7	; 183
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 4e 03 	call	0x69c	; 0x69c <main>
     39e:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_sample>:
uint8_t adc_pos_left_slider(void){

	uint8_t L_slider = adc_read(2);

	return 100*L_slider/255;
}
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x1249>
     3ac:	08 95       	ret

000003ae <adc_read>:
     3ae:	cf 93       	push	r28
     3b0:	c8 2f       	mov	r28, r24
     3b2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_sample>
     3b6:	84 9b       	sbis	0x10, 4	; 16
     3b8:	fe cf       	rjmp	.-4      	; 0x3b6 <adc_read+0x8>
     3ba:	e0 e0       	ldi	r30, 0x00	; 0
     3bc:	f4 e1       	ldi	r31, 0x14	; 20
     3be:	90 81       	ld	r25, Z
     3c0:	30 81       	ld	r19, Z
     3c2:	80 81       	ld	r24, Z
     3c4:	20 81       	ld	r18, Z
     3c6:	c1 30       	cpi	r28, 0x01	; 1
     3c8:	39 f0       	breq	.+14     	; 0x3d8 <adc_read+0x2a>
     3ca:	50 f0       	brcs	.+20     	; 0x3e0 <adc_read+0x32>
     3cc:	c2 30       	cpi	r28, 0x02	; 2
     3ce:	49 f0       	breq	.+18     	; 0x3e2 <adc_read+0x34>
     3d0:	c3 30       	cpi	r28, 0x03	; 3
     3d2:	21 f0       	breq	.+8      	; 0x3dc <adc_read+0x2e>
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <adc_read+0x34>
     3d8:	83 2f       	mov	r24, r19
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <adc_read+0x34>
     3dc:	82 2f       	mov	r24, r18
     3de:	01 c0       	rjmp	.+2      	; 0x3e2 <adc_read+0x34>
     3e0:	89 2f       	mov	r24, r25
     3e2:	cf 91       	pop	r28
     3e4:	08 95       	ret

000003e6 <adc_calibrate>:
     3e6:	cf 93       	push	r28
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     3ee:	c8 2f       	mov	r28, r24
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     3f6:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <m_middle_x_value>
     3fa:	91 11       	cpse	r25, r1
     3fc:	02 c0       	rjmp	.+4      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
     3fe:	c0 93 a0 01 	sts	0x01A0, r28	; 0x8001a0 <m_middle_x_value>
     402:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <__data_end>
     406:	91 11       	cpse	r25, r1
     408:	02 c0       	rjmp	.+4      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
     40a:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__data_end>
     40e:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <m_max_x_value>
     412:	9c 17       	cp	r25, r28
     414:	10 f4       	brcc	.+4      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
     416:	c0 93 a1 01 	sts	0x01A1, r28	; 0x8001a1 <m_max_x_value>
     41a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <m_min_x_value>
     41e:	c9 17       	cp	r28, r25
     420:	10 f4       	brcc	.+4      	; 0x426 <__DATA_REGION_LENGTH__+0x26>
     422:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <m_min_x_value>
     426:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <m_max_y_value>
     42a:	98 17       	cp	r25, r24
     42c:	10 f4       	brcc	.+4      	; 0x432 <__DATA_REGION_LENGTH__+0x32>
     42e:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <m_max_y_value>
     432:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <m_min_y_value>
     436:	89 17       	cp	r24, r25
     438:	10 f4       	brcc	.+4      	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
     43a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <m_min_y_value>
     43e:	cf 91       	pop	r28
     440:	08 95       	ret

00000442 <adc_pos_read>:
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     44c:	c8 2f       	mov	r28, r24
     44e:	d0 e0       	ldi	r29, 0x00	; 0
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>
     456:	28 2f       	mov	r18, r24
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <m_middle_x_value>
     45e:	50 e0       	ldi	r21, 0x00	; 0
     460:	4c 17       	cp	r20, r28
     462:	5d 07       	cpc	r21, r29
     464:	94 f0       	brlt	.+36     	; 0x48a <adc_pos_read+0x48>
     466:	c4 1b       	sub	r28, r20
     468:	d5 0b       	sbc	r29, r21
     46a:	64 e6       	ldi	r22, 0x64	; 100
     46c:	6c 9f       	mul	r22, r28
     46e:	c0 01       	movw	r24, r0
     470:	6d 9f       	mul	r22, r29
     472:	90 0d       	add	r25, r0
     474:	11 24       	eor	r1, r1
     476:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <m_min_x_value>
     47a:	fa 01       	movw	r30, r20
     47c:	e6 1b       	sub	r30, r22
     47e:	f1 09       	sbc	r31, r1
     480:	bf 01       	movw	r22, r30
     482:	0e 94 f6 05 	call	0xbec	; 0xbec <__divmodhi4>
     486:	e6 2f       	mov	r30, r22
     488:	10 c0       	rjmp	.+32     	; 0x4aa <adc_pos_read+0x68>
     48a:	c4 1b       	sub	r28, r20
     48c:	d5 0b       	sbc	r29, r21
     48e:	64 e6       	ldi	r22, 0x64	; 100
     490:	6c 9f       	mul	r22, r28
     492:	c0 01       	movw	r24, r0
     494:	6d 9f       	mul	r22, r29
     496:	90 0d       	add	r25, r0
     498:	11 24       	eor	r1, r1
     49a:	60 91 a1 01 	lds	r22, 0x01A1	; 0x8001a1 <m_max_x_value>
     49e:	70 e0       	ldi	r23, 0x00	; 0
     4a0:	64 1b       	sub	r22, r20
     4a2:	75 0b       	sbc	r23, r21
     4a4:	0e 94 f6 05 	call	0xbec	; 0xbec <__divmodhi4>
     4a8:	e6 2f       	mov	r30, r22
     4aa:	40 91 9e 01 	lds	r20, 0x019E	; 0x80019e <__data_end>
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	42 17       	cp	r20, r18
     4b2:	53 07       	cpc	r21, r19
     4b4:	8c f0       	brlt	.+34     	; 0x4d8 <adc_pos_read+0x96>
     4b6:	24 1b       	sub	r18, r20
     4b8:	35 0b       	sbc	r19, r21
     4ba:	64 e6       	ldi	r22, 0x64	; 100
     4bc:	62 9f       	mul	r22, r18
     4be:	c0 01       	movw	r24, r0
     4c0:	63 9f       	mul	r22, r19
     4c2:	90 0d       	add	r25, r0
     4c4:	11 24       	eor	r1, r1
     4c6:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <m_min_y_value>
     4ca:	ba 01       	movw	r22, r20
     4cc:	62 1b       	sub	r22, r18
     4ce:	71 09       	sbc	r23, r1
     4d0:	0e 94 f6 05 	call	0xbec	; 0xbec <__divmodhi4>
     4d4:	96 2f       	mov	r25, r22
     4d6:	10 c0       	rjmp	.+32     	; 0x4f8 <adc_pos_read+0xb6>
     4d8:	24 1b       	sub	r18, r20
     4da:	35 0b       	sbc	r19, r21
     4dc:	64 e6       	ldi	r22, 0x64	; 100
     4de:	62 9f       	mul	r22, r18
     4e0:	c0 01       	movw	r24, r0
     4e2:	63 9f       	mul	r22, r19
     4e4:	90 0d       	add	r25, r0
     4e6:	11 24       	eor	r1, r1
     4e8:	60 91 9f 01 	lds	r22, 0x019F	; 0x80019f <m_max_y_value>
     4ec:	70 e0       	ldi	r23, 0x00	; 0
     4ee:	64 1b       	sub	r22, r20
     4f0:	75 0b       	sbc	r23, r21
     4f2:	0e 94 f6 05 	call	0xbec	; 0xbec <__divmodhi4>
     4f6:	96 2f       	mov	r25, r22
     4f8:	8e 2f       	mov	r24, r30
     4fa:	df 91       	pop	r29
     4fc:	cf 91       	pop	r28
     4fe:	08 95       	ret

00000500 <adc_direction_read>:
     500:	0e 94 21 02 	call	0x442	; 0x442 <adc_pos_read>
     504:	29 2f       	mov	r18, r25
     506:	48 2f       	mov	r20, r24
     508:	94 e0       	ldi	r25, 0x04	; 4
     50a:	98 0f       	add	r25, r24
     50c:	99 30       	cpi	r25, 0x09	; 9
     50e:	20 f4       	brcc	.+8      	; 0x518 <adc_direction_read+0x18>
     510:	94 e0       	ldi	r25, 0x04	; 4
     512:	92 0f       	add	r25, r18
     514:	99 30       	cpi	r25, 0x09	; 9
     516:	e0 f0       	brcs	.+56     	; 0x550 <adc_direction_read+0x50>
     518:	08 2e       	mov	r0, r24
     51a:	00 0c       	add	r0, r0
     51c:	99 0b       	sbc	r25, r25
     51e:	99 23       	and	r25, r25
     520:	1c f4       	brge	.+6      	; 0x528 <adc_direction_read+0x28>
     522:	91 95       	neg	r25
     524:	81 95       	neg	r24
     526:	91 09       	sbc	r25, r1
     528:	52 2f       	mov	r21, r18
     52a:	02 2e       	mov	r0, r18
     52c:	00 0c       	add	r0, r0
     52e:	33 0b       	sbc	r19, r19
     530:	33 23       	and	r19, r19
     532:	1c f4       	brge	.+6      	; 0x53a <adc_direction_read+0x3a>
     534:	31 95       	neg	r19
     536:	21 95       	neg	r18
     538:	31 09       	sbc	r19, r1
     53a:	82 17       	cp	r24, r18
     53c:	93 07       	cpc	r25, r19
     53e:	24 f4       	brge	.+8      	; 0x548 <adc_direction_read+0x48>
     540:	55 23       	and	r21, r21
     542:	44 f4       	brge	.+16     	; 0x554 <adc_direction_read+0x54>
     544:	83 e0       	ldi	r24, 0x03	; 3
     546:	08 95       	ret
     548:	44 23       	and	r20, r20
     54a:	34 f4       	brge	.+12     	; 0x558 <adc_direction_read+0x58>
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	08 95       	ret
     550:	84 e0       	ldi	r24, 0x04	; 4
     552:	08 95       	ret
     554:	82 e0       	ldi	r24, 0x02	; 2
     556:	08 95       	ret
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	08 95       	ret

0000055c <adc_pos_right_slider>:

uint8_t adc_pos_right_slider(void){

	uint8_t R_slider = adc_read(3);
     55c:	83 e0       	ldi	r24, 0x03	; 3
     55e:	0e 94 d7 01 	call	0x3ae	; 0x3ae <adc_read>

	return 100*R_slider/255;
     562:	24 e6       	ldi	r18, 0x64	; 100
     564:	82 9f       	mul	r24, r18
     566:	c0 01       	movw	r24, r0
     568:	11 24       	eor	r1, r1
     56a:	6f ef       	ldi	r22, 0xFF	; 255
     56c:	70 e0       	ldi	r23, 0x00	; 0
     56e:	0e 94 f6 05 	call	0xbec	; 0xbec <__divmodhi4>
     572:	86 2f       	mov	r24, r22
}
     574:	08 95       	ret

00000576 <button_right_read>:
     576:	86 b3       	in	r24, 0x16	; 22
     578:	81 70       	andi	r24, 0x01	; 1
     57a:	08 95       	ret

0000057c <get_MCP_val_read>:
	interrupt_value = MCP2515_read( MCP_CANINTF );
	MCP_val_read = CAN_receive();
	MCP2515_bit_modify(MCP_CANINTF, 0xFF, 0x00);
}

CAN_MESSAGE get_MCP_val_read( void ) {return MCP_val_read;}
     57c:	2b e0       	ldi	r18, 0x0B	; 11
     57e:	e2 ea       	ldi	r30, 0xA2	; 162
     580:	f1 e0       	ldi	r31, 0x01	; 1
     582:	dc 01       	movw	r26, r24
     584:	01 90       	ld	r0, Z+
     586:	0d 92       	st	X+, r0
     588:	2a 95       	dec	r18
     58a:	e1 f7       	brne	.-8      	; 0x584 <get_MCP_val_read+0x8>
     58c:	08 95       	ret

0000058e <CAN_transmit>:

void CAN_transmit ( CAN_MESSAGE message )
{
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	cd b7       	in	r28, 0x3d	; 61
     59c:	de b7       	in	r29, 0x3e	; 62
     59e:	2b 97       	sbiw	r28, 0x0b	; 11
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	f8 94       	cli
     5a4:	de bf       	out	0x3e, r29	; 62
     5a6:	0f be       	out	0x3f, r0	; 63
     5a8:	cd bf       	out	0x3d, r28	; 61
     5aa:	e9 82       	std	Y+1, r14	; 0x01
     5ac:	fa 82       	std	Y+2, r15	; 0x02
     5ae:	0b 83       	std	Y+3, r16	; 0x03
     5b0:	1c 83       	std	Y+4, r17	; 0x04
     5b2:	2d 83       	std	Y+5, r18	; 0x05
     5b4:	3e 83       	std	Y+6, r19	; 0x06
     5b6:	4f 83       	std	Y+7, r20	; 0x07
     5b8:	58 87       	std	Y+8, r21	; 0x08
     5ba:	69 87       	std	Y+9, r22	; 0x09
     5bc:	7a 87       	std	Y+10, r23	; 0x0a
     5be:	8b 87       	std	Y+11, r24	; 0x0b
	uint8_t IDH = (uint8_t)(message.id >> 8);
     5c0:	6f 2d       	mov	r22, r15
	uint8_t IDL = (uint8_t)(0xFF & message.id);

	// Transmit setup
	MCP2515_write( MCP_TXB0SIDH, IDH );
     5c2:	82 e3       	ldi	r24, 0x32	; 50
     5c4:	0e 94 72 03 	call	0x6e4	; 0x6e4 <MCP2515_write>
	MCP2515_write( MCP_TXB0SIDL, IDL );
     5c8:	6e 2d       	mov	r22, r14
     5ca:	81 e3       	ldi	r24, 0x31	; 49
     5cc:	0e 94 72 03 	call	0x6e4	; 0x6e4 <MCP2515_write>
	MCP2515_write( MCP_TXB0DLC, message.data_length );
     5d0:	0b 81       	ldd	r16, Y+3	; 0x03
     5d2:	60 2f       	mov	r22, r16
     5d4:	85 e3       	ldi	r24, 0x35	; 53
     5d6:	0e 94 72 03 	call	0x6e4	; 0x6e4 <MCP2515_write>

	for (uint8_t i = 0; i < message.data_length; i++)
     5da:	10 e0       	ldi	r17, 0x00	; 0
     5dc:	0c c0       	rjmp	.+24     	; 0x5f6 <CAN_transmit+0x68>
	{
		MCP2515_write( MCP_TXB0D0 + i, message.data[i] );
     5de:	e4 e0       	ldi	r30, 0x04	; 4
     5e0:	f0 e0       	ldi	r31, 0x00	; 0
     5e2:	ec 0f       	add	r30, r28
     5e4:	fd 1f       	adc	r31, r29
     5e6:	e1 0f       	add	r30, r17
     5e8:	f1 1d       	adc	r31, r1
     5ea:	60 81       	ld	r22, Z
     5ec:	86 e3       	ldi	r24, 0x36	; 54
     5ee:	81 0f       	add	r24, r17
     5f0:	0e 94 72 03 	call	0x6e4	; 0x6e4 <MCP2515_write>
	// Transmit setup
	MCP2515_write( MCP_TXB0SIDH, IDH );
	MCP2515_write( MCP_TXB0SIDL, IDL );
	MCP2515_write( MCP_TXB0DLC, message.data_length );

	for (uint8_t i = 0; i < message.data_length; i++)
     5f4:	1f 5f       	subi	r17, 0xFF	; 255
     5f6:	10 17       	cp	r17, r16
     5f8:	90 f3       	brcs	.-28     	; 0x5de <CAN_transmit+0x50>
	{
		MCP2515_write( MCP_TXB0D0 + i, message.data[i] );
	}
	
	// Request-to-send command
	MCP2515_request_to_send(MCP_RTS_TX0);
     5fa:	81 e8       	ldi	r24, 0x81	; 129
     5fc:	0e 94 88 03 	call	0x710	; 0x710 <MCP2515_request_to_send>
}
     600:	2b 96       	adiw	r28, 0x0b	; 11
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	f8 94       	cli
     606:	de bf       	out	0x3e, r29	; 62
     608:	0f be       	out	0x3f, r0	; 63
     60a:	cd bf       	out	0x3d, r28	; 61
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	1f 91       	pop	r17
     612:	0f 91       	pop	r16
     614:	ff 90       	pop	r15
     616:	ef 90       	pop	r14
     618:	08 95       	ret

0000061a <interface_send_MFB_data_to_CAN>:
		

	CAN_transmit(message);
	
}
void interface_send_MFB_data_to_CAN (void){
     61a:	cf 92       	push	r12
     61c:	df 92       	push	r13
     61e:	ef 92       	push	r14
     620:	ff 92       	push	r15
     622:	0f 93       	push	r16
     624:	1f 93       	push	r17
     626:	cf 93       	push	r28
     628:	df 93       	push	r29
     62a:	cd b7       	in	r28, 0x3d	; 61
     62c:	de b7       	in	r29, 0x3e	; 62
     62e:	2b 97       	sbiw	r28, 0x0b	; 11
     630:	0f b6       	in	r0, 0x3f	; 63
     632:	f8 94       	cli
     634:	de bf       	out	0x3e, r29	; 62
     636:	0f be       	out	0x3f, r0	; 63
     638:	cd bf       	out	0x3d, r28	; 61
	
	pos_p joystick_posistion_percentage = adc_pos_read();
     63a:	0e 94 21 02 	call	0x442	; 0x442 <adc_pos_read>
	uint8_t joystick_PWM_percentage = (joystick_posistion_percentage.x_axis + 100)/2;
     63e:	08 2e       	mov	r0, r24
     640:	00 0c       	add	r0, r0
     642:	99 0b       	sbc	r25, r25
     644:	8c 59       	subi	r24, 0x9C	; 156
     646:	9f 4f       	sbci	r25, 0xFF	; 255
     648:	9c 01       	movw	r18, r24
     64a:	12 f4       	brpl	.+4      	; 0x650 <interface_send_MFB_data_to_CAN+0x36>
     64c:	2f 5f       	subi	r18, 0xFF	; 255
     64e:	3f 4f       	sbci	r19, 0xFF	; 255
     650:	69 01       	movw	r12, r18
     652:	d5 94       	asr	r13
     654:	c7 94       	ror	r12
	
	uint8_t right_slider_posistion_percentage = adc_pos_right_slider();
     656:	0e 94 ae 02 	call	0x55c	; 0x55c <adc_pos_right_slider>
     65a:	d8 2e       	mov	r13, r24
	
	uint8_t right_button_val = button_right_read();
     65c:	0e 94 bb 02 	call	0x576	; 0x576 <button_right_read>
	CAN_MESSAGE message;
	message.data[0] = joystick_PWM_percentage;
	message.data[1] = right_slider_posistion_percentage;
	message.data[2] = right_button_val;
	message.data_length = 3;
	message.id = 0xFF0F;
     660:	9f e0       	ldi	r25, 0x0F	; 15
     662:	e9 2e       	mov	r14, r25
	
	CAN_transmit(message);
     664:	ff 24       	eor	r15, r15
     666:	fa 94       	dec	r15
     668:	03 e0       	ldi	r16, 0x03	; 3
     66a:	1c 2d       	mov	r17, r12
     66c:	2d 2d       	mov	r18, r13
     66e:	38 2f       	mov	r19, r24
     670:	4f 81       	ldd	r20, Y+7	; 0x07
     672:	58 85       	ldd	r21, Y+8	; 0x08
     674:	69 85       	ldd	r22, Y+9	; 0x09
     676:	7a 85       	ldd	r23, Y+10	; 0x0a
     678:	8b 85       	ldd	r24, Y+11	; 0x0b
     67a:	0e 94 c7 02 	call	0x58e	; 0x58e <CAN_transmit>
}
     67e:	2b 96       	adiw	r28, 0x0b	; 11
     680:	0f b6       	in	r0, 0x3f	; 63
     682:	f8 94       	cli
     684:	de bf       	out	0x3e, r29	; 62
     686:	0f be       	out	0x3f, r0	; 63
     688:	cd bf       	out	0x3d, r28	; 61
     68a:	df 91       	pop	r29
     68c:	cf 91       	pop	r28
     68e:	1f 91       	pop	r17
     690:	0f 91       	pop	r16
     692:	ff 90       	pop	r15
     694:	ef 90       	pop	r14
     696:	df 90       	pop	r13
     698:	cf 90       	pop	r12
     69a:	08 95       	ret

0000069c <main>:



int main(void)
{	
	xmem_init();
     69c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <xmem_init>
	adc_init();
     6a0:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <adc_init>
	
	MCP2515_init();
     6a4:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <MCP2515_init>
	MCP2515_set_mode(MODE_NORMAL);
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	0e 94 ad 03 	call	0x75a	; 0x75a <MCP2515_set_mode>

	OLED_init();
     6ae:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <OLED_init>
	OLED_clear_screen();
     6b2:	0e 94 71 05 	call	0xae2	; 0xae2 <OLED_clear_screen>
	mainmenu();
     6b6:	0e 94 60 04 	call	0x8c0	; 0x8c0 <mainmenu>
}
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	08 95       	ret

000006c0 <MCP2515_read>:

	return 0;
}

uint8_t MCP2515_read(uint8_t address)
{
     6c0:	cf 93       	push	r28
     6c2:	c8 2f       	mov	r28, r24
	uint8_t result ;
	
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
     6c4:	88 b3       	in	r24, 0x18	; 24
     6c6:	8f 7e       	andi	r24, 0xEF	; 239
     6c8:	88 bb       	out	0x18, r24	; 24
	
	SPI_write( MCP_READ ); // Send read instruction
     6ca:	83 e0       	ldi	r24, 0x03	; 3
     6cc:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	SPI_write( address ); // Send address
     6d0:	8c 2f       	mov	r24, r28
     6d2:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	result = SPI_read() ; // Read result
     6d6:	0e 94 d7 05 	call	0xbae	; 0xbae <SPI_read>
	
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
     6da:	98 b3       	in	r25, 0x18	; 24
     6dc:	90 61       	ori	r25, 0x10	; 16
     6de:	98 bb       	out	0x18, r25	; 24

	return result;
}
     6e0:	cf 91       	pop	r28
     6e2:	08 95       	ret

000006e4 <MCP2515_write>:

void MCP2515_write(uint8_t address, uint8_t data)
{
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	d8 2f       	mov	r29, r24
     6ea:	c6 2f       	mov	r28, r22
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
     6ec:	88 b3       	in	r24, 0x18	; 24
     6ee:	8f 7e       	andi	r24, 0xEF	; 239
     6f0:	88 bb       	out	0x18, r24	; 24
	
	SPI_write( MCP_WRITE ); // Send write instruction
     6f2:	82 e0       	ldi	r24, 0x02	; 2
     6f4:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	SPI_write(address);		// Send address
     6f8:	8d 2f       	mov	r24, r29
     6fa:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	SPI_write(data);		// Send data
     6fe:	8c 2f       	mov	r24, r28
     700:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
     704:	88 b3       	in	r24, 0x18	; 24
     706:	80 61       	ori	r24, 0x10	; 16
     708:	88 bb       	out	0x18, r24	; 24

}
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <MCP2515_request_to_send>:

void MCP2515_request_to_send(uint8_t MCP_RTS_N)
{
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
     710:	98 b3       	in	r25, 0x18	; 24
     712:	9f 7e       	andi	r25, 0xEF	; 239
     714:	98 bb       	out	0x18, r25	; 24

	SPI_write(MCP_RTS_N);   //Send RTS - instruction
     716:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>

	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
     71a:	88 b3       	in	r24, 0x18	; 24
     71c:	80 61       	ori	r24, 0x10	; 16
     71e:	88 bb       	out	0x18, r24	; 24
     720:	08 95       	ret

00000722 <MCP2515_bit_modify>:

}

void MCP2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data)
{
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	18 2f       	mov	r17, r24
     72a:	d6 2f       	mov	r29, r22
     72c:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
     72e:	88 b3       	in	r24, 0x18	; 24
     730:	8f 7e       	andi	r24, 0xEF	; 239
     732:	88 bb       	out	0x18, r24	; 24

	SPI_write(MCP_BITMOD);   //Send bit modify - instruction
     734:	85 e0       	ldi	r24, 0x05	; 5
     736:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	SPI_write(address);		 //Send Address Byte
     73a:	81 2f       	mov	r24, r17
     73c:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	SPI_write(mask);		 //Send Mask Byte
     740:	8d 2f       	mov	r24, r29
     742:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	SPI_write(data);		 //Send Data Byte
     746:	8c 2f       	mov	r24, r28
     748:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>


	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
     74c:	88 b3       	in	r24, 0x18	; 24
     74e:	80 61       	ori	r24, 0x10	; 16
     750:	88 bb       	out	0x18, r24	; 24
}
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	1f 91       	pop	r17
     758:	08 95       	ret

0000075a <MCP2515_set_mode>:

	return 0;
}

uint8_t MCP2515_set_mode(uint8_t mode)
{
     75a:	cf 93       	push	r28
     75c:	c8 2f       	mov	r28, r24
	uint8_t value = 0;
	
	MCP2515_bit_modify(MCP_CANCTRL,MODE_MASK,mode);
     75e:	48 2f       	mov	r20, r24
     760:	60 ee       	ldi	r22, 0xE0	; 224
     762:	8f e0       	ldi	r24, 0x0F	; 15
     764:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>
	
	value = MCP2515_read ( MCP_CANSTAT );
     768:	8e e0       	ldi	r24, 0x0E	; 14
     76a:	0e 94 60 03 	call	0x6c0	; 0x6c0 <MCP2515_read>
	if (( value & MODE_MASK ) != mode ) {
     76e:	80 7e       	andi	r24, 0xE0	; 224
     770:	8c 17       	cp	r24, r28
     772:	51 f0       	breq	.+20     	; 0x788 <MCP2515_set_mode+0x2e>
		printf (" mcp2515 is not changed to desired mode !\n\r");
     774:	88 e0       	ldi	r24, 0x08	; 8
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	9f 93       	push	r25
     77a:	8f 93       	push	r24
     77c:	0e 94 69 06 	call	0xcd2	; 0xcd2 <printf>
		return 1;
     780:	0f 90       	pop	r0
     782:	0f 90       	pop	r0
     784:	81 e0       	ldi	r24, 0x01	; 1
     786:	01 c0       	rjmp	.+2      	; 0x78a <MCP2515_set_mode+0x30>
	}

	return 0;
     788:	80 e0       	ldi	r24, 0x00	; 0
}
     78a:	cf 91       	pop	r28
     78c:	08 95       	ret

0000078e <MCP2515_reset>:
	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
}

void MCP2515_reset(void)
{
	PORTB &= ~(1 << PB4 ); // Select CAN - controller, chip select SPI
     78e:	88 b3       	in	r24, 0x18	; 24
     790:	8f 7e       	andi	r24, 0xEF	; 239
     792:	88 bb       	out	0x18, r24	; 24

	SPI_write(MCP_RESET);   //Send Reset - instruction
     794:	80 ec       	ldi	r24, 0xC0	; 192
     796:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>

	PORTB |= (1 << PB4 ); // Deselect CAN - controller,  chip select SPI
     79a:	88 b3       	in	r24, 0x18	; 24
     79c:	80 61       	ori	r24, 0x10	; 16
     79e:	88 bb       	out	0x18, r24	; 24
     7a0:	08 95       	ret

000007a2 <MCP2515_init>:

#include <stdio.h>

uint8_t  MCP2515_init(void)
{	
	sei(); // Set Global Interrupt Enable bit
     7a2:	78 94       	sei
	GICR |= ( 1 << INT0 ); // Set external interrupt request 0 Enable	
     7a4:	8b b7       	in	r24, 0x3b	; 59
     7a6:	80 64       	ori	r24, 0x40	; 64
     7a8:	8b bf       	out	0x3b, r24	; 59
	
	uint8_t value = 0;
	SPI_MasterInit (); // Initialize SPI
     7aa:	0e 94 c9 05 	call	0xb92	; 0xb92 <SPI_MasterInit>
	MCP2515_reset (); // Send reset - command
     7ae:	0e 94 c7 03 	call	0x78e	; 0x78e <MCP2515_reset>
	
	// Self - test
	value = MCP2515_read ( MCP_CANSTAT );
     7b2:	8e e0       	ldi	r24, 0x0E	; 14
     7b4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <MCP2515_read>
	
	if (( value & MODE_MASK ) != MODE_CONFIG ) {
     7b8:	80 7e       	andi	r24, 0xE0	; 224
     7ba:	80 38       	cpi	r24, 0x80	; 128
     7bc:	51 f0       	breq	.+20     	; 0x7d2 <MCP2515_init+0x30>
		printf (" MCP2515 is NOT in configuration mode after reset !\n\r");
     7be:	84 e3       	ldi	r24, 0x34	; 52
     7c0:	91 e0       	ldi	r25, 0x01	; 1
     7c2:	9f 93       	push	r25
     7c4:	8f 93       	push	r24
     7c6:	0e 94 69 06 	call	0xcd2	; 0xcd2 <printf>
		return 1;
     7ca:	0f 90       	pop	r0
     7cc:	0f 90       	pop	r0
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	08 95       	ret
	}

	//set length of SJW to 2*TQ and BRP to 2 => TQ = 250 ns
	MCP2515_bit_modify(MCP_CNF1,0b11111111,0x41);
     7d2:	41 e4       	ldi	r20, 0x41	; 65
     7d4:	6f ef       	ldi	r22, 0xFF	; 255
     7d6:	8a e2       	ldi	r24, 0x2A	; 42
     7d8:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>

	//set length of phase 1 segment to 6*TQ and PROPSEG to 3 TQ
	MCP2515_bit_modify(MCP_CNF2,0b11111111,0x6A);
     7dc:	4a e6       	ldi	r20, 0x6A	; 106
     7de:	6f ef       	ldi	r22, 0xFF	; 255
     7e0:	89 e2       	ldi	r24, 0x29	; 41
     7e2:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>

	//set length of propagation segment to 2*TQ
	MCP2515_bit_modify(MCP_CNF3,0b00000111,0x02);
     7e6:	42 e0       	ldi	r20, 0x02	; 2
     7e8:	67 e0       	ldi	r22, 0x07	; 7
     7ea:	88 e2       	ldi	r24, 0x28	; 40
     7ec:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>

	//set all RX-interrupts
	MCP2515_bit_modify(MCP_CANINTE, MCP_RX_INT, MCP_RX_INT);
     7f0:	43 e0       	ldi	r20, 0x03	; 3
     7f2:	63 e0       	ldi	r22, 0x03	; 3
     7f4:	8b e2       	ldi	r24, 0x2B	; 43
     7f6:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>

	//clear interrupt flags RX0
	MCP2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0);
     7fa:	40 e0       	ldi	r20, 0x00	; 0
     7fc:	61 e0       	ldi	r22, 0x01	; 1
     7fe:	8c e2       	ldi	r24, 0x2C	; 44
     800:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>
	
	// enable receive
	MCP2515_bit_modify(MCP_RXB0CTRL, 0b01100000 ,0b01100000 );
     804:	40 e6       	ldi	r20, 0x60	; 96
     806:	60 e6       	ldi	r22, 0x60	; 96
     808:	80 e6       	ldi	r24, 0x60	; 96
     80a:	0e 94 91 03 	call	0x722	; 0x722 <MCP2515_bit_modify>

	return 0;
     80e:	80 e0       	ldi	r24, 0x00	; 0
}
     810:	08 95       	ret

00000812 <mainmenu_play_game>:
	return;
}

void mainmenu_enter_childNode(Node* currentNode){
	if(currentNode->nodeFunction!= NULL){
		currentNode->nodeFunction();}
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	cd b7       	in	r28, 0x3d	; 61
     818:	de b7       	in	r29, 0x3e	; 62
     81a:	2b 97       	sbiw	r28, 0x0b	; 11
     81c:	0f b6       	in	r0, 0x3f	; 63
     81e:	f8 94       	cli
     820:	de bf       	out	0x3e, r29	; 62
     822:	0f be       	out	0x3f, r0	; 63
     824:	cd bf       	out	0x3d, r28	; 61
     826:	0e 94 71 05 	call	0xae2	; 0xae2 <OLED_clear_screen>
     82a:	64 e1       	ldi	r22, 0x14	; 20
     82c:	86 e0       	ldi	r24, 0x06	; 6
     82e:	0e 94 89 05 	call	0xb12	; 0xb12 <OLED_goto_pos>
     832:	8a e6       	ldi	r24, 0x6A	; 106
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	9f 93       	push	r25
     838:	8f 93       	push	r24
     83a:	0e 94 69 06 	call	0xcd2	; 0xcd2 <printf>
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	ce 01       	movw	r24, r28
     844:	01 96       	adiw	r24, 0x01	; 1
     846:	0e 94 be 02 	call	0x57c	; 0x57c <get_MCP_val_read>
     84a:	8c 81       	ldd	r24, Y+4	; 0x04
     84c:	81 30       	cpi	r24, 0x01	; 1
     84e:	81 f0       	breq	.+32     	; 0x870 <mainmenu_play_game+0x5e>
     850:	0e 94 80 02 	call	0x500	; 0x500 <adc_direction_read>
     854:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <adc_calibrate>
     858:	0e 94 0d 03 	call	0x61a	; 0x61a <interface_send_MFB_data_to_CAN>
     85c:	2f ef       	ldi	r18, 0xFF	; 255
     85e:	8f ef       	ldi	r24, 0xFF	; 255
     860:	92 e0       	ldi	r25, 0x02	; 2
     862:	21 50       	subi	r18, 0x01	; 1
     864:	80 40       	sbci	r24, 0x00	; 0
     866:	90 40       	sbci	r25, 0x00	; 0
     868:	e1 f7       	brne	.-8      	; 0x862 <mainmenu_play_game+0x50>
     86a:	00 c0       	rjmp	.+0      	; 0x86c <mainmenu_play_game+0x5a>
     86c:	00 c0       	rjmp	.+0      	; 0x86e <mainmenu_play_game+0x5c>
     86e:	e9 cf       	rjmp	.-46     	; 0x842 <mainmenu_play_game+0x30>
     870:	0e 94 71 05 	call	0xae2	; 0xae2 <OLED_clear_screen>
     874:	2b 96       	adiw	r28, 0x0b	; 11
     876:	0f b6       	in	r0, 0x3f	; 63
     878:	f8 94       	cli
     87a:	de bf       	out	0x3e, r29	; 62
     87c:	0f be       	out	0x3f, r0	; 63
     87e:	cd bf       	out	0x3d, r28	; 61
     880:	df 91       	pop	r29
     882:	cf 91       	pop	r28
     884:	08 95       	ret

00000886 <mainmenu_print_current_menu>:
     886:	1f 93       	push	r17
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
     88c:	ec 01       	movw	r28, r24
     88e:	18 85       	ldd	r17, Y+8	; 0x08
     890:	0e 94 71 05 	call	0xae2	; 0xae2 <OLED_clear_screen>
     894:	0a 80       	ldd	r0, Y+2	; 0x02
     896:	db 81       	ldd	r29, Y+3	; 0x03
     898:	c0 2d       	mov	r28, r0
     89a:	64 e1       	ldi	r22, 0x14	; 20
     89c:	88 85       	ldd	r24, Y+8	; 0x08
     89e:	0e 94 89 05 	call	0xb12	; 0xb12 <OLED_goto_pos>
     8a2:	8e 81       	ldd	r24, Y+6	; 0x06
     8a4:	9f 81       	ldd	r25, Y+7	; 0x07
     8a6:	9f 93       	push	r25
     8a8:	8f 93       	push	r24
     8aa:	0e 94 69 06 	call	0xcd2	; 0xcd2 <printf>
     8ae:	88 85       	ldd	r24, Y+8	; 0x08
     8b0:	0f 90       	pop	r0
     8b2:	0f 90       	pop	r0
     8b4:	18 13       	cpse	r17, r24
     8b6:	ee cf       	rjmp	.-36     	; 0x894 <mainmenu_print_current_menu+0xe>
     8b8:	df 91       	pop	r29
     8ba:	cf 91       	pop	r28
     8bc:	1f 91       	pop	r17
     8be:	08 95       	ret

000008c0 <mainmenu>:
}

void mainmenu( void ){
     8c0:	cf 93       	push	r28
     8c2:	df 93       	push	r29
     8c4:	cd b7       	in	r28, 0x3d	; 61
     8c6:	de b7       	in	r29, 0x3e	; 62
     8c8:	ac 97       	sbiw	r28, 0x2c	; 44
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	f8 94       	cli
     8ce:	de bf       	out	0x3e, r29	; 62
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	cd bf       	out	0x3d, r28	; 61
	// Initialize child-nodes
	Node FirstChild;
	Node SecondChild;
	Node ThirdChild;

	FirstChild.name = "Play game";
     8d4:	82 e7       	ldi	r24, 0x72	; 114
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	9b 8b       	std	Y+19, r25	; 0x13
     8da:	8a 8b       	std	Y+18, r24	; 0x12
	FirstChild.next = &SecondChild;
     8dc:	9e 01       	movw	r18, r28
     8de:	29 5e       	subi	r18, 0xE9	; 233
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	3f 87       	std	Y+15, r19	; 0x0f
     8e4:	2e 87       	std	Y+14, r18	; 0x0e
	FirstChild.prev = &ThirdChild;
     8e6:	ae 01       	movw	r20, r28
     8e8:	4e 5d       	subi	r20, 0xDE	; 222
     8ea:	5f 4f       	sbci	r21, 0xFF	; 255
     8ec:	59 8b       	std	Y+17, r21	; 0x11
     8ee:	48 8b       	std	Y+16, r20	; 0x10
	FirstChild.parent = &MainNode;
     8f0:	ce 01       	movw	r24, r28
     8f2:	01 96       	adiw	r24, 0x01	; 1
     8f4:	9d 87       	std	Y+13, r25	; 0x0d
     8f6:	8c 87       	std	Y+12, r24	; 0x0c
	FirstChild.index = 0;
     8f8:	1c 8a       	std	Y+20, r1	; 0x14
	FirstChild.nodeFunction = mainmenu_play_game;
	
	SecondChild.name = "Settings";
     8fa:	6c e7       	ldi	r22, 0x7C	; 124
     8fc:	71 e0       	ldi	r23, 0x01	; 1
     8fe:	7e 8f       	std	Y+30, r23	; 0x1e
     900:	6d 8f       	std	Y+29, r22	; 0x1d
	SecondChild.next = &ThirdChild;
     902:	5a 8f       	std	Y+26, r21	; 0x1a
     904:	49 8f       	std	Y+25, r20	; 0x19
	SecondChild.prev = &FirstChild;
     906:	7e 01       	movw	r14, r28
     908:	4c e0       	ldi	r20, 0x0C	; 12
     90a:	e4 0e       	add	r14, r20
     90c:	f1 1c       	adc	r15, r1
     90e:	fc 8e       	std	Y+28, r15	; 0x1c
     910:	eb 8e       	std	Y+27, r14	; 0x1b
	SecondChild.parent = &MainNode;
     912:	98 8f       	std	Y+24, r25	; 0x18
     914:	8f 8b       	std	Y+23, r24	; 0x17
	SecondChild.index = 1;
     916:	41 e0       	ldi	r20, 0x01	; 1
     918:	4f 8f       	std	Y+31, r20	; 0x1f
	FirstChild.nodeFunction = NULL;
     91a:	1e 8a       	std	Y+22, r1	; 0x16
     91c:	1d 8a       	std	Y+21, r1	; 0x15

	ThirdChild.name = "Quit";
     91e:	45 e8       	ldi	r20, 0x85	; 133
     920:	51 e0       	ldi	r21, 0x01	; 1
     922:	59 a7       	std	Y+41, r21	; 0x29
     924:	48 a7       	std	Y+40, r20	; 0x28
	ThirdChild.next = &FirstChild;
     926:	fd a2       	std	Y+37, r15	; 0x25
     928:	ec a2       	std	Y+36, r14	; 0x24
	ThirdChild.prev = &SecondChild;
     92a:	3f a3       	std	Y+39, r19	; 0x27
     92c:	2e a3       	std	Y+38, r18	; 0x26
	ThirdChild.parent = &MainNode;
     92e:	9b a3       	std	Y+35, r25	; 0x23
     930:	8a a3       	std	Y+34, r24	; 0x22
	ThirdChild.index = 2;
     932:	82 e0       	ldi	r24, 0x02	; 2
     934:	8a a7       	std	Y+42, r24	; 0x2a
	FirstChild.nodeFunction = NULL;

	//Initialize MainMenu-node
	
	MainNode.name = "Main";
     936:	8a e8       	ldi	r24, 0x8A	; 138
     938:	91 e0       	ldi	r25, 0x01	; 1
     93a:	98 87       	std	Y+8, r25	; 0x08
     93c:	8f 83       	std	Y+7, r24	; 0x07
	MainNode.next = NULL;
     93e:	1c 82       	std	Y+4, r1	; 0x04
     940:	1b 82       	std	Y+3, r1	; 0x03
	MainNode.prev = NULL;
     942:	1e 82       	std	Y+6, r1	; 0x06
     944:	1d 82       	std	Y+5, r1	; 0x05
	Node* currentNode = &FirstChild;

	OLED_clear_screen();
     946:	0e 94 71 05 	call	0xae2	; 0xae2 <OLED_clear_screen>
	mainmenu_print_current_menu(currentNode);
     94a:	c7 01       	movw	r24, r14
     94c:	0e 94 43 04 	call	0x886	; 0x886 <mainmenu_print_current_menu>
	
	while (1)
	{
		adc_calibrate();
     950:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <adc_calibrate>
		uint8_t btn_val = button_right_read();
     954:	0e 94 bb 02 	call	0x576	; 0x576 <button_right_read>
     958:	18 2f       	mov	r17, r24
		direction dir = adc_direction_read();
     95a:	0e 94 80 02 	call	0x500	; 0x500 <adc_direction_read>
     95e:	08 2f       	mov	r16, r24

		if(dir == down){
     960:	83 30       	cpi	r24, 0x03	; 3
     962:	71 f4       	brne	.+28     	; 0x980 <mainmenu+0xc0>
				OLED_clear_area(currentNode->index,4,17);
     964:	41 e1       	ldi	r20, 0x11	; 17
     966:	64 e0       	ldi	r22, 0x04	; 4
     968:	f7 01       	movw	r30, r14
     96a:	80 85       	ldd	r24, Z+8	; 0x08
     96c:	0e 94 92 05 	call	0xb24	; 0xb24 <OLED_clear_area>
				currentNode = currentNode->next;
     970:	f7 01       	movw	r30, r14
     972:	e2 80       	ldd	r14, Z+2	; 0x02
     974:	f3 80       	ldd	r15, Z+3	; 0x03
				OLED_print_rounded_arrow(currentNode->index,4);
     976:	64 e0       	ldi	r22, 0x04	; 4
     978:	f7 01       	movw	r30, r14
     97a:	80 85       	ldd	r24, Z+8	; 0x08
     97c:	0e 94 a2 05 	call	0xb44	; 0xb44 <OLED_print_rounded_arrow>
			}

		if ( dir == up ){
     980:	02 30       	cpi	r16, 0x02	; 2
     982:	71 f4       	brne	.+28     	; 0x9a0 <mainmenu+0xe0>
				OLED_clear_area(currentNode->index,4,17);
     984:	41 e1       	ldi	r20, 0x11	; 17
     986:	64 e0       	ldi	r22, 0x04	; 4
     988:	f7 01       	movw	r30, r14
     98a:	80 85       	ldd	r24, Z+8	; 0x08
     98c:	0e 94 92 05 	call	0xb24	; 0xb24 <OLED_clear_area>
				currentNode = currentNode->prev;
     990:	f7 01       	movw	r30, r14
     992:	e4 80       	ldd	r14, Z+4	; 0x04
     994:	f5 80       	ldd	r15, Z+5	; 0x05
				OLED_print_rounded_arrow(currentNode->index,4);
     996:	64 e0       	ldi	r22, 0x04	; 4
     998:	f7 01       	movw	r30, r14
     99a:	80 85       	ldd	r24, Z+8	; 0x08
     99c:	0e 94 a2 05 	call	0xb44	; 0xb44 <OLED_print_rounded_arrow>
			}

		if (btn_val == 1 && currentNode == &FirstChild)
     9a0:	11 30       	cpi	r17, 0x01	; 1
     9a2:	39 f4       	brne	.+14     	; 0x9b2 <mainmenu+0xf2>
     9a4:	ce 01       	movw	r24, r28
     9a6:	0c 96       	adiw	r24, 0x0c	; 12
     9a8:	e8 16       	cp	r14, r24
     9aa:	f9 06       	cpc	r15, r25
     9ac:	11 f4       	brne	.+4      	; 0x9b2 <mainmenu+0xf2>
		{
			mainmenu_play_game();
     9ae:	0e 94 09 04 	call	0x812	; 0x812 <mainmenu_play_game>
		}
		
		OLED_clear_page(6);
     9b2:	86 e0       	ldi	r24, 0x06	; 6
     9b4:	0e 94 64 05 	call	0xac8	; 0xac8 <OLED_clear_page>
		OLED_goto_pos(6,5);
     9b8:	65 e0       	ldi	r22, 0x05	; 5
     9ba:	86 e0       	ldi	r24, 0x06	; 6
     9bc:	0e 94 89 05 	call	0xb12	; 0xb12 <OLED_goto_pos>
		printf("Button Val: %u", btn_val);
     9c0:	1f 92       	push	r1
     9c2:	1f 93       	push	r17
     9c4:	8f e8       	ldi	r24, 0x8F	; 143
     9c6:	91 e0       	ldi	r25, 0x01	; 1
     9c8:	9f 93       	push	r25
     9ca:	8f 93       	push	r24
     9cc:	0e 94 69 06 	call	0xcd2	; 0xcd2 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9d0:	ff ef       	ldi	r31, 0xFF	; 255
     9d2:	2f ef       	ldi	r18, 0xFF	; 255
     9d4:	42 e0       	ldi	r20, 0x02	; 2
     9d6:	f1 50       	subi	r31, 0x01	; 1
     9d8:	20 40       	sbci	r18, 0x00	; 0
     9da:	40 40       	sbci	r20, 0x00	; 0
     9dc:	e1 f7       	brne	.-8      	; 0x9d6 <mainmenu+0x116>
     9de:	00 c0       	rjmp	.+0      	; 0x9e0 <mainmenu+0x120>
     9e0:	00 c0       	rjmp	.+0      	; 0x9e2 <mainmenu+0x122>
     9e2:	0f 90       	pop	r0
     9e4:	0f 90       	pop	r0
     9e6:	0f 90       	pop	r0
     9e8:	0f 90       	pop	r0
     9ea:	b2 cf       	rjmp	.-156    	; 0x950 <mainmenu+0x90>

000009ec <OLED_write_command>:
	OLED_write_data ( 0b00011000 );
	OLED_write_data ( 0b00011000 );
	OLED_write_data ( 0b01111110 );
	OLED_write_data ( 0b00111100 );
	OLED_write_data ( 0b00011000 );
	OLED_write_data ( 0b00000000 );
     9ec:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe49>
     9f0:	08 95       	ret

000009f2 <OLED_init>:
     9f2:	8e ea       	ldi	r24, 0xAE	; 174
     9f4:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     9f8:	81 ea       	ldi	r24, 0xA1	; 161
     9fa:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     9fe:	8a ed       	ldi	r24, 0xDA	; 218
     a00:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a04:	82 e1       	ldi	r24, 0x12	; 18
     a06:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a0a:	88 ec       	ldi	r24, 0xC8	; 200
     a0c:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a10:	88 ea       	ldi	r24, 0xA8	; 168
     a12:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a16:	8f e3       	ldi	r24, 0x3F	; 63
     a18:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a1c:	85 ed       	ldi	r24, 0xD5	; 213
     a1e:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a22:	80 e8       	ldi	r24, 0x80	; 128
     a24:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a28:	81 e8       	ldi	r24, 0x81	; 129
     a2a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a2e:	80 e5       	ldi	r24, 0x50	; 80
     a30:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a34:	89 ed       	ldi	r24, 0xD9	; 217
     a36:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a3a:	81 e2       	ldi	r24, 0x21	; 33
     a3c:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a40:	80 e2       	ldi	r24, 0x20	; 32
     a42:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a46:	82 e0       	ldi	r24, 0x02	; 2
     a48:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a4c:	8b ed       	ldi	r24, 0xDB	; 219
     a4e:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a52:	80 e3       	ldi	r24, 0x30	; 48
     a54:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a58:	8d ea       	ldi	r24, 0xAD	; 173
     a5a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a64:	84 ea       	ldi	r24, 0xA4	; 164
     a66:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a6a:	86 ea       	ldi	r24, 0xA6	; 166
     a6c:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a70:	8f ea       	ldi	r24, 0xAF	; 175
     a72:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     a76:	60 e0       	ldi	r22, 0x00	; 0
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	85 e4       	ldi	r24, 0x45	; 69
     a7c:	95 e0       	ldi	r25, 0x05	; 5
     a7e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <fdevopen>
     a82:	08 95       	ret

00000a84 <OLED_write_data>:
     a84:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x1049>
     a88:	08 95       	ret

00000a8a <OLED_write_char>:
     a8a:	cf 93       	push	r28
     a8c:	df 93       	push	r29
     a8e:	d8 2f       	mov	r29, r24
     a90:	c0 e0       	ldi	r28, 0x00	; 0
     a92:	11 c0       	rjmp	.+34     	; 0xab6 <OLED_write_char+0x2c>
     a94:	ed 2f       	mov	r30, r29
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	b0 97       	sbiw	r30, 0x20	; 32
     a9a:	ee 0f       	add	r30, r30
     a9c:	ff 1f       	adc	r31, r31
     a9e:	ee 0f       	add	r30, r30
     aa0:	ff 1f       	adc	r31, r31
     aa2:	ee 0f       	add	r30, r30
     aa4:	ff 1f       	adc	r31, r31
     aa6:	ec 0f       	add	r30, r28
     aa8:	f1 1d       	adc	r31, r1
     aaa:	e0 59       	subi	r30, 0x90	; 144
     aac:	ff 4f       	sbci	r31, 0xFF	; 255
     aae:	84 91       	lpm	r24, Z
     ab0:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
     ab4:	cf 5f       	subi	r28, 0xFF	; 255
     ab6:	c8 30       	cpi	r28, 0x08	; 8
     ab8:	68 f3       	brcs	.-38     	; 0xa94 <OLED_write_char+0xa>
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	08 95       	ret

00000ac0 <OLED_goto_page>:
     ac0:	80 55       	subi	r24, 0x50	; 80
     ac2:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     ac6:	08 95       	ret

00000ac8 <OLED_clear_page>:
     ac8:	cf 93       	push	r28
     aca:	0e 94 60 05 	call	0xac0	; 0xac0 <OLED_goto_page>
     ace:	c0 e0       	ldi	r28, 0x00	; 0
     ad0:	04 c0       	rjmp	.+8      	; 0xada <OLED_clear_page+0x12>
     ad2:	80 e0       	ldi	r24, 0x00	; 0
     ad4:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
     ad8:	cf 5f       	subi	r28, 0xFF	; 255
     ada:	cc 23       	and	r28, r28
     adc:	d4 f7       	brge	.-12     	; 0xad2 <OLED_clear_page+0xa>
     ade:	cf 91       	pop	r28
     ae0:	08 95       	ret

00000ae2 <OLED_clear_screen>:
     ae2:	cf 93       	push	r28
     ae4:	c0 e0       	ldi	r28, 0x00	; 0
     ae6:	04 c0       	rjmp	.+8      	; 0xaf0 <OLED_clear_screen+0xe>
     ae8:	8c 2f       	mov	r24, r28
     aea:	0e 94 64 05 	call	0xac8	; 0xac8 <OLED_clear_page>
     aee:	cf 5f       	subi	r28, 0xFF	; 255
     af0:	c8 30       	cpi	r28, 0x08	; 8
     af2:	d0 f3       	brcs	.-12     	; 0xae8 <OLED_clear_screen+0x6>
     af4:	cf 91       	pop	r28
     af6:	08 95       	ret

00000af8 <OLED_goto_column>:
     af8:	cf 93       	push	r28
     afa:	c8 2f       	mov	r28, r24
     afc:	82 95       	swap	r24
     afe:	8f 70       	andi	r24, 0x0F	; 15
     b00:	80 5f       	subi	r24, 0xF0	; 240
     b02:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     b06:	8c 2f       	mov	r24, r28
     b08:	8f 70       	andi	r24, 0x0F	; 15
     b0a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <OLED_write_command>
     b0e:	cf 91       	pop	r28
     b10:	08 95       	ret

00000b12 <OLED_goto_pos>:
     b12:	cf 93       	push	r28
     b14:	c6 2f       	mov	r28, r22
     b16:	0e 94 60 05 	call	0xac0	; 0xac0 <OLED_goto_page>
     b1a:	8c 2f       	mov	r24, r28
     b1c:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <OLED_goto_column>
     b20:	cf 91       	pop	r28
     b22:	08 95       	ret

00000b24 <OLED_clear_area>:
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	c6 2f       	mov	r28, r22
     b2a:	d4 2f       	mov	r29, r20
     b2c:	0e 94 89 05 	call	0xb12	; 0xb12 <OLED_goto_pos>
     b30:	04 c0       	rjmp	.+8      	; 0xb3a <OLED_clear_area+0x16>
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
     b38:	cf 5f       	subi	r28, 0xFF	; 255
     b3a:	cd 17       	cp	r28, r29
     b3c:	d0 f3       	brcs	.-12     	; 0xb32 <OLED_clear_area+0xe>
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	08 95       	ret

00000b44 <OLED_print_rounded_arrow>:
}


void OLED_print_rounded_arrow( uint8_t page, uint8_t column ){
	OLED_goto_pos( page , column );
     b44:	0e 94 89 05 	call	0xb12	; 0xb12 <OLED_goto_pos>
	OLED_write_data ( 0b01100110 );
     b48:	86 e6       	ldi	r24, 0x66	; 102
     b4a:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b11111111 );
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b11111111 );
     b54:	8f ef       	ldi	r24, 0xFF	; 255
     b56:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b01111110 );
     b5a:	8e e7       	ldi	r24, 0x7E	; 126
     b5c:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00011000 );
     b60:	88 e1       	ldi	r24, 0x18	; 24
     b62:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00011000 );
     b66:	88 e1       	ldi	r24, 0x18	; 24
     b68:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00011000 );
     b6c:	88 e1       	ldi	r24, 0x18	; 24
     b6e:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00011000 );
     b72:	88 e1       	ldi	r24, 0x18	; 24
     b74:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00011000 );
     b78:	88 e1       	ldi	r24, 0x18	; 24
     b7a:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00111100 );
     b7e:	8c e3       	ldi	r24, 0x3C	; 60
     b80:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00111100 );
     b84:	8c e3       	ldi	r24, 0x3C	; 60
     b86:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
	OLED_write_data ( 0b00011000 );
     b8a:	88 e1       	ldi	r24, 0x18	; 24
     b8c:	0e 94 42 05 	call	0xa84	; 0xa84 <OLED_write_data>
     b90:	08 95       	ret

00000b92 <SPI_MasterInit>:


void SPI_MasterInit(void)
{	
	/* Set MOSI, SCK, *SS as output, all others input */
	DDRB |= (1<<DDB5)|(1<<DDB7)|(1<<DDB4);
     b92:	87 b3       	in	r24, 0x17	; 23
     b94:	80 6b       	ori	r24, 0xB0	; 176
     b96:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     b98:	8d b1       	in	r24, 0x0d	; 13
     b9a:	81 65       	ori	r24, 0x51	; 81
     b9c:	8d b9       	out	0x0d, r24	; 13
	//set MISO to input
	DDRB &= ~(1<<DDB6);	
     b9e:	87 b3       	in	r24, 0x17	; 23
     ba0:	8f 7b       	andi	r24, 0xBF	; 191
     ba2:	87 bb       	out	0x17, r24	; 23
     ba4:	08 95       	ret

00000ba6 <SPI_write>:


void SPI_write(uint8_t data)
{
	/* Start transmission */
	SPDR = data;
     ba6:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     ba8:	77 9b       	sbis	0x0e, 7	; 14
     baa:	fe cf       	rjmp	.-4      	; 0xba8 <SPI_write+0x2>
}
     bac:	08 95       	ret

00000bae <SPI_read>:

uint8_t SPI_read(void)
{
	// Send dummy-byte to receive data
	SPI_write(0xF);
     bae:	8f e0       	ldi	r24, 0x0F	; 15
     bb0:	0e 94 d3 05 	call	0xba6	; 0xba6 <SPI_write>
	
	return SPDR;
     bb4:	8f b1       	in	r24, 0x0f	; 15
}
     bb6:	08 95       	ret

00000bb8 <xmem_init>:
 */ 

#include "XMEMdriver.h"

void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
     bb8:	85 b7       	in	r24, 0x35	; 53
     bba:	80 68       	ori	r24, 0x80	; 128
     bbc:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // mask unused bits
     bbe:	80 b7       	in	r24, 0x30	; 48
     bc0:	80 62       	ori	r24, 0x20	; 32
     bc2:	80 bf       	out	0x30, r24	; 48
     bc4:	08 95       	ret

00000bc6 <adc_init>:
}

void adc_init ( void ){

	DDRD |= (1<<DDD5); // Set Data Direction PD5 to Write (output)
     bc6:	81 b3       	in	r24, 0x11	; 17
     bc8:	80 62       	ori	r24, 0x20	; 32
     bca:	81 bb       	out	0x11, r24	; 17
	DDRD |= (0<<DDD4); // Set Data Direction PD4 to Read (input). Used for BUSY from ADC
     bcc:	81 b3       	in	r24, 0x11	; 17
     bce:	81 bb       	out	0x11, r24	; 17
	
	TCCR1B |= (1<<WGM12 | 0<<WGM13); // Set CTC mode
     bd0:	8e b5       	in	r24, 0x2e	; 46
     bd2:	88 60       	ori	r24, 0x08	; 8
     bd4:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (0<<WGM10 | 0<<WGM11); // Set CTC mode
     bd6:	8f b5       	in	r24, 0x2f	; 47
     bd8:	8f bd       	out	0x2f, r24	; 47
	
	TCCR1B |= (1<<CS10 | 0<<CS11 | 0<<CS12); //Clk frequency equal to system clock
     bda:	8e b5       	in	r24, 0x2e	; 46
     bdc:	81 60       	ori	r24, 0x01	; 1
     bde:	8e bd       	out	0x2e, r24	; 46

	TCCR1A |= (0<<COM1A1 | 1<<COM1A0); // Set 0C1A to toggle on match
     be0:	8f b5       	in	r24, 0x2f	; 47
     be2:	80 64       	ori	r24, 0x40	; 64
     be4:	8f bd       	out	0x2f, r24	; 47
	
	OCR1A = 0x0; // Set compare to 0. Timer reset on compare equal, will always stay at 0, toggle every cycle (?)
     be6:	1b bc       	out	0x2b, r1	; 43
     be8:	1a bc       	out	0x2a, r1	; 42
     bea:	08 95       	ret

00000bec <__divmodhi4>:
     bec:	97 fb       	bst	r25, 7
     bee:	07 2e       	mov	r0, r23
     bf0:	16 f4       	brtc	.+4      	; 0xbf6 <__divmodhi4+0xa>
     bf2:	00 94       	com	r0
     bf4:	07 d0       	rcall	.+14     	; 0xc04 <__divmodhi4_neg1>
     bf6:	77 fd       	sbrc	r23, 7
     bf8:	09 d0       	rcall	.+18     	; 0xc0c <__divmodhi4_neg2>
     bfa:	0e 94 0a 06 	call	0xc14	; 0xc14 <__udivmodhi4>
     bfe:	07 fc       	sbrc	r0, 7
     c00:	05 d0       	rcall	.+10     	; 0xc0c <__divmodhi4_neg2>
     c02:	3e f4       	brtc	.+14     	; 0xc12 <__divmodhi4_exit>

00000c04 <__divmodhi4_neg1>:
     c04:	90 95       	com	r25
     c06:	81 95       	neg	r24
     c08:	9f 4f       	sbci	r25, 0xFF	; 255
     c0a:	08 95       	ret

00000c0c <__divmodhi4_neg2>:
     c0c:	70 95       	com	r23
     c0e:	61 95       	neg	r22
     c10:	7f 4f       	sbci	r23, 0xFF	; 255

00000c12 <__divmodhi4_exit>:
     c12:	08 95       	ret

00000c14 <__udivmodhi4>:
     c14:	aa 1b       	sub	r26, r26
     c16:	bb 1b       	sub	r27, r27
     c18:	51 e1       	ldi	r21, 0x11	; 17
     c1a:	07 c0       	rjmp	.+14     	; 0xc2a <__udivmodhi4_ep>

00000c1c <__udivmodhi4_loop>:
     c1c:	aa 1f       	adc	r26, r26
     c1e:	bb 1f       	adc	r27, r27
     c20:	a6 17       	cp	r26, r22
     c22:	b7 07       	cpc	r27, r23
     c24:	10 f0       	brcs	.+4      	; 0xc2a <__udivmodhi4_ep>
     c26:	a6 1b       	sub	r26, r22
     c28:	b7 0b       	sbc	r27, r23

00000c2a <__udivmodhi4_ep>:
     c2a:	88 1f       	adc	r24, r24
     c2c:	99 1f       	adc	r25, r25
     c2e:	5a 95       	dec	r21
     c30:	a9 f7       	brne	.-22     	; 0xc1c <__udivmodhi4_loop>
     c32:	80 95       	com	r24
     c34:	90 95       	com	r25
     c36:	bc 01       	movw	r22, r24
     c38:	cd 01       	movw	r24, r26
     c3a:	08 95       	ret

00000c3c <fdevopen>:
     c3c:	0f 93       	push	r16
     c3e:	1f 93       	push	r17
     c40:	cf 93       	push	r28
     c42:	df 93       	push	r29
     c44:	00 97       	sbiw	r24, 0x00	; 0
     c46:	31 f4       	brne	.+12     	; 0xc54 <fdevopen+0x18>
     c48:	61 15       	cp	r22, r1
     c4a:	71 05       	cpc	r23, r1
     c4c:	19 f4       	brne	.+6      	; 0xc54 <fdevopen+0x18>
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	3a c0       	rjmp	.+116    	; 0xcc8 <fdevopen+0x8c>
     c54:	8b 01       	movw	r16, r22
     c56:	ec 01       	movw	r28, r24
     c58:	6e e0       	ldi	r22, 0x0E	; 14
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 60 08 	call	0x10c0	; 0x10c0 <calloc>
     c64:	fc 01       	movw	r30, r24
     c66:	89 2b       	or	r24, r25
     c68:	91 f3       	breq	.-28     	; 0xc4e <fdevopen+0x12>
     c6a:	80 e8       	ldi	r24, 0x80	; 128
     c6c:	83 83       	std	Z+3, r24	; 0x03
     c6e:	01 15       	cp	r16, r1
     c70:	11 05       	cpc	r17, r1
     c72:	71 f0       	breq	.+28     	; 0xc90 <fdevopen+0x54>
     c74:	13 87       	std	Z+11, r17	; 0x0b
     c76:	02 87       	std	Z+10, r16	; 0x0a
     c78:	81 e8       	ldi	r24, 0x81	; 129
     c7a:	83 83       	std	Z+3, r24	; 0x03
     c7c:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <__iob>
     c80:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <__iob+0x1>
     c84:	89 2b       	or	r24, r25
     c86:	21 f4       	brne	.+8      	; 0xc90 <fdevopen+0x54>
     c88:	f0 93 ae 01 	sts	0x01AE, r31	; 0x8001ae <__iob+0x1>
     c8c:	e0 93 ad 01 	sts	0x01AD, r30	; 0x8001ad <__iob>
     c90:	20 97       	sbiw	r28, 0x00	; 0
     c92:	c9 f0       	breq	.+50     	; 0xcc6 <fdevopen+0x8a>
     c94:	d1 87       	std	Z+9, r29	; 0x09
     c96:	c0 87       	std	Z+8, r28	; 0x08
     c98:	83 81       	ldd	r24, Z+3	; 0x03
     c9a:	82 60       	ori	r24, 0x02	; 2
     c9c:	83 83       	std	Z+3, r24	; 0x03
     c9e:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <__iob+0x2>
     ca2:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <__iob+0x3>
     ca6:	89 2b       	or	r24, r25
     ca8:	71 f4       	brne	.+28     	; 0xcc6 <fdevopen+0x8a>
     caa:	f0 93 b0 01 	sts	0x01B0, r31	; 0x8001b0 <__iob+0x3>
     cae:	e0 93 af 01 	sts	0x01AF, r30	; 0x8001af <__iob+0x2>
     cb2:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <__iob+0x4>
     cb6:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <__iob+0x5>
     cba:	89 2b       	or	r24, r25
     cbc:	21 f4       	brne	.+8      	; 0xcc6 <fdevopen+0x8a>
     cbe:	f0 93 b2 01 	sts	0x01B2, r31	; 0x8001b2 <__iob+0x5>
     cc2:	e0 93 b1 01 	sts	0x01B1, r30	; 0x8001b1 <__iob+0x4>
     cc6:	cf 01       	movw	r24, r30
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	1f 91       	pop	r17
     cce:	0f 91       	pop	r16
     cd0:	08 95       	ret

00000cd2 <printf>:
     cd2:	a0 e0       	ldi	r26, 0x00	; 0
     cd4:	b0 e0       	ldi	r27, 0x00	; 0
     cd6:	ef e6       	ldi	r30, 0x6F	; 111
     cd8:	f6 e0       	ldi	r31, 0x06	; 6
     cda:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <__prologue_saves__+0x20>
     cde:	ae 01       	movw	r20, r28
     ce0:	4b 5f       	subi	r20, 0xFB	; 251
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	fa 01       	movw	r30, r20
     ce6:	61 91       	ld	r22, Z+
     ce8:	71 91       	ld	r23, Z+
     cea:	af 01       	movw	r20, r30
     cec:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <__iob+0x2>
     cf0:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <__iob+0x3>
     cf4:	0e 94 7f 06 	call	0xcfe	; 0xcfe <vfprintf>
     cf8:	e2 e0       	ldi	r30, 0x02	; 2
     cfa:	0c 94 80 0a 	jmp	0x1500	; 0x1500 <__epilogue_restores__+0x20>

00000cfe <vfprintf>:
     cfe:	ab e0       	ldi	r26, 0x0B	; 11
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	e5 e8       	ldi	r30, 0x85	; 133
     d04:	f6 e0       	ldi	r31, 0x06	; 6
     d06:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__prologue_saves__>
     d0a:	6c 01       	movw	r12, r24
     d0c:	7b 01       	movw	r14, r22
     d0e:	8a 01       	movw	r16, r20
     d10:	fc 01       	movw	r30, r24
     d12:	17 82       	std	Z+7, r1	; 0x07
     d14:	16 82       	std	Z+6, r1	; 0x06
     d16:	83 81       	ldd	r24, Z+3	; 0x03
     d18:	81 ff       	sbrs	r24, 1
     d1a:	cc c1       	rjmp	.+920    	; 0x10b4 <vfprintf+0x3b6>
     d1c:	ce 01       	movw	r24, r28
     d1e:	01 96       	adiw	r24, 0x01	; 1
     d20:	3c 01       	movw	r6, r24
     d22:	f6 01       	movw	r30, r12
     d24:	93 81       	ldd	r25, Z+3	; 0x03
     d26:	f7 01       	movw	r30, r14
     d28:	93 fd       	sbrc	r25, 3
     d2a:	85 91       	lpm	r24, Z+
     d2c:	93 ff       	sbrs	r25, 3
     d2e:	81 91       	ld	r24, Z+
     d30:	7f 01       	movw	r14, r30
     d32:	88 23       	and	r24, r24
     d34:	09 f4       	brne	.+2      	; 0xd38 <vfprintf+0x3a>
     d36:	ba c1       	rjmp	.+884    	; 0x10ac <vfprintf+0x3ae>
     d38:	85 32       	cpi	r24, 0x25	; 37
     d3a:	39 f4       	brne	.+14     	; 0xd4a <vfprintf+0x4c>
     d3c:	93 fd       	sbrc	r25, 3
     d3e:	85 91       	lpm	r24, Z+
     d40:	93 ff       	sbrs	r25, 3
     d42:	81 91       	ld	r24, Z+
     d44:	7f 01       	movw	r14, r30
     d46:	85 32       	cpi	r24, 0x25	; 37
     d48:	29 f4       	brne	.+10     	; 0xd54 <vfprintf+0x56>
     d4a:	b6 01       	movw	r22, r12
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
     d52:	e7 cf       	rjmp	.-50     	; 0xd22 <vfprintf+0x24>
     d54:	91 2c       	mov	r9, r1
     d56:	21 2c       	mov	r2, r1
     d58:	31 2c       	mov	r3, r1
     d5a:	ff e1       	ldi	r31, 0x1F	; 31
     d5c:	f3 15       	cp	r31, r3
     d5e:	d8 f0       	brcs	.+54     	; 0xd96 <vfprintf+0x98>
     d60:	8b 32       	cpi	r24, 0x2B	; 43
     d62:	79 f0       	breq	.+30     	; 0xd82 <vfprintf+0x84>
     d64:	38 f4       	brcc	.+14     	; 0xd74 <vfprintf+0x76>
     d66:	80 32       	cpi	r24, 0x20	; 32
     d68:	79 f0       	breq	.+30     	; 0xd88 <vfprintf+0x8a>
     d6a:	83 32       	cpi	r24, 0x23	; 35
     d6c:	a1 f4       	brne	.+40     	; 0xd96 <vfprintf+0x98>
     d6e:	23 2d       	mov	r18, r3
     d70:	20 61       	ori	r18, 0x10	; 16
     d72:	1d c0       	rjmp	.+58     	; 0xdae <vfprintf+0xb0>
     d74:	8d 32       	cpi	r24, 0x2D	; 45
     d76:	61 f0       	breq	.+24     	; 0xd90 <vfprintf+0x92>
     d78:	80 33       	cpi	r24, 0x30	; 48
     d7a:	69 f4       	brne	.+26     	; 0xd96 <vfprintf+0x98>
     d7c:	23 2d       	mov	r18, r3
     d7e:	21 60       	ori	r18, 0x01	; 1
     d80:	16 c0       	rjmp	.+44     	; 0xdae <vfprintf+0xb0>
     d82:	83 2d       	mov	r24, r3
     d84:	82 60       	ori	r24, 0x02	; 2
     d86:	38 2e       	mov	r3, r24
     d88:	e3 2d       	mov	r30, r3
     d8a:	e4 60       	ori	r30, 0x04	; 4
     d8c:	3e 2e       	mov	r3, r30
     d8e:	2a c0       	rjmp	.+84     	; 0xde4 <vfprintf+0xe6>
     d90:	f3 2d       	mov	r31, r3
     d92:	f8 60       	ori	r31, 0x08	; 8
     d94:	1d c0       	rjmp	.+58     	; 0xdd0 <vfprintf+0xd2>
     d96:	37 fc       	sbrc	r3, 7
     d98:	2d c0       	rjmp	.+90     	; 0xdf4 <vfprintf+0xf6>
     d9a:	20 ed       	ldi	r18, 0xD0	; 208
     d9c:	28 0f       	add	r18, r24
     d9e:	2a 30       	cpi	r18, 0x0A	; 10
     da0:	40 f0       	brcs	.+16     	; 0xdb2 <vfprintf+0xb4>
     da2:	8e 32       	cpi	r24, 0x2E	; 46
     da4:	b9 f4       	brne	.+46     	; 0xdd4 <vfprintf+0xd6>
     da6:	36 fc       	sbrc	r3, 6
     da8:	81 c1       	rjmp	.+770    	; 0x10ac <vfprintf+0x3ae>
     daa:	23 2d       	mov	r18, r3
     dac:	20 64       	ori	r18, 0x40	; 64
     dae:	32 2e       	mov	r3, r18
     db0:	19 c0       	rjmp	.+50     	; 0xde4 <vfprintf+0xe6>
     db2:	36 fe       	sbrs	r3, 6
     db4:	06 c0       	rjmp	.+12     	; 0xdc2 <vfprintf+0xc4>
     db6:	8a e0       	ldi	r24, 0x0A	; 10
     db8:	98 9e       	mul	r9, r24
     dba:	20 0d       	add	r18, r0
     dbc:	11 24       	eor	r1, r1
     dbe:	92 2e       	mov	r9, r18
     dc0:	11 c0       	rjmp	.+34     	; 0xde4 <vfprintf+0xe6>
     dc2:	ea e0       	ldi	r30, 0x0A	; 10
     dc4:	2e 9e       	mul	r2, r30
     dc6:	20 0d       	add	r18, r0
     dc8:	11 24       	eor	r1, r1
     dca:	22 2e       	mov	r2, r18
     dcc:	f3 2d       	mov	r31, r3
     dce:	f0 62       	ori	r31, 0x20	; 32
     dd0:	3f 2e       	mov	r3, r31
     dd2:	08 c0       	rjmp	.+16     	; 0xde4 <vfprintf+0xe6>
     dd4:	8c 36       	cpi	r24, 0x6C	; 108
     dd6:	21 f4       	brne	.+8      	; 0xde0 <vfprintf+0xe2>
     dd8:	83 2d       	mov	r24, r3
     dda:	80 68       	ori	r24, 0x80	; 128
     ddc:	38 2e       	mov	r3, r24
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <vfprintf+0xe6>
     de0:	88 36       	cpi	r24, 0x68	; 104
     de2:	41 f4       	brne	.+16     	; 0xdf4 <vfprintf+0xf6>
     de4:	f7 01       	movw	r30, r14
     de6:	93 fd       	sbrc	r25, 3
     de8:	85 91       	lpm	r24, Z+
     dea:	93 ff       	sbrs	r25, 3
     dec:	81 91       	ld	r24, Z+
     dee:	7f 01       	movw	r14, r30
     df0:	81 11       	cpse	r24, r1
     df2:	b3 cf       	rjmp	.-154    	; 0xd5a <vfprintf+0x5c>
     df4:	98 2f       	mov	r25, r24
     df6:	9f 7d       	andi	r25, 0xDF	; 223
     df8:	95 54       	subi	r25, 0x45	; 69
     dfa:	93 30       	cpi	r25, 0x03	; 3
     dfc:	28 f4       	brcc	.+10     	; 0xe08 <vfprintf+0x10a>
     dfe:	0c 5f       	subi	r16, 0xFC	; 252
     e00:	1f 4f       	sbci	r17, 0xFF	; 255
     e02:	9f e3       	ldi	r25, 0x3F	; 63
     e04:	99 83       	std	Y+1, r25	; 0x01
     e06:	0d c0       	rjmp	.+26     	; 0xe22 <vfprintf+0x124>
     e08:	83 36       	cpi	r24, 0x63	; 99
     e0a:	31 f0       	breq	.+12     	; 0xe18 <vfprintf+0x11a>
     e0c:	83 37       	cpi	r24, 0x73	; 115
     e0e:	71 f0       	breq	.+28     	; 0xe2c <vfprintf+0x12e>
     e10:	83 35       	cpi	r24, 0x53	; 83
     e12:	09 f0       	breq	.+2      	; 0xe16 <vfprintf+0x118>
     e14:	59 c0       	rjmp	.+178    	; 0xec8 <vfprintf+0x1ca>
     e16:	21 c0       	rjmp	.+66     	; 0xe5a <vfprintf+0x15c>
     e18:	f8 01       	movw	r30, r16
     e1a:	80 81       	ld	r24, Z
     e1c:	89 83       	std	Y+1, r24	; 0x01
     e1e:	0e 5f       	subi	r16, 0xFE	; 254
     e20:	1f 4f       	sbci	r17, 0xFF	; 255
     e22:	88 24       	eor	r8, r8
     e24:	83 94       	inc	r8
     e26:	91 2c       	mov	r9, r1
     e28:	53 01       	movw	r10, r6
     e2a:	13 c0       	rjmp	.+38     	; 0xe52 <vfprintf+0x154>
     e2c:	28 01       	movw	r4, r16
     e2e:	f2 e0       	ldi	r31, 0x02	; 2
     e30:	4f 0e       	add	r4, r31
     e32:	51 1c       	adc	r5, r1
     e34:	f8 01       	movw	r30, r16
     e36:	a0 80       	ld	r10, Z
     e38:	b1 80       	ldd	r11, Z+1	; 0x01
     e3a:	36 fe       	sbrs	r3, 6
     e3c:	03 c0       	rjmp	.+6      	; 0xe44 <vfprintf+0x146>
     e3e:	69 2d       	mov	r22, r9
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <vfprintf+0x14a>
     e44:	6f ef       	ldi	r22, 0xFF	; 255
     e46:	7f ef       	ldi	r23, 0xFF	; 255
     e48:	c5 01       	movw	r24, r10
     e4a:	0e 94 af 09 	call	0x135e	; 0x135e <strnlen>
     e4e:	4c 01       	movw	r8, r24
     e50:	82 01       	movw	r16, r4
     e52:	f3 2d       	mov	r31, r3
     e54:	ff 77       	andi	r31, 0x7F	; 127
     e56:	3f 2e       	mov	r3, r31
     e58:	16 c0       	rjmp	.+44     	; 0xe86 <vfprintf+0x188>
     e5a:	28 01       	movw	r4, r16
     e5c:	22 e0       	ldi	r18, 0x02	; 2
     e5e:	42 0e       	add	r4, r18
     e60:	51 1c       	adc	r5, r1
     e62:	f8 01       	movw	r30, r16
     e64:	a0 80       	ld	r10, Z
     e66:	b1 80       	ldd	r11, Z+1	; 0x01
     e68:	36 fe       	sbrs	r3, 6
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <vfprintf+0x174>
     e6c:	69 2d       	mov	r22, r9
     e6e:	70 e0       	ldi	r23, 0x00	; 0
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <vfprintf+0x178>
     e72:	6f ef       	ldi	r22, 0xFF	; 255
     e74:	7f ef       	ldi	r23, 0xFF	; 255
     e76:	c5 01       	movw	r24, r10
     e78:	0e 94 9d 09 	call	0x133a	; 0x133a <strnlen_P>
     e7c:	4c 01       	movw	r8, r24
     e7e:	f3 2d       	mov	r31, r3
     e80:	f0 68       	ori	r31, 0x80	; 128
     e82:	3f 2e       	mov	r3, r31
     e84:	82 01       	movw	r16, r4
     e86:	33 fc       	sbrc	r3, 3
     e88:	1b c0       	rjmp	.+54     	; 0xec0 <vfprintf+0x1c2>
     e8a:	82 2d       	mov	r24, r2
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	88 16       	cp	r8, r24
     e90:	99 06       	cpc	r9, r25
     e92:	b0 f4       	brcc	.+44     	; 0xec0 <vfprintf+0x1c2>
     e94:	b6 01       	movw	r22, r12
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
     e9e:	2a 94       	dec	r2
     ea0:	f4 cf       	rjmp	.-24     	; 0xe8a <vfprintf+0x18c>
     ea2:	f5 01       	movw	r30, r10
     ea4:	37 fc       	sbrc	r3, 7
     ea6:	85 91       	lpm	r24, Z+
     ea8:	37 fe       	sbrs	r3, 7
     eaa:	81 91       	ld	r24, Z+
     eac:	5f 01       	movw	r10, r30
     eae:	b6 01       	movw	r22, r12
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
     eb6:	21 10       	cpse	r2, r1
     eb8:	2a 94       	dec	r2
     eba:	21 e0       	ldi	r18, 0x01	; 1
     ebc:	82 1a       	sub	r8, r18
     ebe:	91 08       	sbc	r9, r1
     ec0:	81 14       	cp	r8, r1
     ec2:	91 04       	cpc	r9, r1
     ec4:	71 f7       	brne	.-36     	; 0xea2 <vfprintf+0x1a4>
     ec6:	e8 c0       	rjmp	.+464    	; 0x1098 <vfprintf+0x39a>
     ec8:	84 36       	cpi	r24, 0x64	; 100
     eca:	11 f0       	breq	.+4      	; 0xed0 <vfprintf+0x1d2>
     ecc:	89 36       	cpi	r24, 0x69	; 105
     ece:	41 f5       	brne	.+80     	; 0xf20 <vfprintf+0x222>
     ed0:	f8 01       	movw	r30, r16
     ed2:	37 fe       	sbrs	r3, 7
     ed4:	07 c0       	rjmp	.+14     	; 0xee4 <vfprintf+0x1e6>
     ed6:	60 81       	ld	r22, Z
     ed8:	71 81       	ldd	r23, Z+1	; 0x01
     eda:	82 81       	ldd	r24, Z+2	; 0x02
     edc:	93 81       	ldd	r25, Z+3	; 0x03
     ede:	0c 5f       	subi	r16, 0xFC	; 252
     ee0:	1f 4f       	sbci	r17, 0xFF	; 255
     ee2:	08 c0       	rjmp	.+16     	; 0xef4 <vfprintf+0x1f6>
     ee4:	60 81       	ld	r22, Z
     ee6:	71 81       	ldd	r23, Z+1	; 0x01
     ee8:	07 2e       	mov	r0, r23
     eea:	00 0c       	add	r0, r0
     eec:	88 0b       	sbc	r24, r24
     eee:	99 0b       	sbc	r25, r25
     ef0:	0e 5f       	subi	r16, 0xFE	; 254
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	f3 2d       	mov	r31, r3
     ef6:	ff 76       	andi	r31, 0x6F	; 111
     ef8:	3f 2e       	mov	r3, r31
     efa:	97 ff       	sbrs	r25, 7
     efc:	09 c0       	rjmp	.+18     	; 0xf10 <vfprintf+0x212>
     efe:	90 95       	com	r25
     f00:	80 95       	com	r24
     f02:	70 95       	com	r23
     f04:	61 95       	neg	r22
     f06:	7f 4f       	sbci	r23, 0xFF	; 255
     f08:	8f 4f       	sbci	r24, 0xFF	; 255
     f0a:	9f 4f       	sbci	r25, 0xFF	; 255
     f0c:	f0 68       	ori	r31, 0x80	; 128
     f0e:	3f 2e       	mov	r3, r31
     f10:	2a e0       	ldi	r18, 0x0A	; 10
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	a3 01       	movw	r20, r6
     f16:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__ultoa_invert>
     f1a:	88 2e       	mov	r8, r24
     f1c:	86 18       	sub	r8, r6
     f1e:	45 c0       	rjmp	.+138    	; 0xfaa <vfprintf+0x2ac>
     f20:	85 37       	cpi	r24, 0x75	; 117
     f22:	31 f4       	brne	.+12     	; 0xf30 <vfprintf+0x232>
     f24:	23 2d       	mov	r18, r3
     f26:	2f 7e       	andi	r18, 0xEF	; 239
     f28:	b2 2e       	mov	r11, r18
     f2a:	2a e0       	ldi	r18, 0x0A	; 10
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	25 c0       	rjmp	.+74     	; 0xf7a <vfprintf+0x27c>
     f30:	93 2d       	mov	r25, r3
     f32:	99 7f       	andi	r25, 0xF9	; 249
     f34:	b9 2e       	mov	r11, r25
     f36:	8f 36       	cpi	r24, 0x6F	; 111
     f38:	c1 f0       	breq	.+48     	; 0xf6a <vfprintf+0x26c>
     f3a:	18 f4       	brcc	.+6      	; 0xf42 <vfprintf+0x244>
     f3c:	88 35       	cpi	r24, 0x58	; 88
     f3e:	79 f0       	breq	.+30     	; 0xf5e <vfprintf+0x260>
     f40:	b5 c0       	rjmp	.+362    	; 0x10ac <vfprintf+0x3ae>
     f42:	80 37       	cpi	r24, 0x70	; 112
     f44:	19 f0       	breq	.+6      	; 0xf4c <vfprintf+0x24e>
     f46:	88 37       	cpi	r24, 0x78	; 120
     f48:	21 f0       	breq	.+8      	; 0xf52 <vfprintf+0x254>
     f4a:	b0 c0       	rjmp	.+352    	; 0x10ac <vfprintf+0x3ae>
     f4c:	e9 2f       	mov	r30, r25
     f4e:	e0 61       	ori	r30, 0x10	; 16
     f50:	be 2e       	mov	r11, r30
     f52:	b4 fe       	sbrs	r11, 4
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <vfprintf+0x272>
     f56:	fb 2d       	mov	r31, r11
     f58:	f4 60       	ori	r31, 0x04	; 4
     f5a:	bf 2e       	mov	r11, r31
     f5c:	09 c0       	rjmp	.+18     	; 0xf70 <vfprintf+0x272>
     f5e:	34 fe       	sbrs	r3, 4
     f60:	0a c0       	rjmp	.+20     	; 0xf76 <vfprintf+0x278>
     f62:	29 2f       	mov	r18, r25
     f64:	26 60       	ori	r18, 0x06	; 6
     f66:	b2 2e       	mov	r11, r18
     f68:	06 c0       	rjmp	.+12     	; 0xf76 <vfprintf+0x278>
     f6a:	28 e0       	ldi	r18, 0x08	; 8
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	05 c0       	rjmp	.+10     	; 0xf7a <vfprintf+0x27c>
     f70:	20 e1       	ldi	r18, 0x10	; 16
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <vfprintf+0x27c>
     f76:	20 e1       	ldi	r18, 0x10	; 16
     f78:	32 e0       	ldi	r19, 0x02	; 2
     f7a:	f8 01       	movw	r30, r16
     f7c:	b7 fe       	sbrs	r11, 7
     f7e:	07 c0       	rjmp	.+14     	; 0xf8e <vfprintf+0x290>
     f80:	60 81       	ld	r22, Z
     f82:	71 81       	ldd	r23, Z+1	; 0x01
     f84:	82 81       	ldd	r24, Z+2	; 0x02
     f86:	93 81       	ldd	r25, Z+3	; 0x03
     f88:	0c 5f       	subi	r16, 0xFC	; 252
     f8a:	1f 4f       	sbci	r17, 0xFF	; 255
     f8c:	06 c0       	rjmp	.+12     	; 0xf9a <vfprintf+0x29c>
     f8e:	60 81       	ld	r22, Z
     f90:	71 81       	ldd	r23, Z+1	; 0x01
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	0e 5f       	subi	r16, 0xFE	; 254
     f98:	1f 4f       	sbci	r17, 0xFF	; 255
     f9a:	a3 01       	movw	r20, r6
     f9c:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__ultoa_invert>
     fa0:	88 2e       	mov	r8, r24
     fa2:	86 18       	sub	r8, r6
     fa4:	fb 2d       	mov	r31, r11
     fa6:	ff 77       	andi	r31, 0x7F	; 127
     fa8:	3f 2e       	mov	r3, r31
     faa:	36 fe       	sbrs	r3, 6
     fac:	0d c0       	rjmp	.+26     	; 0xfc8 <vfprintf+0x2ca>
     fae:	23 2d       	mov	r18, r3
     fb0:	2e 7f       	andi	r18, 0xFE	; 254
     fb2:	a2 2e       	mov	r10, r18
     fb4:	89 14       	cp	r8, r9
     fb6:	58 f4       	brcc	.+22     	; 0xfce <vfprintf+0x2d0>
     fb8:	34 fe       	sbrs	r3, 4
     fba:	0b c0       	rjmp	.+22     	; 0xfd2 <vfprintf+0x2d4>
     fbc:	32 fc       	sbrc	r3, 2
     fbe:	09 c0       	rjmp	.+18     	; 0xfd2 <vfprintf+0x2d4>
     fc0:	83 2d       	mov	r24, r3
     fc2:	8e 7e       	andi	r24, 0xEE	; 238
     fc4:	a8 2e       	mov	r10, r24
     fc6:	05 c0       	rjmp	.+10     	; 0xfd2 <vfprintf+0x2d4>
     fc8:	b8 2c       	mov	r11, r8
     fca:	a3 2c       	mov	r10, r3
     fcc:	03 c0       	rjmp	.+6      	; 0xfd4 <vfprintf+0x2d6>
     fce:	b8 2c       	mov	r11, r8
     fd0:	01 c0       	rjmp	.+2      	; 0xfd4 <vfprintf+0x2d6>
     fd2:	b9 2c       	mov	r11, r9
     fd4:	a4 fe       	sbrs	r10, 4
     fd6:	0f c0       	rjmp	.+30     	; 0xff6 <vfprintf+0x2f8>
     fd8:	fe 01       	movw	r30, r28
     fda:	e8 0d       	add	r30, r8
     fdc:	f1 1d       	adc	r31, r1
     fde:	80 81       	ld	r24, Z
     fe0:	80 33       	cpi	r24, 0x30	; 48
     fe2:	21 f4       	brne	.+8      	; 0xfec <vfprintf+0x2ee>
     fe4:	9a 2d       	mov	r25, r10
     fe6:	99 7e       	andi	r25, 0xE9	; 233
     fe8:	a9 2e       	mov	r10, r25
     fea:	09 c0       	rjmp	.+18     	; 0xffe <vfprintf+0x300>
     fec:	a2 fe       	sbrs	r10, 2
     fee:	06 c0       	rjmp	.+12     	; 0xffc <vfprintf+0x2fe>
     ff0:	b3 94       	inc	r11
     ff2:	b3 94       	inc	r11
     ff4:	04 c0       	rjmp	.+8      	; 0xffe <vfprintf+0x300>
     ff6:	8a 2d       	mov	r24, r10
     ff8:	86 78       	andi	r24, 0x86	; 134
     ffa:	09 f0       	breq	.+2      	; 0xffe <vfprintf+0x300>
     ffc:	b3 94       	inc	r11
     ffe:	a3 fc       	sbrc	r10, 3
    1000:	11 c0       	rjmp	.+34     	; 0x1024 <vfprintf+0x326>
    1002:	a0 fe       	sbrs	r10, 0
    1004:	06 c0       	rjmp	.+12     	; 0x1012 <vfprintf+0x314>
    1006:	b2 14       	cp	r11, r2
    1008:	88 f4       	brcc	.+34     	; 0x102c <vfprintf+0x32e>
    100a:	28 0c       	add	r2, r8
    100c:	92 2c       	mov	r9, r2
    100e:	9b 18       	sub	r9, r11
    1010:	0e c0       	rjmp	.+28     	; 0x102e <vfprintf+0x330>
    1012:	b2 14       	cp	r11, r2
    1014:	60 f4       	brcc	.+24     	; 0x102e <vfprintf+0x330>
    1016:	b6 01       	movw	r22, r12
    1018:	80 e2       	ldi	r24, 0x20	; 32
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
    1020:	b3 94       	inc	r11
    1022:	f7 cf       	rjmp	.-18     	; 0x1012 <vfprintf+0x314>
    1024:	b2 14       	cp	r11, r2
    1026:	18 f4       	brcc	.+6      	; 0x102e <vfprintf+0x330>
    1028:	2b 18       	sub	r2, r11
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <vfprintf+0x332>
    102c:	98 2c       	mov	r9, r8
    102e:	21 2c       	mov	r2, r1
    1030:	a4 fe       	sbrs	r10, 4
    1032:	10 c0       	rjmp	.+32     	; 0x1054 <vfprintf+0x356>
    1034:	b6 01       	movw	r22, r12
    1036:	80 e3       	ldi	r24, 0x30	; 48
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
    103e:	a2 fe       	sbrs	r10, 2
    1040:	17 c0       	rjmp	.+46     	; 0x1070 <vfprintf+0x372>
    1042:	a1 fc       	sbrc	r10, 1
    1044:	03 c0       	rjmp	.+6      	; 0x104c <vfprintf+0x34e>
    1046:	88 e7       	ldi	r24, 0x78	; 120
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <vfprintf+0x352>
    104c:	88 e5       	ldi	r24, 0x58	; 88
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	b6 01       	movw	r22, r12
    1052:	0c c0       	rjmp	.+24     	; 0x106c <vfprintf+0x36e>
    1054:	8a 2d       	mov	r24, r10
    1056:	86 78       	andi	r24, 0x86	; 134
    1058:	59 f0       	breq	.+22     	; 0x1070 <vfprintf+0x372>
    105a:	a1 fe       	sbrs	r10, 1
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <vfprintf+0x364>
    105e:	8b e2       	ldi	r24, 0x2B	; 43
    1060:	01 c0       	rjmp	.+2      	; 0x1064 <vfprintf+0x366>
    1062:	80 e2       	ldi	r24, 0x20	; 32
    1064:	a7 fc       	sbrc	r10, 7
    1066:	8d e2       	ldi	r24, 0x2D	; 45
    1068:	b6 01       	movw	r22, r12
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
    1070:	89 14       	cp	r8, r9
    1072:	38 f4       	brcc	.+14     	; 0x1082 <vfprintf+0x384>
    1074:	b6 01       	movw	r22, r12
    1076:	80 e3       	ldi	r24, 0x30	; 48
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
    107e:	9a 94       	dec	r9
    1080:	f7 cf       	rjmp	.-18     	; 0x1070 <vfprintf+0x372>
    1082:	8a 94       	dec	r8
    1084:	f3 01       	movw	r30, r6
    1086:	e8 0d       	add	r30, r8
    1088:	f1 1d       	adc	r31, r1
    108a:	80 81       	ld	r24, Z
    108c:	b6 01       	movw	r22, r12
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
    1094:	81 10       	cpse	r8, r1
    1096:	f5 cf       	rjmp	.-22     	; 0x1082 <vfprintf+0x384>
    1098:	22 20       	and	r2, r2
    109a:	09 f4       	brne	.+2      	; 0x109e <vfprintf+0x3a0>
    109c:	42 ce       	rjmp	.-892    	; 0xd22 <vfprintf+0x24>
    109e:	b6 01       	movw	r22, r12
    10a0:	80 e2       	ldi	r24, 0x20	; 32
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	0e 94 ba 09 	call	0x1374	; 0x1374 <fputc>
    10a8:	2a 94       	dec	r2
    10aa:	f6 cf       	rjmp	.-20     	; 0x1098 <vfprintf+0x39a>
    10ac:	f6 01       	movw	r30, r12
    10ae:	86 81       	ldd	r24, Z+6	; 0x06
    10b0:	97 81       	ldd	r25, Z+7	; 0x07
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <vfprintf+0x3ba>
    10b4:	8f ef       	ldi	r24, 0xFF	; 255
    10b6:	9f ef       	ldi	r25, 0xFF	; 255
    10b8:	2b 96       	adiw	r28, 0x0b	; 11
    10ba:	e2 e1       	ldi	r30, 0x12	; 18
    10bc:	0c 94 70 0a 	jmp	0x14e0	; 0x14e0 <__epilogue_restores__>

000010c0 <calloc>:
    10c0:	0f 93       	push	r16
    10c2:	1f 93       	push	r17
    10c4:	cf 93       	push	r28
    10c6:	df 93       	push	r29
    10c8:	86 9f       	mul	r24, r22
    10ca:	80 01       	movw	r16, r0
    10cc:	87 9f       	mul	r24, r23
    10ce:	10 0d       	add	r17, r0
    10d0:	96 9f       	mul	r25, r22
    10d2:	10 0d       	add	r17, r0
    10d4:	11 24       	eor	r1, r1
    10d6:	c8 01       	movw	r24, r16
    10d8:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <malloc>
    10dc:	ec 01       	movw	r28, r24
    10de:	00 97       	sbiw	r24, 0x00	; 0
    10e0:	29 f0       	breq	.+10     	; 0x10ec <calloc+0x2c>
    10e2:	a8 01       	movw	r20, r16
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	70 e0       	ldi	r23, 0x00	; 0
    10e8:	0e 94 a8 09 	call	0x1350	; 0x1350 <memset>
    10ec:	ce 01       	movw	r24, r28
    10ee:	df 91       	pop	r29
    10f0:	cf 91       	pop	r28
    10f2:	1f 91       	pop	r17
    10f4:	0f 91       	pop	r16
    10f6:	08 95       	ret

000010f8 <malloc>:
    10f8:	0f 93       	push	r16
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	82 30       	cpi	r24, 0x02	; 2
    1102:	91 05       	cpc	r25, r1
    1104:	10 f4       	brcc	.+4      	; 0x110a <malloc+0x12>
    1106:	82 e0       	ldi	r24, 0x02	; 2
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	e0 91 b5 01 	lds	r30, 0x01B5	; 0x8001b5 <__flp>
    110e:	f0 91 b6 01 	lds	r31, 0x01B6	; 0x8001b6 <__flp+0x1>
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	a0 e0       	ldi	r26, 0x00	; 0
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	30 97       	sbiw	r30, 0x00	; 0
    111c:	19 f1       	breq	.+70     	; 0x1164 <malloc+0x6c>
    111e:	40 81       	ld	r20, Z
    1120:	51 81       	ldd	r21, Z+1	; 0x01
    1122:	02 81       	ldd	r16, Z+2	; 0x02
    1124:	13 81       	ldd	r17, Z+3	; 0x03
    1126:	48 17       	cp	r20, r24
    1128:	59 07       	cpc	r21, r25
    112a:	c8 f0       	brcs	.+50     	; 0x115e <malloc+0x66>
    112c:	84 17       	cp	r24, r20
    112e:	95 07       	cpc	r25, r21
    1130:	69 f4       	brne	.+26     	; 0x114c <malloc+0x54>
    1132:	10 97       	sbiw	r26, 0x00	; 0
    1134:	31 f0       	breq	.+12     	; 0x1142 <malloc+0x4a>
    1136:	12 96       	adiw	r26, 0x02	; 2
    1138:	0c 93       	st	X, r16
    113a:	12 97       	sbiw	r26, 0x02	; 2
    113c:	13 96       	adiw	r26, 0x03	; 3
    113e:	1c 93       	st	X, r17
    1140:	27 c0       	rjmp	.+78     	; 0x1190 <malloc+0x98>
    1142:	00 93 b5 01 	sts	0x01B5, r16	; 0x8001b5 <__flp>
    1146:	10 93 b6 01 	sts	0x01B6, r17	; 0x8001b6 <__flp+0x1>
    114a:	22 c0       	rjmp	.+68     	; 0x1190 <malloc+0x98>
    114c:	21 15       	cp	r18, r1
    114e:	31 05       	cpc	r19, r1
    1150:	19 f0       	breq	.+6      	; 0x1158 <malloc+0x60>
    1152:	42 17       	cp	r20, r18
    1154:	53 07       	cpc	r21, r19
    1156:	18 f4       	brcc	.+6      	; 0x115e <malloc+0x66>
    1158:	9a 01       	movw	r18, r20
    115a:	bd 01       	movw	r22, r26
    115c:	ef 01       	movw	r28, r30
    115e:	df 01       	movw	r26, r30
    1160:	f8 01       	movw	r30, r16
    1162:	db cf       	rjmp	.-74     	; 0x111a <malloc+0x22>
    1164:	21 15       	cp	r18, r1
    1166:	31 05       	cpc	r19, r1
    1168:	f9 f0       	breq	.+62     	; 0x11a8 <malloc+0xb0>
    116a:	28 1b       	sub	r18, r24
    116c:	39 0b       	sbc	r19, r25
    116e:	24 30       	cpi	r18, 0x04	; 4
    1170:	31 05       	cpc	r19, r1
    1172:	80 f4       	brcc	.+32     	; 0x1194 <malloc+0x9c>
    1174:	8a 81       	ldd	r24, Y+2	; 0x02
    1176:	9b 81       	ldd	r25, Y+3	; 0x03
    1178:	61 15       	cp	r22, r1
    117a:	71 05       	cpc	r23, r1
    117c:	21 f0       	breq	.+8      	; 0x1186 <malloc+0x8e>
    117e:	fb 01       	movw	r30, r22
    1180:	93 83       	std	Z+3, r25	; 0x03
    1182:	82 83       	std	Z+2, r24	; 0x02
    1184:	04 c0       	rjmp	.+8      	; 0x118e <malloc+0x96>
    1186:	90 93 b6 01 	sts	0x01B6, r25	; 0x8001b6 <__flp+0x1>
    118a:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <__flp>
    118e:	fe 01       	movw	r30, r28
    1190:	32 96       	adiw	r30, 0x02	; 2
    1192:	44 c0       	rjmp	.+136    	; 0x121c <malloc+0x124>
    1194:	fe 01       	movw	r30, r28
    1196:	e2 0f       	add	r30, r18
    1198:	f3 1f       	adc	r31, r19
    119a:	81 93       	st	Z+, r24
    119c:	91 93       	st	Z+, r25
    119e:	22 50       	subi	r18, 0x02	; 2
    11a0:	31 09       	sbc	r19, r1
    11a2:	39 83       	std	Y+1, r19	; 0x01
    11a4:	28 83       	st	Y, r18
    11a6:	3a c0       	rjmp	.+116    	; 0x121c <malloc+0x124>
    11a8:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <__brkval>
    11ac:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <__brkval+0x1>
    11b0:	23 2b       	or	r18, r19
    11b2:	41 f4       	brne	.+16     	; 0x11c4 <malloc+0xcc>
    11b4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    11b8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    11bc:	30 93 b4 01 	sts	0x01B4, r19	; 0x8001b4 <__brkval+0x1>
    11c0:	20 93 b3 01 	sts	0x01B3, r18	; 0x8001b3 <__brkval>
    11c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    11c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11cc:	21 15       	cp	r18, r1
    11ce:	31 05       	cpc	r19, r1
    11d0:	41 f4       	brne	.+16     	; 0x11e2 <malloc+0xea>
    11d2:	2d b7       	in	r18, 0x3d	; 61
    11d4:	3e b7       	in	r19, 0x3e	; 62
    11d6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    11da:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    11de:	24 1b       	sub	r18, r20
    11e0:	35 0b       	sbc	r19, r21
    11e2:	e0 91 b3 01 	lds	r30, 0x01B3	; 0x8001b3 <__brkval>
    11e6:	f0 91 b4 01 	lds	r31, 0x01B4	; 0x8001b4 <__brkval+0x1>
    11ea:	e2 17       	cp	r30, r18
    11ec:	f3 07       	cpc	r31, r19
    11ee:	a0 f4       	brcc	.+40     	; 0x1218 <malloc+0x120>
    11f0:	2e 1b       	sub	r18, r30
    11f2:	3f 0b       	sbc	r19, r31
    11f4:	28 17       	cp	r18, r24
    11f6:	39 07       	cpc	r19, r25
    11f8:	78 f0       	brcs	.+30     	; 0x1218 <malloc+0x120>
    11fa:	ac 01       	movw	r20, r24
    11fc:	4e 5f       	subi	r20, 0xFE	; 254
    11fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1200:	24 17       	cp	r18, r20
    1202:	35 07       	cpc	r19, r21
    1204:	48 f0       	brcs	.+18     	; 0x1218 <malloc+0x120>
    1206:	4e 0f       	add	r20, r30
    1208:	5f 1f       	adc	r21, r31
    120a:	50 93 b4 01 	sts	0x01B4, r21	; 0x8001b4 <__brkval+0x1>
    120e:	40 93 b3 01 	sts	0x01B3, r20	; 0x8001b3 <__brkval>
    1212:	81 93       	st	Z+, r24
    1214:	91 93       	st	Z+, r25
    1216:	02 c0       	rjmp	.+4      	; 0x121c <malloc+0x124>
    1218:	e0 e0       	ldi	r30, 0x00	; 0
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	cf 01       	movw	r24, r30
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	1f 91       	pop	r17
    1224:	0f 91       	pop	r16
    1226:	08 95       	ret

00001228 <free>:
    1228:	cf 93       	push	r28
    122a:	df 93       	push	r29
    122c:	00 97       	sbiw	r24, 0x00	; 0
    122e:	09 f4       	brne	.+2      	; 0x1232 <free+0xa>
    1230:	81 c0       	rjmp	.+258    	; 0x1334 <free+0x10c>
    1232:	fc 01       	movw	r30, r24
    1234:	32 97       	sbiw	r30, 0x02	; 2
    1236:	13 82       	std	Z+3, r1	; 0x03
    1238:	12 82       	std	Z+2, r1	; 0x02
    123a:	a0 91 b5 01 	lds	r26, 0x01B5	; 0x8001b5 <__flp>
    123e:	b0 91 b6 01 	lds	r27, 0x01B6	; 0x8001b6 <__flp+0x1>
    1242:	10 97       	sbiw	r26, 0x00	; 0
    1244:	81 f4       	brne	.+32     	; 0x1266 <free+0x3e>
    1246:	20 81       	ld	r18, Z
    1248:	31 81       	ldd	r19, Z+1	; 0x01
    124a:	82 0f       	add	r24, r18
    124c:	93 1f       	adc	r25, r19
    124e:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <__brkval>
    1252:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <__brkval+0x1>
    1256:	28 17       	cp	r18, r24
    1258:	39 07       	cpc	r19, r25
    125a:	51 f5       	brne	.+84     	; 0x12b0 <free+0x88>
    125c:	f0 93 b4 01 	sts	0x01B4, r31	; 0x8001b4 <__brkval+0x1>
    1260:	e0 93 b3 01 	sts	0x01B3, r30	; 0x8001b3 <__brkval>
    1264:	67 c0       	rjmp	.+206    	; 0x1334 <free+0x10c>
    1266:	ed 01       	movw	r28, r26
    1268:	20 e0       	ldi	r18, 0x00	; 0
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	ce 17       	cp	r28, r30
    126e:	df 07       	cpc	r29, r31
    1270:	40 f4       	brcc	.+16     	; 0x1282 <free+0x5a>
    1272:	4a 81       	ldd	r20, Y+2	; 0x02
    1274:	5b 81       	ldd	r21, Y+3	; 0x03
    1276:	9e 01       	movw	r18, r28
    1278:	41 15       	cp	r20, r1
    127a:	51 05       	cpc	r21, r1
    127c:	f1 f0       	breq	.+60     	; 0x12ba <free+0x92>
    127e:	ea 01       	movw	r28, r20
    1280:	f5 cf       	rjmp	.-22     	; 0x126c <free+0x44>
    1282:	d3 83       	std	Z+3, r29	; 0x03
    1284:	c2 83       	std	Z+2, r28	; 0x02
    1286:	40 81       	ld	r20, Z
    1288:	51 81       	ldd	r21, Z+1	; 0x01
    128a:	84 0f       	add	r24, r20
    128c:	95 1f       	adc	r25, r21
    128e:	c8 17       	cp	r28, r24
    1290:	d9 07       	cpc	r29, r25
    1292:	59 f4       	brne	.+22     	; 0x12aa <free+0x82>
    1294:	88 81       	ld	r24, Y
    1296:	99 81       	ldd	r25, Y+1	; 0x01
    1298:	84 0f       	add	r24, r20
    129a:	95 1f       	adc	r25, r21
    129c:	02 96       	adiw	r24, 0x02	; 2
    129e:	91 83       	std	Z+1, r25	; 0x01
    12a0:	80 83       	st	Z, r24
    12a2:	8a 81       	ldd	r24, Y+2	; 0x02
    12a4:	9b 81       	ldd	r25, Y+3	; 0x03
    12a6:	93 83       	std	Z+3, r25	; 0x03
    12a8:	82 83       	std	Z+2, r24	; 0x02
    12aa:	21 15       	cp	r18, r1
    12ac:	31 05       	cpc	r19, r1
    12ae:	29 f4       	brne	.+10     	; 0x12ba <free+0x92>
    12b0:	f0 93 b6 01 	sts	0x01B6, r31	; 0x8001b6 <__flp+0x1>
    12b4:	e0 93 b5 01 	sts	0x01B5, r30	; 0x8001b5 <__flp>
    12b8:	3d c0       	rjmp	.+122    	; 0x1334 <free+0x10c>
    12ba:	e9 01       	movw	r28, r18
    12bc:	fb 83       	std	Y+3, r31	; 0x03
    12be:	ea 83       	std	Y+2, r30	; 0x02
    12c0:	49 91       	ld	r20, Y+
    12c2:	59 91       	ld	r21, Y+
    12c4:	c4 0f       	add	r28, r20
    12c6:	d5 1f       	adc	r29, r21
    12c8:	ec 17       	cp	r30, r28
    12ca:	fd 07       	cpc	r31, r29
    12cc:	61 f4       	brne	.+24     	; 0x12e6 <free+0xbe>
    12ce:	80 81       	ld	r24, Z
    12d0:	91 81       	ldd	r25, Z+1	; 0x01
    12d2:	84 0f       	add	r24, r20
    12d4:	95 1f       	adc	r25, r21
    12d6:	02 96       	adiw	r24, 0x02	; 2
    12d8:	e9 01       	movw	r28, r18
    12da:	99 83       	std	Y+1, r25	; 0x01
    12dc:	88 83       	st	Y, r24
    12de:	82 81       	ldd	r24, Z+2	; 0x02
    12e0:	93 81       	ldd	r25, Z+3	; 0x03
    12e2:	9b 83       	std	Y+3, r25	; 0x03
    12e4:	8a 83       	std	Y+2, r24	; 0x02
    12e6:	e0 e0       	ldi	r30, 0x00	; 0
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	12 96       	adiw	r26, 0x02	; 2
    12ec:	8d 91       	ld	r24, X+
    12ee:	9c 91       	ld	r25, X
    12f0:	13 97       	sbiw	r26, 0x03	; 3
    12f2:	00 97       	sbiw	r24, 0x00	; 0
    12f4:	19 f0       	breq	.+6      	; 0x12fc <free+0xd4>
    12f6:	fd 01       	movw	r30, r26
    12f8:	dc 01       	movw	r26, r24
    12fa:	f7 cf       	rjmp	.-18     	; 0x12ea <free+0xc2>
    12fc:	8d 91       	ld	r24, X+
    12fe:	9c 91       	ld	r25, X
    1300:	11 97       	sbiw	r26, 0x01	; 1
    1302:	9d 01       	movw	r18, r26
    1304:	2e 5f       	subi	r18, 0xFE	; 254
    1306:	3f 4f       	sbci	r19, 0xFF	; 255
    1308:	82 0f       	add	r24, r18
    130a:	93 1f       	adc	r25, r19
    130c:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <__brkval>
    1310:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <__brkval+0x1>
    1314:	28 17       	cp	r18, r24
    1316:	39 07       	cpc	r19, r25
    1318:	69 f4       	brne	.+26     	; 0x1334 <free+0x10c>
    131a:	30 97       	sbiw	r30, 0x00	; 0
    131c:	29 f4       	brne	.+10     	; 0x1328 <free+0x100>
    131e:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <__flp+0x1>
    1322:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <__flp>
    1326:	02 c0       	rjmp	.+4      	; 0x132c <free+0x104>
    1328:	13 82       	std	Z+3, r1	; 0x03
    132a:	12 82       	std	Z+2, r1	; 0x02
    132c:	b0 93 b4 01 	sts	0x01B4, r27	; 0x8001b4 <__brkval+0x1>
    1330:	a0 93 b3 01 	sts	0x01B3, r26	; 0x8001b3 <__brkval>
    1334:	df 91       	pop	r29
    1336:	cf 91       	pop	r28
    1338:	08 95       	ret

0000133a <strnlen_P>:
    133a:	fc 01       	movw	r30, r24
    133c:	05 90       	lpm	r0, Z+
    133e:	61 50       	subi	r22, 0x01	; 1
    1340:	70 40       	sbci	r23, 0x00	; 0
    1342:	01 10       	cpse	r0, r1
    1344:	d8 f7       	brcc	.-10     	; 0x133c <strnlen_P+0x2>
    1346:	80 95       	com	r24
    1348:	90 95       	com	r25
    134a:	8e 0f       	add	r24, r30
    134c:	9f 1f       	adc	r25, r31
    134e:	08 95       	ret

00001350 <memset>:
    1350:	dc 01       	movw	r26, r24
    1352:	01 c0       	rjmp	.+2      	; 0x1356 <memset+0x6>
    1354:	6d 93       	st	X+, r22
    1356:	41 50       	subi	r20, 0x01	; 1
    1358:	50 40       	sbci	r21, 0x00	; 0
    135a:	e0 f7       	brcc	.-8      	; 0x1354 <memset+0x4>
    135c:	08 95       	ret

0000135e <strnlen>:
    135e:	fc 01       	movw	r30, r24
    1360:	61 50       	subi	r22, 0x01	; 1
    1362:	70 40       	sbci	r23, 0x00	; 0
    1364:	01 90       	ld	r0, Z+
    1366:	01 10       	cpse	r0, r1
    1368:	d8 f7       	brcc	.-10     	; 0x1360 <strnlen+0x2>
    136a:	80 95       	com	r24
    136c:	90 95       	com	r25
    136e:	8e 0f       	add	r24, r30
    1370:	9f 1f       	adc	r25, r31
    1372:	08 95       	ret

00001374 <fputc>:
    1374:	0f 93       	push	r16
    1376:	1f 93       	push	r17
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
    137c:	fb 01       	movw	r30, r22
    137e:	23 81       	ldd	r18, Z+3	; 0x03
    1380:	21 fd       	sbrc	r18, 1
    1382:	03 c0       	rjmp	.+6      	; 0x138a <fputc+0x16>
    1384:	8f ef       	ldi	r24, 0xFF	; 255
    1386:	9f ef       	ldi	r25, 0xFF	; 255
    1388:	2c c0       	rjmp	.+88     	; 0x13e2 <fputc+0x6e>
    138a:	22 ff       	sbrs	r18, 2
    138c:	16 c0       	rjmp	.+44     	; 0x13ba <fputc+0x46>
    138e:	46 81       	ldd	r20, Z+6	; 0x06
    1390:	57 81       	ldd	r21, Z+7	; 0x07
    1392:	24 81       	ldd	r18, Z+4	; 0x04
    1394:	35 81       	ldd	r19, Z+5	; 0x05
    1396:	42 17       	cp	r20, r18
    1398:	53 07       	cpc	r21, r19
    139a:	44 f4       	brge	.+16     	; 0x13ac <fputc+0x38>
    139c:	a0 81       	ld	r26, Z
    139e:	b1 81       	ldd	r27, Z+1	; 0x01
    13a0:	9d 01       	movw	r18, r26
    13a2:	2f 5f       	subi	r18, 0xFF	; 255
    13a4:	3f 4f       	sbci	r19, 0xFF	; 255
    13a6:	31 83       	std	Z+1, r19	; 0x01
    13a8:	20 83       	st	Z, r18
    13aa:	8c 93       	st	X, r24
    13ac:	26 81       	ldd	r18, Z+6	; 0x06
    13ae:	37 81       	ldd	r19, Z+7	; 0x07
    13b0:	2f 5f       	subi	r18, 0xFF	; 255
    13b2:	3f 4f       	sbci	r19, 0xFF	; 255
    13b4:	37 83       	std	Z+7, r19	; 0x07
    13b6:	26 83       	std	Z+6, r18	; 0x06
    13b8:	14 c0       	rjmp	.+40     	; 0x13e2 <fputc+0x6e>
    13ba:	8b 01       	movw	r16, r22
    13bc:	ec 01       	movw	r28, r24
    13be:	fb 01       	movw	r30, r22
    13c0:	00 84       	ldd	r0, Z+8	; 0x08
    13c2:	f1 85       	ldd	r31, Z+9	; 0x09
    13c4:	e0 2d       	mov	r30, r0
    13c6:	09 95       	icall
    13c8:	89 2b       	or	r24, r25
    13ca:	e1 f6       	brne	.-72     	; 0x1384 <fputc+0x10>
    13cc:	d8 01       	movw	r26, r16
    13ce:	16 96       	adiw	r26, 0x06	; 6
    13d0:	8d 91       	ld	r24, X+
    13d2:	9c 91       	ld	r25, X
    13d4:	17 97       	sbiw	r26, 0x07	; 7
    13d6:	01 96       	adiw	r24, 0x01	; 1
    13d8:	17 96       	adiw	r26, 0x07	; 7
    13da:	9c 93       	st	X, r25
    13dc:	8e 93       	st	-X, r24
    13de:	16 97       	sbiw	r26, 0x06	; 6
    13e0:	ce 01       	movw	r24, r28
    13e2:	df 91       	pop	r29
    13e4:	cf 91       	pop	r28
    13e6:	1f 91       	pop	r17
    13e8:	0f 91       	pop	r16
    13ea:	08 95       	ret

000013ec <__ultoa_invert>:
    13ec:	fa 01       	movw	r30, r20
    13ee:	aa 27       	eor	r26, r26
    13f0:	28 30       	cpi	r18, 0x08	; 8
    13f2:	51 f1       	breq	.+84     	; 0x1448 <__ultoa_invert+0x5c>
    13f4:	20 31       	cpi	r18, 0x10	; 16
    13f6:	81 f1       	breq	.+96     	; 0x1458 <__ultoa_invert+0x6c>
    13f8:	e8 94       	clt
    13fa:	6f 93       	push	r22
    13fc:	6e 7f       	andi	r22, 0xFE	; 254
    13fe:	6e 5f       	subi	r22, 0xFE	; 254
    1400:	7f 4f       	sbci	r23, 0xFF	; 255
    1402:	8f 4f       	sbci	r24, 0xFF	; 255
    1404:	9f 4f       	sbci	r25, 0xFF	; 255
    1406:	af 4f       	sbci	r26, 0xFF	; 255
    1408:	b1 e0       	ldi	r27, 0x01	; 1
    140a:	3e d0       	rcall	.+124    	; 0x1488 <__ultoa_invert+0x9c>
    140c:	b4 e0       	ldi	r27, 0x04	; 4
    140e:	3c d0       	rcall	.+120    	; 0x1488 <__ultoa_invert+0x9c>
    1410:	67 0f       	add	r22, r23
    1412:	78 1f       	adc	r23, r24
    1414:	89 1f       	adc	r24, r25
    1416:	9a 1f       	adc	r25, r26
    1418:	a1 1d       	adc	r26, r1
    141a:	68 0f       	add	r22, r24
    141c:	79 1f       	adc	r23, r25
    141e:	8a 1f       	adc	r24, r26
    1420:	91 1d       	adc	r25, r1
    1422:	a1 1d       	adc	r26, r1
    1424:	6a 0f       	add	r22, r26
    1426:	71 1d       	adc	r23, r1
    1428:	81 1d       	adc	r24, r1
    142a:	91 1d       	adc	r25, r1
    142c:	a1 1d       	adc	r26, r1
    142e:	20 d0       	rcall	.+64     	; 0x1470 <__ultoa_invert+0x84>
    1430:	09 f4       	brne	.+2      	; 0x1434 <__ultoa_invert+0x48>
    1432:	68 94       	set
    1434:	3f 91       	pop	r19
    1436:	2a e0       	ldi	r18, 0x0A	; 10
    1438:	26 9f       	mul	r18, r22
    143a:	11 24       	eor	r1, r1
    143c:	30 19       	sub	r19, r0
    143e:	30 5d       	subi	r19, 0xD0	; 208
    1440:	31 93       	st	Z+, r19
    1442:	de f6       	brtc	.-74     	; 0x13fa <__ultoa_invert+0xe>
    1444:	cf 01       	movw	r24, r30
    1446:	08 95       	ret
    1448:	46 2f       	mov	r20, r22
    144a:	47 70       	andi	r20, 0x07	; 7
    144c:	40 5d       	subi	r20, 0xD0	; 208
    144e:	41 93       	st	Z+, r20
    1450:	b3 e0       	ldi	r27, 0x03	; 3
    1452:	0f d0       	rcall	.+30     	; 0x1472 <__ultoa_invert+0x86>
    1454:	c9 f7       	brne	.-14     	; 0x1448 <__ultoa_invert+0x5c>
    1456:	f6 cf       	rjmp	.-20     	; 0x1444 <__ultoa_invert+0x58>
    1458:	46 2f       	mov	r20, r22
    145a:	4f 70       	andi	r20, 0x0F	; 15
    145c:	40 5d       	subi	r20, 0xD0	; 208
    145e:	4a 33       	cpi	r20, 0x3A	; 58
    1460:	18 f0       	brcs	.+6      	; 0x1468 <__ultoa_invert+0x7c>
    1462:	49 5d       	subi	r20, 0xD9	; 217
    1464:	31 fd       	sbrc	r19, 1
    1466:	40 52       	subi	r20, 0x20	; 32
    1468:	41 93       	st	Z+, r20
    146a:	02 d0       	rcall	.+4      	; 0x1470 <__ultoa_invert+0x84>
    146c:	a9 f7       	brne	.-22     	; 0x1458 <__ultoa_invert+0x6c>
    146e:	ea cf       	rjmp	.-44     	; 0x1444 <__ultoa_invert+0x58>
    1470:	b4 e0       	ldi	r27, 0x04	; 4
    1472:	a6 95       	lsr	r26
    1474:	97 95       	ror	r25
    1476:	87 95       	ror	r24
    1478:	77 95       	ror	r23
    147a:	67 95       	ror	r22
    147c:	ba 95       	dec	r27
    147e:	c9 f7       	brne	.-14     	; 0x1472 <__ultoa_invert+0x86>
    1480:	00 97       	sbiw	r24, 0x00	; 0
    1482:	61 05       	cpc	r22, r1
    1484:	71 05       	cpc	r23, r1
    1486:	08 95       	ret
    1488:	9b 01       	movw	r18, r22
    148a:	ac 01       	movw	r20, r24
    148c:	0a 2e       	mov	r0, r26
    148e:	06 94       	lsr	r0
    1490:	57 95       	ror	r21
    1492:	47 95       	ror	r20
    1494:	37 95       	ror	r19
    1496:	27 95       	ror	r18
    1498:	ba 95       	dec	r27
    149a:	c9 f7       	brne	.-14     	; 0x148e <__ultoa_invert+0xa2>
    149c:	62 0f       	add	r22, r18
    149e:	73 1f       	adc	r23, r19
    14a0:	84 1f       	adc	r24, r20
    14a2:	95 1f       	adc	r25, r21
    14a4:	a0 1d       	adc	r26, r0
    14a6:	08 95       	ret

000014a8 <__prologue_saves__>:
    14a8:	2f 92       	push	r2
    14aa:	3f 92       	push	r3
    14ac:	4f 92       	push	r4
    14ae:	5f 92       	push	r5
    14b0:	6f 92       	push	r6
    14b2:	7f 92       	push	r7
    14b4:	8f 92       	push	r8
    14b6:	9f 92       	push	r9
    14b8:	af 92       	push	r10
    14ba:	bf 92       	push	r11
    14bc:	cf 92       	push	r12
    14be:	df 92       	push	r13
    14c0:	ef 92       	push	r14
    14c2:	ff 92       	push	r15
    14c4:	0f 93       	push	r16
    14c6:	1f 93       	push	r17
    14c8:	cf 93       	push	r28
    14ca:	df 93       	push	r29
    14cc:	cd b7       	in	r28, 0x3d	; 61
    14ce:	de b7       	in	r29, 0x3e	; 62
    14d0:	ca 1b       	sub	r28, r26
    14d2:	db 0b       	sbc	r29, r27
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	cd bf       	out	0x3d, r28	; 61
    14de:	09 94       	ijmp

000014e0 <__epilogue_restores__>:
    14e0:	2a 88       	ldd	r2, Y+18	; 0x12
    14e2:	39 88       	ldd	r3, Y+17	; 0x11
    14e4:	48 88       	ldd	r4, Y+16	; 0x10
    14e6:	5f 84       	ldd	r5, Y+15	; 0x0f
    14e8:	6e 84       	ldd	r6, Y+14	; 0x0e
    14ea:	7d 84       	ldd	r7, Y+13	; 0x0d
    14ec:	8c 84       	ldd	r8, Y+12	; 0x0c
    14ee:	9b 84       	ldd	r9, Y+11	; 0x0b
    14f0:	aa 84       	ldd	r10, Y+10	; 0x0a
    14f2:	b9 84       	ldd	r11, Y+9	; 0x09
    14f4:	c8 84       	ldd	r12, Y+8	; 0x08
    14f6:	df 80       	ldd	r13, Y+7	; 0x07
    14f8:	ee 80       	ldd	r14, Y+6	; 0x06
    14fa:	fd 80       	ldd	r15, Y+5	; 0x05
    14fc:	0c 81       	ldd	r16, Y+4	; 0x04
    14fe:	1b 81       	ldd	r17, Y+3	; 0x03
    1500:	aa 81       	ldd	r26, Y+2	; 0x02
    1502:	b9 81       	ldd	r27, Y+1	; 0x01
    1504:	ce 0f       	add	r28, r30
    1506:	d1 1d       	adc	r29, r1
    1508:	0f b6       	in	r0, 0x3f	; 63
    150a:	f8 94       	cli
    150c:	de bf       	out	0x3e, r29	; 62
    150e:	0f be       	out	0x3f, r0	; 63
    1510:	cd bf       	out	0x3d, r28	; 61
    1512:	ed 01       	movw	r28, r26
    1514:	08 95       	ret

00001516 <_exit>:
    1516:	f8 94       	cli

00001518 <__stop_program>:
    1518:	ff cf       	rjmp	.-2      	; 0x1518 <__stop_program>
